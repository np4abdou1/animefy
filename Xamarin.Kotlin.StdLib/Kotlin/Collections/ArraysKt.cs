using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using Android.Runtime;
using Java.Interop;
using Java.Lang;
using Java.Util;
using Kotlin.Jvm.Functions;
using Kotlin.Random;
using Kotlin.Ranges;
using Kotlin.Sequences;

namespace Kotlin.Collections
{
	// Token: 0x020002BC RID: 700
	[NullableContext(1)]
	[Nullable(0)]
	[Register("kotlin/collections/ArraysKt", DoNotGenerateAcw = true)]
	public sealed class ArraysKt : Java.Lang.Object
	{
		// Token: 0x1700097C RID: 2428
		// (get) Token: 0x060020B1 RID: 8369 RVA: 0x0006CD04 File Offset: 0x0006AF04
		internal static IntPtr class_ref
		{
			get
			{
				return ArraysKt._members.JniPeerType.PeerReference.Handle;
			}
		}

		// Token: 0x1700097D RID: 2429
		// (get) Token: 0x060020B2 RID: 8370 RVA: 0x0006CD28 File Offset: 0x0006AF28
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override JniPeerMembers JniPeerMembers
		{
			get
			{
				return ArraysKt._members;
			}
		}

		// Token: 0x1700097E RID: 2430
		// (get) Token: 0x060020B3 RID: 8371 RVA: 0x0006CD30 File Offset: 0x0006AF30
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		[EditorBrowsable(EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass
		{
			get
			{
				return ArraysKt._members.JniPeerType.PeerReference.Handle;
			}
		}

		// Token: 0x1700097F RID: 2431
		// (get) Token: 0x060020B4 RID: 8372 RVA: 0x0006CD54 File Offset: 0x0006AF54
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		[EditorBrowsable(EditorBrowsableState.Never)]
		protected override Type ThresholdType
		{
			get
			{
				return ArraysKt._members.ManagedPeerType;
			}
		}

		// Token: 0x060020B5 RID: 8373 RVA: 0x0006CD60 File Offset: 0x0006AF60
		internal ArraysKt(IntPtr javaReference, JniHandleOwnership transfer) : base(javaReference, transfer)
		{
		}

		// Token: 0x060020B6 RID: 8374 RVA: 0x0006CD6C File Offset: 0x0006AF6C
		[Register("all", "([ZLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool All(bool[] _this_all, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_all);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("all.([ZLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_all != null)
				{
					JNIEnv.CopyArray(intPtr, _this_all);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_all);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020B7 RID: 8375 RVA: 0x0006CE08 File Offset: 0x0006B008
		[Register("all", "([BLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool All(byte[] _this_all, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_all);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("all.([BLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_all != null)
				{
					JNIEnv.CopyArray(intPtr, _this_all);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_all);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020B8 RID: 8376 RVA: 0x0006CEA4 File Offset: 0x0006B0A4
		[Register("all", "([CLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool All(char[] _this_all, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_all);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("all.([CLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_all != null)
				{
					JNIEnv.CopyArray(intPtr, _this_all);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_all);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020B9 RID: 8377 RVA: 0x0006CF40 File Offset: 0x0006B140
		[Register("all", "([DLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool All(double[] _this_all, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_all);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("all.([DLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_all != null)
				{
					JNIEnv.CopyArray(intPtr, _this_all);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_all);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020BA RID: 8378 RVA: 0x0006CFDC File Offset: 0x0006B1DC
		[Register("all", "([FLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool All(float[] _this_all, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_all);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("all.([FLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_all != null)
				{
					JNIEnv.CopyArray(intPtr, _this_all);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_all);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020BB RID: 8379 RVA: 0x0006D078 File Offset: 0x0006B278
		[Register("all", "([ILkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool All(int[] _this_all, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_all);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("all.([ILkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_all != null)
				{
					JNIEnv.CopyArray(intPtr, _this_all);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_all);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020BC RID: 8380 RVA: 0x0006D114 File Offset: 0x0006B314
		[Register("all", "([JLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool All(long[] _this_all, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_all);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("all.([JLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_all != null)
				{
					JNIEnv.CopyArray(intPtr, _this_all);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_all);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020BD RID: 8381 RVA: 0x0006D1B0 File Offset: 0x0006B3B0
		[Register("all", "([SLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool All(short[] _this_all, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_all);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("all.([SLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_all != null)
				{
					JNIEnv.CopyArray(intPtr, _this_all);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_all);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020BE RID: 8382 RVA: 0x0006D24C File Offset: 0x0006B44C
		[Register("all", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static bool All(Java.Lang.Object[] _this_all, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_all);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("all.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_all != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_all);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_all);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020BF RID: 8383 RVA: 0x0006D2E8 File Offset: 0x0006B4E8
		[Register("any", "([Z)Z", "")]
		public unsafe static bool Any(bool[] _this_any)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([Z)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
			}
			return result;
		}

		// Token: 0x060020C0 RID: 8384 RVA: 0x0006D354 File Offset: 0x0006B554
		[Register("any", "([ZLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool Any(bool[] _this_any, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([ZLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020C1 RID: 8385 RVA: 0x0006D3F0 File Offset: 0x0006B5F0
		[Register("any", "([B)Z", "")]
		public unsafe static bool Any(byte[] _this_any)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([B)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
			}
			return result;
		}

		// Token: 0x060020C2 RID: 8386 RVA: 0x0006D45C File Offset: 0x0006B65C
		[Register("any", "([BLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool Any(byte[] _this_any, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([BLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020C3 RID: 8387 RVA: 0x0006D4F8 File Offset: 0x0006B6F8
		[Register("any", "([C)Z", "")]
		public unsafe static bool Any(char[] _this_any)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([C)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
			}
			return result;
		}

		// Token: 0x060020C4 RID: 8388 RVA: 0x0006D564 File Offset: 0x0006B764
		[Register("any", "([CLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool Any(char[] _this_any, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([CLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020C5 RID: 8389 RVA: 0x0006D600 File Offset: 0x0006B800
		[Register("any", "([D)Z", "")]
		public unsafe static bool Any(double[] _this_any)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([D)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
			}
			return result;
		}

		// Token: 0x060020C6 RID: 8390 RVA: 0x0006D66C File Offset: 0x0006B86C
		[Register("any", "([DLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool Any(double[] _this_any, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([DLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020C7 RID: 8391 RVA: 0x0006D708 File Offset: 0x0006B908
		[Register("any", "([F)Z", "")]
		public unsafe static bool Any(float[] _this_any)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([F)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
			}
			return result;
		}

		// Token: 0x060020C8 RID: 8392 RVA: 0x0006D774 File Offset: 0x0006B974
		[Register("any", "([FLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool Any(float[] _this_any, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([FLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020C9 RID: 8393 RVA: 0x0006D810 File Offset: 0x0006BA10
		[Register("any", "([I)Z", "")]
		public unsafe static bool Any(int[] _this_any)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([I)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
			}
			return result;
		}

		// Token: 0x060020CA RID: 8394 RVA: 0x0006D87C File Offset: 0x0006BA7C
		[Register("any", "([ILkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool Any(int[] _this_any, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([ILkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020CB RID: 8395 RVA: 0x0006D918 File Offset: 0x0006BB18
		[Register("any", "([J)Z", "")]
		public unsafe static bool Any(long[] _this_any)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([J)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
			}
			return result;
		}

		// Token: 0x060020CC RID: 8396 RVA: 0x0006D984 File Offset: 0x0006BB84
		[Register("any", "([JLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool Any(long[] _this_any, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([JLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020CD RID: 8397 RVA: 0x0006DA20 File Offset: 0x0006BC20
		[Register("any", "([S)Z", "")]
		public unsafe static bool Any(short[] _this_any)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([S)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
			}
			return result;
		}

		// Token: 0x060020CE RID: 8398 RVA: 0x0006DA8C File Offset: 0x0006BC8C
		[Register("any", "([SLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool Any(short[] _this_any, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([SLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020CF RID: 8399 RVA: 0x0006DB28 File Offset: 0x0006BD28
		[Register("any", "([Ljava/lang/Object;)Z", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static bool Any(Java.Lang.Object[] _this_any)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([Ljava/lang/Object;)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
			}
			return result;
		}

		// Token: 0x060020D0 RID: 8400 RVA: 0x0006DB94 File Offset: 0x0006BD94
		[Register("any", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static bool Any(Java.Lang.Object[] _this_any, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_any);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("any.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_any != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_any);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_any);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060020D1 RID: 8401 RVA: 0x0006DC30 File Offset: 0x0006BE30
		[Register("asIterable", "([Z)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable AsIterable(bool[] _this_asIterable)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asIterable);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asIterable.([Z)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asIterable != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asIterable);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asIterable);
			}
			return @object;
		}

		// Token: 0x060020D2 RID: 8402 RVA: 0x0006DCAC File Offset: 0x0006BEAC
		[Register("asIterable", "([B)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable AsIterable(byte[] _this_asIterable)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asIterable);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asIterable.([B)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asIterable != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asIterable);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asIterable);
			}
			return @object;
		}

		// Token: 0x060020D3 RID: 8403 RVA: 0x0006DD28 File Offset: 0x0006BF28
		[Register("asIterable", "([C)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable AsIterable(char[] _this_asIterable)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asIterable);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asIterable.([C)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asIterable != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asIterable);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asIterable);
			}
			return @object;
		}

		// Token: 0x060020D4 RID: 8404 RVA: 0x0006DDA4 File Offset: 0x0006BFA4
		[Register("asIterable", "([D)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable AsIterable(double[] _this_asIterable)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asIterable);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asIterable.([D)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asIterable != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asIterable);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asIterable);
			}
			return @object;
		}

		// Token: 0x060020D5 RID: 8405 RVA: 0x0006DE20 File Offset: 0x0006C020
		[Register("asIterable", "([F)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable AsIterable(float[] _this_asIterable)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asIterable);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asIterable.([F)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asIterable != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asIterable);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asIterable);
			}
			return @object;
		}

		// Token: 0x060020D6 RID: 8406 RVA: 0x0006DE9C File Offset: 0x0006C09C
		[Register("asIterable", "([I)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable AsIterable(int[] _this_asIterable)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asIterable);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asIterable.([I)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asIterable != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asIterable);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asIterable);
			}
			return @object;
		}

		// Token: 0x060020D7 RID: 8407 RVA: 0x0006DF18 File Offset: 0x0006C118
		[Register("asIterable", "([J)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable AsIterable(long[] _this_asIterable)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asIterable);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asIterable.([J)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asIterable != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asIterable);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asIterable);
			}
			return @object;
		}

		// Token: 0x060020D8 RID: 8408 RVA: 0x0006DF94 File Offset: 0x0006C194
		[Register("asIterable", "([S)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable AsIterable(short[] _this_asIterable)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asIterable);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asIterable.([S)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asIterable != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asIterable);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asIterable);
			}
			return @object;
		}

		// Token: 0x060020D9 RID: 8409 RVA: 0x0006E010 File Offset: 0x0006C210
		[Register("asIterable", "([Ljava/lang/Object;)Ljava/lang/Iterable;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static IIterable AsIterable(Java.Lang.Object[] _this_asIterable)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_asIterable);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asIterable.([Ljava/lang/Object;)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asIterable != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_asIterable);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asIterable);
			}
			return @object;
		}

		// Token: 0x060020DA RID: 8410 RVA: 0x0006E08C File Offset: 0x0006C28C
		[Register("asSequence", "([Z)Lkotlin/sequences/Sequence;", "")]
		public unsafe static ISequence AsSequence(bool[] _this_asSequence)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asSequence);
			ISequence @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISequence>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asSequence.([Z)Lkotlin/sequences/Sequence;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asSequence != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asSequence);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asSequence);
			}
			return @object;
		}

		// Token: 0x060020DB RID: 8411 RVA: 0x0006E108 File Offset: 0x0006C308
		[Register("asSequence", "([B)Lkotlin/sequences/Sequence;", "")]
		public unsafe static ISequence AsSequence(byte[] _this_asSequence)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asSequence);
			ISequence @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISequence>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asSequence.([B)Lkotlin/sequences/Sequence;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asSequence != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asSequence);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asSequence);
			}
			return @object;
		}

		// Token: 0x060020DC RID: 8412 RVA: 0x0006E184 File Offset: 0x0006C384
		[Register("asSequence", "([C)Lkotlin/sequences/Sequence;", "")]
		public unsafe static ISequence AsSequence(char[] _this_asSequence)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asSequence);
			ISequence @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISequence>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asSequence.([C)Lkotlin/sequences/Sequence;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asSequence != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asSequence);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asSequence);
			}
			return @object;
		}

		// Token: 0x060020DD RID: 8413 RVA: 0x0006E200 File Offset: 0x0006C400
		[Register("asSequence", "([D)Lkotlin/sequences/Sequence;", "")]
		public unsafe static ISequence AsSequence(double[] _this_asSequence)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asSequence);
			ISequence @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISequence>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asSequence.([D)Lkotlin/sequences/Sequence;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asSequence != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asSequence);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asSequence);
			}
			return @object;
		}

		// Token: 0x060020DE RID: 8414 RVA: 0x0006E27C File Offset: 0x0006C47C
		[Register("asSequence", "([F)Lkotlin/sequences/Sequence;", "")]
		public unsafe static ISequence AsSequence(float[] _this_asSequence)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asSequence);
			ISequence @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISequence>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asSequence.([F)Lkotlin/sequences/Sequence;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asSequence != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asSequence);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asSequence);
			}
			return @object;
		}

		// Token: 0x060020DF RID: 8415 RVA: 0x0006E2F8 File Offset: 0x0006C4F8
		[Register("asSequence", "([I)Lkotlin/sequences/Sequence;", "")]
		public unsafe static ISequence AsSequence(int[] _this_asSequence)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asSequence);
			ISequence @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISequence>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asSequence.([I)Lkotlin/sequences/Sequence;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asSequence != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asSequence);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asSequence);
			}
			return @object;
		}

		// Token: 0x060020E0 RID: 8416 RVA: 0x0006E374 File Offset: 0x0006C574
		[Register("asSequence", "([J)Lkotlin/sequences/Sequence;", "")]
		public unsafe static ISequence AsSequence(long[] _this_asSequence)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asSequence);
			ISequence @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISequence>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asSequence.([J)Lkotlin/sequences/Sequence;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asSequence != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asSequence);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asSequence);
			}
			return @object;
		}

		// Token: 0x060020E1 RID: 8417 RVA: 0x0006E3F0 File Offset: 0x0006C5F0
		[Register("asSequence", "([S)Lkotlin/sequences/Sequence;", "")]
		public unsafe static ISequence AsSequence(short[] _this_asSequence)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asSequence);
			ISequence @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISequence>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asSequence.([S)Lkotlin/sequences/Sequence;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asSequence != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asSequence);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asSequence);
			}
			return @object;
		}

		// Token: 0x060020E2 RID: 8418 RVA: 0x0006E46C File Offset: 0x0006C66C
		[Register("asSequence", "([Ljava/lang/Object;)Lkotlin/sequences/Sequence;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static ISequence AsSequence(Java.Lang.Object[] _this_asSequence)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_asSequence);
			ISequence @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISequence>(ArraysKt._members.StaticMethods.InvokeObjectMethod("asSequence.([Ljava/lang/Object;)Lkotlin/sequences/Sequence;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asSequence != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_asSequence);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asSequence);
			}
			return @object;
		}

		// Token: 0x060020E3 RID: 8419 RVA: 0x0006E4E8 File Offset: 0x0006C6E8
		[Register("associate", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary Associate(bool[] _this_associate, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associate);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associate.([ZLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associate != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associate);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associate);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060020E4 RID: 8420 RVA: 0x0006E590 File Offset: 0x0006C790
		[Register("associate", "([BLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary Associate(byte[] _this_associate, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associate);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associate.([BLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associate != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associate);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associate);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060020E5 RID: 8421 RVA: 0x0006E638 File Offset: 0x0006C838
		[Register("associate", "([CLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary Associate(char[] _this_associate, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associate);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associate.([CLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associate != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associate);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associate);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060020E6 RID: 8422 RVA: 0x0006E6E0 File Offset: 0x0006C8E0
		[Register("associate", "([DLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary Associate(double[] _this_associate, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associate);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associate.([DLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associate != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associate);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associate);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060020E7 RID: 8423 RVA: 0x0006E788 File Offset: 0x0006C988
		[Register("associate", "([FLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary Associate(float[] _this_associate, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associate);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associate.([FLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associate != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associate);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associate);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060020E8 RID: 8424 RVA: 0x0006E830 File Offset: 0x0006CA30
		[Register("associate", "([ILkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary Associate(int[] _this_associate, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associate);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associate.([ILkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associate != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associate);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associate);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060020E9 RID: 8425 RVA: 0x0006E8D8 File Offset: 0x0006CAD8
		[Register("associate", "([JLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary Associate(long[] _this_associate, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associate);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associate.([JLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associate != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associate);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associate);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060020EA RID: 8426 RVA: 0x0006E980 File Offset: 0x0006CB80
		[Register("associate", "([SLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary Associate(short[] _this_associate, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associate);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associate.([SLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associate != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associate);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associate);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060020EB RID: 8427 RVA: 0x0006EA28 File Offset: 0x0006CC28
		[Register("associate", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K",
			"V"
		})]
		public unsafe static IDictionary Associate(Java.Lang.Object[] _this_associate, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_associate);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associate.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associate != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_associate);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associate);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060020EC RID: 8428 RVA: 0x0006EAD0 File Offset: 0x0006CCD0
		[Register("associateBy", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary AssociateBy(bool[] _this_associateBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([ZLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x060020ED RID: 8429 RVA: 0x0006EB78 File Offset: 0x0006CD78
		[Register("associateBy", "([ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary AssociateBy(bool[] _this_associateBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x060020EE RID: 8430 RVA: 0x0006EC50 File Offset: 0x0006CE50
		[Register("associateBy", "([BLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary AssociateBy(byte[] _this_associateBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([BLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x060020EF RID: 8431 RVA: 0x0006ECF8 File Offset: 0x0006CEF8
		[Register("associateBy", "([BLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary AssociateBy(byte[] _this_associateBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([BLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x060020F0 RID: 8432 RVA: 0x0006EDD0 File Offset: 0x0006CFD0
		[Register("associateBy", "([CLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary AssociateBy(char[] _this_associateBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([CLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x060020F1 RID: 8433 RVA: 0x0006EE78 File Offset: 0x0006D078
		[Register("associateBy", "([CLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary AssociateBy(char[] _this_associateBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([CLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x060020F2 RID: 8434 RVA: 0x0006EF50 File Offset: 0x0006D150
		[Register("associateBy", "([DLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary AssociateBy(double[] _this_associateBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([DLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x060020F3 RID: 8435 RVA: 0x0006EFF8 File Offset: 0x0006D1F8
		[Register("associateBy", "([DLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary AssociateBy(double[] _this_associateBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([DLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x060020F4 RID: 8436 RVA: 0x0006F0D0 File Offset: 0x0006D2D0
		[Register("associateBy", "([FLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary AssociateBy(float[] _this_associateBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([FLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x060020F5 RID: 8437 RVA: 0x0006F178 File Offset: 0x0006D378
		[Register("associateBy", "([FLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary AssociateBy(float[] _this_associateBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([FLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x060020F6 RID: 8438 RVA: 0x0006F250 File Offset: 0x0006D450
		[Register("associateBy", "([ILkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary AssociateBy(int[] _this_associateBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([ILkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x060020F7 RID: 8439 RVA: 0x0006F2F8 File Offset: 0x0006D4F8
		[Register("associateBy", "([ILkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary AssociateBy(int[] _this_associateBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([ILkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x060020F8 RID: 8440 RVA: 0x0006F3D0 File Offset: 0x0006D5D0
		[Register("associateBy", "([JLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary AssociateBy(long[] _this_associateBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([JLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x060020F9 RID: 8441 RVA: 0x0006F478 File Offset: 0x0006D678
		[Register("associateBy", "([JLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary AssociateBy(long[] _this_associateBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([JLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x060020FA RID: 8442 RVA: 0x0006F550 File Offset: 0x0006D750
		[Register("associateBy", "([SLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary AssociateBy(short[] _this_associateBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([SLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x060020FB RID: 8443 RVA: 0x0006F5F8 File Offset: 0x0006D7F8
		[Register("associateBy", "([SLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary AssociateBy(short[] _this_associateBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([SLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x060020FC RID: 8444 RVA: 0x0006F6D0 File Offset: 0x0006D8D0
		[Register("associateBy", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K"
		})]
		public unsafe static IDictionary AssociateBy(Java.Lang.Object[] _this_associateBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x060020FD RID: 8445 RVA: 0x0006F778 File Offset: 0x0006D978
		[Register("associateBy", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K",
			"V"
		})]
		public unsafe static IDictionary AssociateBy(Java.Lang.Object[] _this_associateBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_associateBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateBy.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_associateBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x060020FE RID: 8446 RVA: 0x0006F850 File Offset: 0x0006DA50
		[Register("associateByTo", "([ZLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, ? super java.lang.Boolean>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(bool[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([ZLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x060020FF RID: 8447 RVA: 0x0006F924 File Offset: 0x0006DB24
		[Register("associateByTo", "([ZLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(bool[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([ZLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002100 RID: 8448 RVA: 0x0006FA28 File Offset: 0x0006DC28
		[Register("associateByTo", "([BLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, ? super java.lang.Byte>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(byte[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([BLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002101 RID: 8449 RVA: 0x0006FAFC File Offset: 0x0006DCFC
		[Register("associateByTo", "([BLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(byte[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([BLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002102 RID: 8450 RVA: 0x0006FC00 File Offset: 0x0006DE00
		[Register("associateByTo", "([CLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, ? super java.lang.Character>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(char[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([CLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002103 RID: 8451 RVA: 0x0006FCD4 File Offset: 0x0006DED4
		[Register("associateByTo", "([CLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(char[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([CLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002104 RID: 8452 RVA: 0x0006FDD8 File Offset: 0x0006DFD8
		[Register("associateByTo", "([DLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, ? super java.lang.Double>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(double[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([DLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002105 RID: 8453 RVA: 0x0006FEAC File Offset: 0x0006E0AC
		[Register("associateByTo", "([DLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(double[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([DLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002106 RID: 8454 RVA: 0x0006FFB0 File Offset: 0x0006E1B0
		[Register("associateByTo", "([FLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, ? super java.lang.Float>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(float[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([FLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002107 RID: 8455 RVA: 0x00070084 File Offset: 0x0006E284
		[Register("associateByTo", "([FLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(float[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([FLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002108 RID: 8456 RVA: 0x00070188 File Offset: 0x0006E388
		[Register("associateByTo", "([ILjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, ? super java.lang.Integer>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(int[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([ILjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002109 RID: 8457 RVA: 0x0007025C File Offset: 0x0006E45C
		[Register("associateByTo", "([ILjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(int[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([ILjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x0600210A RID: 8458 RVA: 0x00070360 File Offset: 0x0006E560
		[Register("associateByTo", "([JLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, ? super java.lang.Long>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(long[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([JLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x0600210B RID: 8459 RVA: 0x00070434 File Offset: 0x0006E634
		[Register("associateByTo", "([JLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(long[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([JLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x0600210C RID: 8460 RVA: 0x00070538 File Offset: 0x0006E738
		[Register("associateByTo", "([SLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, ? super java.lang.Short>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(short[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([SLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x0600210D RID: 8461 RVA: 0x0007060C File Offset: 0x0006E80C
		[Register("associateByTo", "([SLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(short[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([SLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x0600210E RID: 8462 RVA: 0x00070710 File Offset: 0x0006E910
		[Register("associateByTo", "([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K",
			"M extends java.util.Map<? super K, ? super T>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(Java.Lang.Object[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x0600210F RID: 8463 RVA: 0x000707E4 File Offset: 0x0006E9E4
		[Register("associateByTo", "([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateByTo(Java.Lang.Object[] _this_associateByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_associateByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateByTo.([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateByTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_associateByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002110 RID: 8464 RVA: 0x000708E8 File Offset: 0x0006EAE8
		[Register("associateTo", "([ZLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateTo(bool[] _this_associateTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateTo.([ZLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002111 RID: 8465 RVA: 0x000709BC File Offset: 0x0006EBBC
		[Register("associateTo", "([BLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateTo(byte[] _this_associateTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateTo.([BLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002112 RID: 8466 RVA: 0x00070A90 File Offset: 0x0006EC90
		[Register("associateTo", "([CLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateTo(char[] _this_associateTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateTo.([CLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002113 RID: 8467 RVA: 0x00070B64 File Offset: 0x0006ED64
		[Register("associateTo", "([DLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateTo(double[] _this_associateTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateTo.([DLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002114 RID: 8468 RVA: 0x00070C38 File Offset: 0x0006EE38
		[Register("associateTo", "([FLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateTo(float[] _this_associateTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateTo.([FLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002115 RID: 8469 RVA: 0x00070D0C File Offset: 0x0006EF0C
		[Register("associateTo", "([ILjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateTo(int[] _this_associateTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateTo.([ILjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002116 RID: 8470 RVA: 0x00070DE0 File Offset: 0x0006EFE0
		[Register("associateTo", "([JLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateTo(long[] _this_associateTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateTo.([JLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002117 RID: 8471 RVA: 0x00070EB4 File Offset: 0x0006F0B4
		[Register("associateTo", "([SLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateTo(short[] _this_associateTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_associateTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateTo.([SLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_associateTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002118 RID: 8472 RVA: 0x00070F88 File Offset: 0x0006F188
		[Register("associateTo", "([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateTo(Java.Lang.Object[] _this_associateTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_associateTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateTo.([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_associateTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002119 RID: 8473 RVA: 0x0007105C File Offset: 0x0006F25C
		[Register("associateWith", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary AssociateWith(Java.Lang.Object[] _this_associateWith, IFunction1 valueSelector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_associateWith);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((valueSelector == null) ? IntPtr.Zero : ((Java.Lang.Object)valueSelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateWith.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateWith != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_associateWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_associateWith);
				GC.KeepAlive(valueSelector);
			}
			return result;
		}

		// Token: 0x0600211A RID: 8474 RVA: 0x00071104 File Offset: 0x0006F304
		[Register("associateWithTo", "([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, ? super V>"
		})]
		public unsafe static Java.Lang.Object AssociateWithTo(Java.Lang.Object[] _this_associateWithTo, Java.Lang.Object destination, IFunction1 valueSelector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_associateWithTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((valueSelector == null) ? IntPtr.Zero : ((Java.Lang.Object)valueSelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("associateWithTo.([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_associateWithTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_associateWithTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_associateWithTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(valueSelector);
			}
			return @object;
		}

		// Token: 0x0600211B RID: 8475 RVA: 0x000711D8 File Offset: 0x0006F3D8
		[Register("average", "([B)D", "")]
		public unsafe static double Average(byte[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("average.([B)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x0600211C RID: 8476 RVA: 0x00071244 File Offset: 0x0006F444
		[Register("average", "([D)D", "")]
		public unsafe static double Average(double[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("average.([D)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x0600211D RID: 8477 RVA: 0x000712B0 File Offset: 0x0006F4B0
		[Register("average", "([F)D", "")]
		public unsafe static double Average(float[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("average.([F)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x0600211E RID: 8478 RVA: 0x0007131C File Offset: 0x0006F51C
		[Register("average", "([I)D", "")]
		public unsafe static double Average(int[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("average.([I)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x0600211F RID: 8479 RVA: 0x00071388 File Offset: 0x0006F588
		[Register("average", "([J)D", "")]
		public unsafe static double Average(long[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("average.([J)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x06002120 RID: 8480 RVA: 0x000713F4 File Offset: 0x0006F5F4
		[Register("average", "([S)D", "")]
		public unsafe static double Average(short[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("average.([S)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x06002121 RID: 8481 RVA: 0x00071460 File Offset: 0x0006F660
		[Register("averageOfByte", "([Ljava/lang/Byte;)D", "")]
		public unsafe static double AverageOfByte(Java.Lang.Byte[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Byte>(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("averageOfByte.([Ljava/lang/Byte;)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray<Java.Lang.Byte>(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x06002122 RID: 8482 RVA: 0x000714CC File Offset: 0x0006F6CC
		[Register("averageOfDouble", "([Ljava/lang/Double;)D", "")]
		public unsafe static double AverageOfDouble(Java.Lang.Double[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Double>(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("averageOfDouble.([Ljava/lang/Double;)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray<Java.Lang.Double>(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x06002123 RID: 8483 RVA: 0x00071538 File Offset: 0x0006F738
		[Register("averageOfFloat", "([Ljava/lang/Float;)D", "")]
		public unsafe static double AverageOfFloat(Float[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray<Float>(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("averageOfFloat.([Ljava/lang/Float;)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray<Float>(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x06002124 RID: 8484 RVA: 0x000715A4 File Offset: 0x0006F7A4
		[Register("averageOfInt", "([Ljava/lang/Integer;)D", "")]
		public unsafe static double AverageOfInt(Integer[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray<Integer>(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("averageOfInt.([Ljava/lang/Integer;)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray<Integer>(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x06002125 RID: 8485 RVA: 0x00071610 File Offset: 0x0006F810
		[Register("averageOfLong", "([Ljava/lang/Long;)D", "")]
		public unsafe static double AverageOfLong(Long[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray<Long>(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("averageOfLong.([Ljava/lang/Long;)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray<Long>(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x06002126 RID: 8486 RVA: 0x0007167C File Offset: 0x0006F87C
		[Register("averageOfShort", "([Ljava/lang/Short;)D", "")]
		public unsafe static double AverageOfShort(Short[] _this_average)
		{
			IntPtr intPtr = JNIEnv.NewArray<Short>(_this_average);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("averageOfShort.([Ljava/lang/Short;)D", ptr);
			}
			finally
			{
				if (_this_average != null)
				{
					JNIEnv.CopyArray<Short>(intPtr, _this_average);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_average);
			}
			return result;
		}

		// Token: 0x06002127 RID: 8487 RVA: 0x000716E8 File Offset: 0x0006F8E8
		[Register("contains", "([ZZ)Z", "")]
		public unsafe static bool Contains(bool[] _this_contains, bool element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_contains);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("contains.([ZZ)Z", ptr);
			}
			finally
			{
				if (_this_contains != null)
				{
					JNIEnv.CopyArray(intPtr, _this_contains);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_contains);
			}
			return result;
		}

		// Token: 0x06002128 RID: 8488 RVA: 0x00071768 File Offset: 0x0006F968
		[Register("contains", "([BB)Z", "")]
		public unsafe static bool Contains(byte[] _this_contains, sbyte element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_contains);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("contains.([BB)Z", ptr);
			}
			finally
			{
				if (_this_contains != null)
				{
					JNIEnv.CopyArray(intPtr, _this_contains);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_contains);
			}
			return result;
		}

		// Token: 0x06002129 RID: 8489 RVA: 0x000717E8 File Offset: 0x0006F9E8
		[Register("contains", "([CC)Z", "")]
		public unsafe static bool Contains(char[] _this_contains, char element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_contains);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("contains.([CC)Z", ptr);
			}
			finally
			{
				if (_this_contains != null)
				{
					JNIEnv.CopyArray(intPtr, _this_contains);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_contains);
			}
			return result;
		}

		// Token: 0x0600212A RID: 8490 RVA: 0x00071868 File Offset: 0x0006FA68
		[Register("contains", "([II)Z", "")]
		public unsafe static bool Contains(int[] _this_contains, int element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_contains);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("contains.([II)Z", ptr);
			}
			finally
			{
				if (_this_contains != null)
				{
					JNIEnv.CopyArray(intPtr, _this_contains);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_contains);
			}
			return result;
		}

		// Token: 0x0600212B RID: 8491 RVA: 0x000718E8 File Offset: 0x0006FAE8
		[Register("contains", "([JJ)Z", "")]
		public unsafe static bool Contains(long[] _this_contains, long element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_contains);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("contains.([JJ)Z", ptr);
			}
			finally
			{
				if (_this_contains != null)
				{
					JNIEnv.CopyArray(intPtr, _this_contains);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_contains);
			}
			return result;
		}

		// Token: 0x0600212C RID: 8492 RVA: 0x00071968 File Offset: 0x0006FB68
		[Register("contains", "([SS)Z", "")]
		public unsafe static bool Contains(short[] _this_contains, short element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_contains);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("contains.([SS)Z", ptr);
			}
			finally
			{
				if (_this_contains != null)
				{
					JNIEnv.CopyArray(intPtr, _this_contains);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_contains);
			}
			return result;
		}

		// Token: 0x0600212D RID: 8493 RVA: 0x000719E8 File Offset: 0x0006FBE8
		[Register("contains", "([Ljava/lang/Object;Ljava/lang/Object;)Z", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static bool Contains(Java.Lang.Object[] _this_contains, [Nullable(2)] Java.Lang.Object element)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_contains);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(element);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("contains.([Ljava/lang/Object;Ljava/lang/Object;)Z", ptr);
			}
			finally
			{
				if (_this_contains != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_contains);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_contains);
				GC.KeepAlive(element);
			}
			return result;
		}

		// Token: 0x0600212E RID: 8494 RVA: 0x00071A7C File Offset: 0x0006FC7C
		[Register("count", "([ZLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int Count(bool[] _this_count, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_count);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("count.([ZLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_count != null)
				{
					JNIEnv.CopyArray(intPtr, _this_count);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_count);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600212F RID: 8495 RVA: 0x00071B18 File Offset: 0x0006FD18
		[Register("count", "([BLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int Count(byte[] _this_count, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_count);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("count.([BLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_count != null)
				{
					JNIEnv.CopyArray(intPtr, _this_count);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_count);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002130 RID: 8496 RVA: 0x00071BB4 File Offset: 0x0006FDB4
		[Register("count", "([CLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int Count(char[] _this_count, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_count);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("count.([CLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_count != null)
				{
					JNIEnv.CopyArray(intPtr, _this_count);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_count);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002131 RID: 8497 RVA: 0x00071C50 File Offset: 0x0006FE50
		[Register("count", "([DLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int Count(double[] _this_count, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_count);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("count.([DLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_count != null)
				{
					JNIEnv.CopyArray(intPtr, _this_count);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_count);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002132 RID: 8498 RVA: 0x00071CEC File Offset: 0x0006FEEC
		[Register("count", "([FLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int Count(float[] _this_count, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_count);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("count.([FLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_count != null)
				{
					JNIEnv.CopyArray(intPtr, _this_count);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_count);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002133 RID: 8499 RVA: 0x00071D88 File Offset: 0x0006FF88
		[Register("count", "([ILkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int Count(int[] _this_count, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_count);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("count.([ILkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_count != null)
				{
					JNIEnv.CopyArray(intPtr, _this_count);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_count);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002134 RID: 8500 RVA: 0x00071E24 File Offset: 0x00070024
		[Register("count", "([JLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int Count(long[] _this_count, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_count);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("count.([JLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_count != null)
				{
					JNIEnv.CopyArray(intPtr, _this_count);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_count);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002135 RID: 8501 RVA: 0x00071EC0 File Offset: 0x000700C0
		[Register("count", "([SLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int Count(short[] _this_count, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_count);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("count.([SLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_count != null)
				{
					JNIEnv.CopyArray(intPtr, _this_count);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_count);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002136 RID: 8502 RVA: 0x00071F5C File Offset: 0x0007015C
		[Register("count", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static int Count(Java.Lang.Object[] _this_count, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_count);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("count.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_count != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_count);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_count);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002137 RID: 8503 RVA: 0x00071FF8 File Offset: 0x000701F8
		[Register("distinct", "([Z)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> Distinct(bool[] _this_distinct)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinct);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinct.([Z)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinct != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinct);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinct);
			}
			return result;
		}

		// Token: 0x06002138 RID: 8504 RVA: 0x00072074 File Offset: 0x00070274
		[Register("distinct", "([B)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> Distinct(byte[] _this_distinct)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinct);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinct.([B)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinct != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinct);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinct);
			}
			return result;
		}

		// Token: 0x06002139 RID: 8505 RVA: 0x000720F0 File Offset: 0x000702F0
		[Register("distinct", "([C)Ljava/util/List;", "")]
		public unsafe static IList<Character> Distinct(char[] _this_distinct)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinct);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinct.([C)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinct != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinct);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinct);
			}
			return result;
		}

		// Token: 0x0600213A RID: 8506 RVA: 0x0007216C File Offset: 0x0007036C
		[Register("distinct", "([D)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> Distinct(double[] _this_distinct)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinct);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinct.([D)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinct != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinct);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinct);
			}
			return result;
		}

		// Token: 0x0600213B RID: 8507 RVA: 0x000721E8 File Offset: 0x000703E8
		[Register("distinct", "([F)Ljava/util/List;", "")]
		public unsafe static IList<Float> Distinct(float[] _this_distinct)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinct);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinct.([F)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinct != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinct);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinct);
			}
			return result;
		}

		// Token: 0x0600213C RID: 8508 RVA: 0x00072264 File Offset: 0x00070464
		[Register("distinct", "([I)Ljava/util/List;", "")]
		public unsafe static IList<Integer> Distinct(int[] _this_distinct)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinct);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinct.([I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinct != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinct);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinct);
			}
			return result;
		}

		// Token: 0x0600213D RID: 8509 RVA: 0x000722E0 File Offset: 0x000704E0
		[Register("distinct", "([J)Ljava/util/List;", "")]
		public unsafe static IList<Long> Distinct(long[] _this_distinct)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinct);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinct.([J)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinct != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinct);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinct);
			}
			return result;
		}

		// Token: 0x0600213E RID: 8510 RVA: 0x0007235C File Offset: 0x0007055C
		[Register("distinct", "([S)Ljava/util/List;", "")]
		public unsafe static IList<Short> Distinct(short[] _this_distinct)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinct);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinct.([S)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinct != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinct);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinct);
			}
			return result;
		}

		// Token: 0x0600213F RID: 8511 RVA: 0x000723D8 File Offset: 0x000705D8
		[Register("distinct", "([Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList Distinct(Java.Lang.Object[] _this_distinct)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_distinct);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinct.([Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinct != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_distinct);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinct);
			}
			return result;
		}

		// Token: 0x06002140 RID: 8512 RVA: 0x00072454 File Offset: 0x00070654
		[Register("distinctBy", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IList<Java.Lang.Boolean> DistinctBy(bool[] _this_distinctBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinctBy);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinctBy.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinctBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinctBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinctBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002141 RID: 8513 RVA: 0x000724FC File Offset: 0x000706FC
		[Register("distinctBy", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IList<Java.Lang.Byte> DistinctBy(byte[] _this_distinctBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinctBy);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinctBy.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinctBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinctBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinctBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002142 RID: 8514 RVA: 0x000725A4 File Offset: 0x000707A4
		[Register("distinctBy", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IList<Character> DistinctBy(char[] _this_distinctBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinctBy);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinctBy.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinctBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinctBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinctBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002143 RID: 8515 RVA: 0x0007264C File Offset: 0x0007084C
		[Register("distinctBy", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IList<Java.Lang.Double> DistinctBy(double[] _this_distinctBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinctBy);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinctBy.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinctBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinctBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinctBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002144 RID: 8516 RVA: 0x000726F4 File Offset: 0x000708F4
		[Register("distinctBy", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IList<Float> DistinctBy(float[] _this_distinctBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinctBy);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinctBy.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinctBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinctBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinctBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002145 RID: 8517 RVA: 0x0007279C File Offset: 0x0007099C
		[Register("distinctBy", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IList<Integer> DistinctBy(int[] _this_distinctBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinctBy);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinctBy.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinctBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinctBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinctBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002146 RID: 8518 RVA: 0x00072844 File Offset: 0x00070A44
		[Register("distinctBy", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IList<Long> DistinctBy(long[] _this_distinctBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinctBy);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinctBy.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinctBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinctBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinctBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002147 RID: 8519 RVA: 0x000728EC File Offset: 0x00070AEC
		[Register("distinctBy", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IList<Short> DistinctBy(short[] _this_distinctBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_distinctBy);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinctBy.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinctBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_distinctBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinctBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002148 RID: 8520 RVA: 0x00072994 File Offset: 0x00070B94
		[Register("distinctBy", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K"
		})]
		public unsafe static System.Collections.IList DistinctBy(Java.Lang.Object[] _this_distinctBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_distinctBy);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("distinctBy.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_distinctBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_distinctBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_distinctBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002149 RID: 8521 RVA: 0x00072A3C File Offset: 0x00070C3C
		[Register("drop", "([ZI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> Drop(bool[] _this_drop, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_drop);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("drop.([ZI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_drop != null)
				{
					JNIEnv.CopyArray(intPtr, _this_drop);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_drop);
			}
			return result;
		}

		// Token: 0x0600214A RID: 8522 RVA: 0x00072ACC File Offset: 0x00070CCC
		[Register("drop", "([BI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> Drop(byte[] _this_drop, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_drop);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("drop.([BI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_drop != null)
				{
					JNIEnv.CopyArray(intPtr, _this_drop);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_drop);
			}
			return result;
		}

		// Token: 0x0600214B RID: 8523 RVA: 0x00072B5C File Offset: 0x00070D5C
		[Register("drop", "([CI)Ljava/util/List;", "")]
		public unsafe static IList<Character> Drop(char[] _this_drop, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_drop);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("drop.([CI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_drop != null)
				{
					JNIEnv.CopyArray(intPtr, _this_drop);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_drop);
			}
			return result;
		}

		// Token: 0x0600214C RID: 8524 RVA: 0x00072BEC File Offset: 0x00070DEC
		[Register("drop", "([DI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> Drop(double[] _this_drop, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_drop);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("drop.([DI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_drop != null)
				{
					JNIEnv.CopyArray(intPtr, _this_drop);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_drop);
			}
			return result;
		}

		// Token: 0x0600214D RID: 8525 RVA: 0x00072C7C File Offset: 0x00070E7C
		[Register("drop", "([FI)Ljava/util/List;", "")]
		public unsafe static IList<Float> Drop(float[] _this_drop, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_drop);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("drop.([FI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_drop != null)
				{
					JNIEnv.CopyArray(intPtr, _this_drop);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_drop);
			}
			return result;
		}

		// Token: 0x0600214E RID: 8526 RVA: 0x00072D0C File Offset: 0x00070F0C
		[Register("drop", "([II)Ljava/util/List;", "")]
		public unsafe static IList<Integer> Drop(int[] _this_drop, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_drop);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("drop.([II)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_drop != null)
				{
					JNIEnv.CopyArray(intPtr, _this_drop);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_drop);
			}
			return result;
		}

		// Token: 0x0600214F RID: 8527 RVA: 0x00072D9C File Offset: 0x00070F9C
		[Register("drop", "([JI)Ljava/util/List;", "")]
		public unsafe static IList<Long> Drop(long[] _this_drop, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_drop);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("drop.([JI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_drop != null)
				{
					JNIEnv.CopyArray(intPtr, _this_drop);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_drop);
			}
			return result;
		}

		// Token: 0x06002150 RID: 8528 RVA: 0x00072E2C File Offset: 0x0007102C
		[Register("drop", "([SI)Ljava/util/List;", "")]
		public unsafe static IList<Short> Drop(short[] _this_drop, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_drop);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("drop.([SI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_drop != null)
				{
					JNIEnv.CopyArray(intPtr, _this_drop);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_drop);
			}
			return result;
		}

		// Token: 0x06002151 RID: 8529 RVA: 0x00072EBC File Offset: 0x000710BC
		[Register("drop", "([Ljava/lang/Object;I)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList Drop(Java.Lang.Object[] _this_drop, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_drop);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("drop.([Ljava/lang/Object;I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_drop != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_drop);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_drop);
			}
			return result;
		}

		// Token: 0x06002152 RID: 8530 RVA: 0x00072F4C File Offset: 0x0007114C
		[Register("dropLast", "([ZI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> DropLast(bool[] _this_dropLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLast);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLast.([ZI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLast);
			}
			return result;
		}

		// Token: 0x06002153 RID: 8531 RVA: 0x00072FDC File Offset: 0x000711DC
		[Register("dropLast", "([BI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> DropLast(byte[] _this_dropLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLast);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLast.([BI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLast);
			}
			return result;
		}

		// Token: 0x06002154 RID: 8532 RVA: 0x0007306C File Offset: 0x0007126C
		[Register("dropLast", "([CI)Ljava/util/List;", "")]
		public unsafe static IList<Character> DropLast(char[] _this_dropLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLast);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLast.([CI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLast);
			}
			return result;
		}

		// Token: 0x06002155 RID: 8533 RVA: 0x000730FC File Offset: 0x000712FC
		[Register("dropLast", "([DI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> DropLast(double[] _this_dropLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLast);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLast.([DI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLast);
			}
			return result;
		}

		// Token: 0x06002156 RID: 8534 RVA: 0x0007318C File Offset: 0x0007138C
		[Register("dropLast", "([FI)Ljava/util/List;", "")]
		public unsafe static IList<Float> DropLast(float[] _this_dropLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLast);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLast.([FI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLast);
			}
			return result;
		}

		// Token: 0x06002157 RID: 8535 RVA: 0x0007321C File Offset: 0x0007141C
		[Register("dropLast", "([II)Ljava/util/List;", "")]
		public unsafe static IList<Integer> DropLast(int[] _this_dropLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLast);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLast.([II)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLast);
			}
			return result;
		}

		// Token: 0x06002158 RID: 8536 RVA: 0x000732AC File Offset: 0x000714AC
		[Register("dropLast", "([JI)Ljava/util/List;", "")]
		public unsafe static IList<Long> DropLast(long[] _this_dropLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLast);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLast.([JI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLast);
			}
			return result;
		}

		// Token: 0x06002159 RID: 8537 RVA: 0x0007333C File Offset: 0x0007153C
		[Register("dropLast", "([SI)Ljava/util/List;", "")]
		public unsafe static IList<Short> DropLast(short[] _this_dropLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLast);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLast.([SI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLast);
			}
			return result;
		}

		// Token: 0x0600215A RID: 8538 RVA: 0x000733CC File Offset: 0x000715CC
		[Register("dropLast", "([Ljava/lang/Object;I)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList DropLast(Java.Lang.Object[] _this_dropLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_dropLast);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLast.([Ljava/lang/Object;I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLast != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_dropLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLast);
			}
			return result;
		}

		// Token: 0x0600215B RID: 8539 RVA: 0x0007345C File Offset: 0x0007165C
		[Register("dropLastWhile", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> DropLastWhile(bool[] _this_dropLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLastWhile);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLastWhile.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600215C RID: 8540 RVA: 0x00073504 File Offset: 0x00071704
		[Register("dropLastWhile", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> DropLastWhile(byte[] _this_dropLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLastWhile);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLastWhile.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600215D RID: 8541 RVA: 0x000735AC File Offset: 0x000717AC
		[Register("dropLastWhile", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Character> DropLastWhile(char[] _this_dropLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLastWhile);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLastWhile.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600215E RID: 8542 RVA: 0x00073654 File Offset: 0x00071854
		[Register("dropLastWhile", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> DropLastWhile(double[] _this_dropLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLastWhile);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLastWhile.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600215F RID: 8543 RVA: 0x000736FC File Offset: 0x000718FC
		[Register("dropLastWhile", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Float> DropLastWhile(float[] _this_dropLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLastWhile);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLastWhile.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002160 RID: 8544 RVA: 0x000737A4 File Offset: 0x000719A4
		[Register("dropLastWhile", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Integer> DropLastWhile(int[] _this_dropLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLastWhile);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLastWhile.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002161 RID: 8545 RVA: 0x0007384C File Offset: 0x00071A4C
		[Register("dropLastWhile", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Long> DropLastWhile(long[] _this_dropLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLastWhile);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLastWhile.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002162 RID: 8546 RVA: 0x000738F4 File Offset: 0x00071AF4
		[Register("dropLastWhile", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Short> DropLastWhile(short[] _this_dropLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropLastWhile);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLastWhile.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002163 RID: 8547 RVA: 0x0007399C File Offset: 0x00071B9C
		[Register("dropLastWhile", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList DropLastWhile(Java.Lang.Object[] _this_dropLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_dropLastWhile);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropLastWhile.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropLastWhile != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_dropLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002164 RID: 8548 RVA: 0x00073A44 File Offset: 0x00071C44
		[Register("dropWhile", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> DropWhile(bool[] _this_dropWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropWhile);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropWhile.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002165 RID: 8549 RVA: 0x00073AEC File Offset: 0x00071CEC
		[Register("dropWhile", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> DropWhile(byte[] _this_dropWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropWhile);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropWhile.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002166 RID: 8550 RVA: 0x00073B94 File Offset: 0x00071D94
		[Register("dropWhile", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Character> DropWhile(char[] _this_dropWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropWhile);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropWhile.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002167 RID: 8551 RVA: 0x00073C3C File Offset: 0x00071E3C
		[Register("dropWhile", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> DropWhile(double[] _this_dropWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropWhile);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropWhile.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002168 RID: 8552 RVA: 0x00073CE4 File Offset: 0x00071EE4
		[Register("dropWhile", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Float> DropWhile(float[] _this_dropWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropWhile);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropWhile.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002169 RID: 8553 RVA: 0x00073D8C File Offset: 0x00071F8C
		[Register("dropWhile", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Integer> DropWhile(int[] _this_dropWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropWhile);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropWhile.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600216A RID: 8554 RVA: 0x00073E34 File Offset: 0x00072034
		[Register("dropWhile", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Long> DropWhile(long[] _this_dropWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropWhile);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropWhile.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600216B RID: 8555 RVA: 0x00073EDC File Offset: 0x000720DC
		[Register("dropWhile", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Short> DropWhile(short[] _this_dropWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_dropWhile);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropWhile.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_dropWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600216C RID: 8556 RVA: 0x00073F84 File Offset: 0x00072184
		[Register("dropWhile", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList DropWhile(Java.Lang.Object[] _this_dropWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_dropWhile);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("dropWhile.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_dropWhile != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_dropWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_dropWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600216D RID: 8557 RVA: 0x0007402C File Offset: 0x0007222C
		[Register("filter", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> Filter(bool[] _this_filter, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filter);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filter.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filter != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filter);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filter);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600216E RID: 8558 RVA: 0x000740D4 File Offset: 0x000722D4
		[Register("filter", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> Filter(byte[] _this_filter, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filter);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filter.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filter != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filter);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filter);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600216F RID: 8559 RVA: 0x0007417C File Offset: 0x0007237C
		[Register("filter", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Character> Filter(char[] _this_filter, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filter);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filter.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filter != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filter);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filter);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002170 RID: 8560 RVA: 0x00074224 File Offset: 0x00072424
		[Register("filter", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> Filter(double[] _this_filter, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filter);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filter.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filter != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filter);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filter);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002171 RID: 8561 RVA: 0x000742CC File Offset: 0x000724CC
		[Register("filter", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Float> Filter(float[] _this_filter, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filter);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filter.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filter != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filter);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filter);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002172 RID: 8562 RVA: 0x00074374 File Offset: 0x00072574
		[Register("filter", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Integer> Filter(int[] _this_filter, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filter);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filter.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filter != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filter);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filter);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002173 RID: 8563 RVA: 0x0007441C File Offset: 0x0007261C
		[Register("filter", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Long> Filter(long[] _this_filter, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filter);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filter.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filter != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filter);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filter);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002174 RID: 8564 RVA: 0x000744C4 File Offset: 0x000726C4
		[Register("filter", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Short> Filter(short[] _this_filter, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filter);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filter.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filter != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filter);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filter);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002175 RID: 8565 RVA: 0x0007456C File Offset: 0x0007276C
		[Register("filter", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList Filter(Java.Lang.Object[] _this_filter, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_filter);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filter.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filter != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_filter);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filter);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002176 RID: 8566 RVA: 0x00074614 File Offset: 0x00072814
		[Register("filterIndexed", "([ZLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> FilterIndexed(bool[] _this_filterIndexed, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexed);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexed.([ZLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterIndexed);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002177 RID: 8567 RVA: 0x000746BC File Offset: 0x000728BC
		[Register("filterIndexed", "([BLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> FilterIndexed(byte[] _this_filterIndexed, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexed);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexed.([BLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterIndexed);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002178 RID: 8568 RVA: 0x00074764 File Offset: 0x00072964
		[Register("filterIndexed", "([CLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		public unsafe static IList<Character> FilterIndexed(char[] _this_filterIndexed, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexed);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexed.([CLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterIndexed);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002179 RID: 8569 RVA: 0x0007480C File Offset: 0x00072A0C
		[Register("filterIndexed", "([DLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> FilterIndexed(double[] _this_filterIndexed, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexed);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexed.([DLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterIndexed);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600217A RID: 8570 RVA: 0x000748B4 File Offset: 0x00072AB4
		[Register("filterIndexed", "([FLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		public unsafe static IList<Float> FilterIndexed(float[] _this_filterIndexed, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexed);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexed.([FLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterIndexed);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600217B RID: 8571 RVA: 0x0007495C File Offset: 0x00072B5C
		[Register("filterIndexed", "([ILkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		public unsafe static IList<Integer> FilterIndexed(int[] _this_filterIndexed, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexed);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexed.([ILkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterIndexed);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600217C RID: 8572 RVA: 0x00074A04 File Offset: 0x00072C04
		[Register("filterIndexed", "([JLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		public unsafe static IList<Long> FilterIndexed(long[] _this_filterIndexed, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexed);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexed.([JLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterIndexed);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600217D RID: 8573 RVA: 0x00074AAC File Offset: 0x00072CAC
		[Register("filterIndexed", "([SLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		public unsafe static IList<Short> FilterIndexed(short[] _this_filterIndexed, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexed);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexed.([SLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterIndexed);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600217E RID: 8574 RVA: 0x00074B54 File Offset: 0x00072D54
		[Register("filterIndexed", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList FilterIndexed(Java.Lang.Object[] _this_filterIndexed, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_filterIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexed.([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_filterIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterIndexed);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600217F RID: 8575 RVA: 0x00074BFC File Offset: 0x00072DFC
		[Register("filterIndexedTo", "([ZLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Boolean>"
		})]
		public unsafe static Java.Lang.Object FilterIndexedTo(bool[] _this_filterIndexedTo, Java.Lang.Object destination, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexedTo.([ZLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002180 RID: 8576 RVA: 0x00074CD0 File Offset: 0x00072ED0
		[Register("filterIndexedTo", "([BLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Byte>"
		})]
		public unsafe static Java.Lang.Object FilterIndexedTo(byte[] _this_filterIndexedTo, Java.Lang.Object destination, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexedTo.([BLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002181 RID: 8577 RVA: 0x00074DA4 File Offset: 0x00072FA4
		[Register("filterIndexedTo", "([CLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Character>"
		})]
		public unsafe static Java.Lang.Object FilterIndexedTo(char[] _this_filterIndexedTo, Java.Lang.Object destination, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexedTo.([CLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002182 RID: 8578 RVA: 0x00074E78 File Offset: 0x00073078
		[Register("filterIndexedTo", "([DLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Double>"
		})]
		public unsafe static Java.Lang.Object FilterIndexedTo(double[] _this_filterIndexedTo, Java.Lang.Object destination, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexedTo.([DLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002183 RID: 8579 RVA: 0x00074F4C File Offset: 0x0007314C
		[Register("filterIndexedTo", "([FLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Float>"
		})]
		public unsafe static Java.Lang.Object FilterIndexedTo(float[] _this_filterIndexedTo, Java.Lang.Object destination, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexedTo.([FLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002184 RID: 8580 RVA: 0x00075020 File Offset: 0x00073220
		[Register("filterIndexedTo", "([ILjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Integer>"
		})]
		public unsafe static Java.Lang.Object FilterIndexedTo(int[] _this_filterIndexedTo, Java.Lang.Object destination, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexedTo.([ILjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002185 RID: 8581 RVA: 0x000750F4 File Offset: 0x000732F4
		[Register("filterIndexedTo", "([JLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Long>"
		})]
		public unsafe static Java.Lang.Object FilterIndexedTo(long[] _this_filterIndexedTo, Java.Lang.Object destination, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexedTo.([JLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002186 RID: 8582 RVA: 0x000751C8 File Offset: 0x000733C8
		[Register("filterIndexedTo", "([SLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Short>"
		})]
		public unsafe static Java.Lang.Object FilterIndexedTo(short[] _this_filterIndexedTo, Java.Lang.Object destination, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexedTo.([SLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002187 RID: 8583 RVA: 0x0007529C File Offset: 0x0007349C
		[Register("filterIndexedTo", "([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"C extends java.util.Collection<? super T>"
		})]
		public unsafe static Java.Lang.Object FilterIndexedTo(Java.Lang.Object[] _this_filterIndexedTo, Java.Lang.Object destination, IFunction2 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_filterIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIndexedTo.([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIndexedTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_filterIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002188 RID: 8584 RVA: 0x00075370 File Offset: 0x00073570
		[Register("filterNot", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> FilterNot(bool[] _this_filterNot, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNot);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNot.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNot != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNot);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterNot);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002189 RID: 8585 RVA: 0x00075418 File Offset: 0x00073618
		[Register("filterNot", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> FilterNot(byte[] _this_filterNot, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNot);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNot.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNot != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNot);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterNot);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600218A RID: 8586 RVA: 0x000754C0 File Offset: 0x000736C0
		[Register("filterNot", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Character> FilterNot(char[] _this_filterNot, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNot);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNot.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNot != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNot);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterNot);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600218B RID: 8587 RVA: 0x00075568 File Offset: 0x00073768
		[Register("filterNot", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> FilterNot(double[] _this_filterNot, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNot);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNot.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNot != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNot);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterNot);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600218C RID: 8588 RVA: 0x00075610 File Offset: 0x00073810
		[Register("filterNot", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Float> FilterNot(float[] _this_filterNot, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNot);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNot.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNot != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNot);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterNot);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600218D RID: 8589 RVA: 0x000756B8 File Offset: 0x000738B8
		[Register("filterNot", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Integer> FilterNot(int[] _this_filterNot, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNot);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNot.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNot != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNot);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterNot);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600218E RID: 8590 RVA: 0x00075760 File Offset: 0x00073960
		[Register("filterNot", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Long> FilterNot(long[] _this_filterNot, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNot);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNot.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNot != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNot);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterNot);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600218F RID: 8591 RVA: 0x00075808 File Offset: 0x00073A08
		[Register("filterNot", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Short> FilterNot(short[] _this_filterNot, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNot);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNot.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNot != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNot);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterNot);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002190 RID: 8592 RVA: 0x000758B0 File Offset: 0x00073AB0
		[Register("filterNot", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList FilterNot(Java.Lang.Object[] _this_filterNot, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_filterNot);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNot.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNot != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_filterNot);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterNot);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002191 RID: 8593 RVA: 0x00075958 File Offset: 0x00073B58
		[Register("filterNotNull", "([Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList FilterNotNull(Java.Lang.Object[] _this_filterNotNull)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_filterNotNull);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotNull.([Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_filterNotNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterNotNull);
			}
			return result;
		}

		// Token: 0x06002192 RID: 8594 RVA: 0x000759D4 File Offset: 0x00073BD4
		[Register("filterNotNullTo", "([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super T>",
			"T"
		})]
		public unsafe static Java.Lang.Object FilterNotNullTo(Java.Lang.Object[] _this_filterNotNullTo, Java.Lang.Object destination)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_filterNotNullTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotNullTo.([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotNullTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_filterNotNullTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterNotNullTo);
				GC.KeepAlive(destination);
			}
			return @object;
		}

		// Token: 0x06002193 RID: 8595 RVA: 0x00075A78 File Offset: 0x00073C78
		[Register("filterNotTo", "([ZLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Boolean>"
		})]
		public unsafe static Java.Lang.Object FilterNotTo(bool[] _this_filterNotTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNotTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotTo.([ZLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNotTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterNotTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002194 RID: 8596 RVA: 0x00075B4C File Offset: 0x00073D4C
		[Register("filterNotTo", "([BLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Byte>"
		})]
		public unsafe static Java.Lang.Object FilterNotTo(byte[] _this_filterNotTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNotTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotTo.([BLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNotTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterNotTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002195 RID: 8597 RVA: 0x00075C20 File Offset: 0x00073E20
		[Register("filterNotTo", "([CLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Character>"
		})]
		public unsafe static Java.Lang.Object FilterNotTo(char[] _this_filterNotTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNotTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotTo.([CLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNotTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterNotTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002196 RID: 8598 RVA: 0x00075CF4 File Offset: 0x00073EF4
		[Register("filterNotTo", "([DLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Double>"
		})]
		public unsafe static Java.Lang.Object FilterNotTo(double[] _this_filterNotTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNotTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotTo.([DLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNotTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterNotTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002197 RID: 8599 RVA: 0x00075DC8 File Offset: 0x00073FC8
		[Register("filterNotTo", "([FLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Float>"
		})]
		public unsafe static Java.Lang.Object FilterNotTo(float[] _this_filterNotTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNotTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotTo.([FLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNotTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterNotTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002198 RID: 8600 RVA: 0x00075E9C File Offset: 0x0007409C
		[Register("filterNotTo", "([ILjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Integer>"
		})]
		public unsafe static Java.Lang.Object FilterNotTo(int[] _this_filterNotTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNotTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotTo.([ILjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNotTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterNotTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002199 RID: 8601 RVA: 0x00075F70 File Offset: 0x00074170
		[Register("filterNotTo", "([JLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Long>"
		})]
		public unsafe static Java.Lang.Object FilterNotTo(long[] _this_filterNotTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNotTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotTo.([JLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNotTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterNotTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x0600219A RID: 8602 RVA: 0x00076044 File Offset: 0x00074244
		[Register("filterNotTo", "([SLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Short>"
		})]
		public unsafe static Java.Lang.Object FilterNotTo(short[] _this_filterNotTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterNotTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotTo.([SLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterNotTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterNotTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x0600219B RID: 8603 RVA: 0x00076118 File Offset: 0x00074318
		[Register("filterNotTo", "([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"C extends java.util.Collection<? super T>"
		})]
		public unsafe static Java.Lang.Object FilterNotTo(Java.Lang.Object[] _this_filterNotTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_filterNotTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterNotTo.([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterNotTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_filterNotTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterNotTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x0600219C RID: 8604 RVA: 0x000761EC File Offset: 0x000743EC
		[Register("filterTo", "([ZLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Boolean>"
		})]
		public unsafe static Java.Lang.Object FilterTo(bool[] _this_filterTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterTo.([ZLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x0600219D RID: 8605 RVA: 0x000762C0 File Offset: 0x000744C0
		[Register("filterTo", "([BLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Byte>"
		})]
		public unsafe static Java.Lang.Object FilterTo(byte[] _this_filterTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterTo.([BLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x0600219E RID: 8606 RVA: 0x00076394 File Offset: 0x00074594
		[Register("filterTo", "([CLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Character>"
		})]
		public unsafe static Java.Lang.Object FilterTo(char[] _this_filterTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterTo.([CLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x0600219F RID: 8607 RVA: 0x00076468 File Offset: 0x00074668
		[Register("filterTo", "([DLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Double>"
		})]
		public unsafe static Java.Lang.Object FilterTo(double[] _this_filterTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterTo.([DLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021A0 RID: 8608 RVA: 0x0007653C File Offset: 0x0007473C
		[Register("filterTo", "([FLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Float>"
		})]
		public unsafe static Java.Lang.Object FilterTo(float[] _this_filterTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterTo.([FLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021A1 RID: 8609 RVA: 0x00076610 File Offset: 0x00074810
		[Register("filterTo", "([ILjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Integer>"
		})]
		public unsafe static Java.Lang.Object FilterTo(int[] _this_filterTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterTo.([ILjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021A2 RID: 8610 RVA: 0x000766E4 File Offset: 0x000748E4
		[Register("filterTo", "([JLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Long>"
		})]
		public unsafe static Java.Lang.Object FilterTo(long[] _this_filterTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterTo.([JLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021A3 RID: 8611 RVA: 0x000767B8 File Offset: 0x000749B8
		[Register("filterTo", "([SLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Short>"
		})]
		public unsafe static Java.Lang.Object FilterTo(short[] _this_filterTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_filterTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterTo.([SLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_filterTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021A4 RID: 8612 RVA: 0x0007688C File Offset: 0x00074A8C
		[Register("filterTo", "([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"C extends java.util.Collection<? super T>"
		})]
		public unsafe static Java.Lang.Object FilterTo(Java.Lang.Object[] _this_filterTo, Java.Lang.Object destination, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_filterTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterTo.([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_filterTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021A5 RID: 8613 RVA: 0x00076960 File Offset: 0x00074B60
		[Register("first", "([Z)Z", "")]
		public unsafe static bool First(bool[] _this_first)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("first.([Z)Z", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
			}
			return result;
		}

		// Token: 0x060021A6 RID: 8614 RVA: 0x000769CC File Offset: 0x00074BCC
		[Register("first", "([ZLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool First(bool[] _this_first, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("first.([ZLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060021A7 RID: 8615 RVA: 0x00076A68 File Offset: 0x00074C68
		[Register("first", "([B)B", "")]
		public unsafe static sbyte First(byte[] _this_first)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("first.([B)B", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
			}
			return result;
		}

		// Token: 0x060021A8 RID: 8616 RVA: 0x00076AD4 File Offset: 0x00074CD4
		[Register("first", "([BLkotlin/jvm/functions/Function1;)B", "")]
		public unsafe static sbyte First(byte[] _this_first, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("first.([BLkotlin/jvm/functions/Function1;)B", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060021A9 RID: 8617 RVA: 0x00076B70 File Offset: 0x00074D70
		[Register("first", "([C)C", "")]
		public unsafe static char First(char[] _this_first)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("first.([C)C", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
			}
			return result;
		}

		// Token: 0x060021AA RID: 8618 RVA: 0x00076BDC File Offset: 0x00074DDC
		[Register("first", "([CLkotlin/jvm/functions/Function1;)C", "")]
		public unsafe static char First(char[] _this_first, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("first.([CLkotlin/jvm/functions/Function1;)C", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060021AB RID: 8619 RVA: 0x00076C78 File Offset: 0x00074E78
		[Register("first", "([D)D", "")]
		public unsafe static double First(double[] _this_first)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("first.([D)D", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
			}
			return result;
		}

		// Token: 0x060021AC RID: 8620 RVA: 0x00076CE4 File Offset: 0x00074EE4
		[Register("first", "([DLkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double First(double[] _this_first, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("first.([DLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060021AD RID: 8621 RVA: 0x00076D80 File Offset: 0x00074F80
		[Register("first", "([F)F", "")]
		public unsafe static float First(float[] _this_first)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("first.([F)F", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
			}
			return result;
		}

		// Token: 0x060021AE RID: 8622 RVA: 0x00076DEC File Offset: 0x00074FEC
		[Register("first", "([FLkotlin/jvm/functions/Function1;)F", "")]
		public unsafe static float First(float[] _this_first, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("first.([FLkotlin/jvm/functions/Function1;)F", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060021AF RID: 8623 RVA: 0x00076E88 File Offset: 0x00075088
		[Register("first", "([I)I", "")]
		public unsafe static int First(int[] _this_first)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("first.([I)I", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
			}
			return result;
		}

		// Token: 0x060021B0 RID: 8624 RVA: 0x00076EF4 File Offset: 0x000750F4
		[Register("first", "([ILkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int First(int[] _this_first, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("first.([ILkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060021B1 RID: 8625 RVA: 0x00076F90 File Offset: 0x00075190
		[Register("first", "([J)J", "")]
		public unsafe static long First(long[] _this_first)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("first.([J)J", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
			}
			return result;
		}

		// Token: 0x060021B2 RID: 8626 RVA: 0x00076FFC File Offset: 0x000751FC
		[Register("first", "([JLkotlin/jvm/functions/Function1;)J", "")]
		public unsafe static long First(long[] _this_first, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("first.([JLkotlin/jvm/functions/Function1;)J", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060021B3 RID: 8627 RVA: 0x00077098 File Offset: 0x00075298
		[Register("first", "([S)S", "")]
		public unsafe static short First(short[] _this_first)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("first.([S)S", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
			}
			return result;
		}

		// Token: 0x060021B4 RID: 8628 RVA: 0x00077104 File Offset: 0x00075304
		[Register("first", "([SLkotlin/jvm/functions/Function1;)S", "")]
		public unsafe static short First(short[] _this_first, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_first);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("first.([SLkotlin/jvm/functions/Function1;)S", ptr);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060021B5 RID: 8629 RVA: 0x000771A0 File Offset: 0x000753A0
		[Register("first", "([Ljava/lang/Object;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object First(Java.Lang.Object[] _this_first)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_first);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("first.([Ljava/lang/Object;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
			}
			return @object;
		}

		// Token: 0x060021B6 RID: 8630 RVA: 0x0007721C File Offset: 0x0007541C
		[Register("first", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object First(Java.Lang.Object[] _this_first, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_first);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("first.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_first != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_first);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_first);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021B7 RID: 8631 RVA: 0x000772C4 File Offset: 0x000754C4
		[Register("firstOrNull", "([Z)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean FirstOrNull(bool[] _this_firstOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([Z)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
			}
			return @object;
		}

		// Token: 0x060021B8 RID: 8632 RVA: 0x00077340 File Offset: 0x00075540
		[Register("firstOrNull", "([ZLkotlin/jvm/functions/Function1;)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean FirstOrNull(bool[] _this_firstOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([ZLkotlin/jvm/functions/Function1;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021B9 RID: 8633 RVA: 0x000773E8 File Offset: 0x000755E8
		[Register("firstOrNull", "([B)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte FirstOrNull(byte[] _this_firstOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([B)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
			}
			return @object;
		}

		// Token: 0x060021BA RID: 8634 RVA: 0x00077464 File Offset: 0x00075664
		[Register("firstOrNull", "([BLkotlin/jvm/functions/Function1;)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte FirstOrNull(byte[] _this_firstOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([BLkotlin/jvm/functions/Function1;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021BB RID: 8635 RVA: 0x0007750C File Offset: 0x0007570C
		[Register("firstOrNull", "([C)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character FirstOrNull(char[] _this_firstOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([C)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
			}
			return @object;
		}

		// Token: 0x060021BC RID: 8636 RVA: 0x00077588 File Offset: 0x00075788
		[Register("firstOrNull", "([CLkotlin/jvm/functions/Function1;)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character FirstOrNull(char[] _this_firstOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([CLkotlin/jvm/functions/Function1;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021BD RID: 8637 RVA: 0x00077630 File Offset: 0x00075830
		[Register("firstOrNull", "([D)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double FirstOrNull(double[] _this_firstOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([D)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
			}
			return @object;
		}

		// Token: 0x060021BE RID: 8638 RVA: 0x000776AC File Offset: 0x000758AC
		[Register("firstOrNull", "([DLkotlin/jvm/functions/Function1;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double FirstOrNull(double[] _this_firstOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([DLkotlin/jvm/functions/Function1;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021BF RID: 8639 RVA: 0x00077754 File Offset: 0x00075954
		[Register("firstOrNull", "([F)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float FirstOrNull(float[] _this_firstOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([F)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
			}
			return @object;
		}

		// Token: 0x060021C0 RID: 8640 RVA: 0x000777D0 File Offset: 0x000759D0
		[Register("firstOrNull", "([FLkotlin/jvm/functions/Function1;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float FirstOrNull(float[] _this_firstOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([FLkotlin/jvm/functions/Function1;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021C1 RID: 8641 RVA: 0x00077878 File Offset: 0x00075A78
		[Register("firstOrNull", "([I)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer FirstOrNull(int[] _this_firstOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([I)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
			}
			return @object;
		}

		// Token: 0x060021C2 RID: 8642 RVA: 0x000778F4 File Offset: 0x00075AF4
		[Register("firstOrNull", "([ILkotlin/jvm/functions/Function1;)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer FirstOrNull(int[] _this_firstOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([ILkotlin/jvm/functions/Function1;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021C3 RID: 8643 RVA: 0x0007799C File Offset: 0x00075B9C
		[Register("firstOrNull", "([J)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long FirstOrNull(long[] _this_firstOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([J)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
			}
			return @object;
		}

		// Token: 0x060021C4 RID: 8644 RVA: 0x00077A18 File Offset: 0x00075C18
		[Register("firstOrNull", "([JLkotlin/jvm/functions/Function1;)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long FirstOrNull(long[] _this_firstOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([JLkotlin/jvm/functions/Function1;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021C5 RID: 8645 RVA: 0x00077AC0 File Offset: 0x00075CC0
		[Register("firstOrNull", "([S)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short FirstOrNull(short[] _this_firstOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([S)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
			}
			return @object;
		}

		// Token: 0x060021C6 RID: 8646 RVA: 0x00077B3C File Offset: 0x00075D3C
		[Register("firstOrNull", "([SLkotlin/jvm/functions/Function1;)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short FirstOrNull(short[] _this_firstOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_firstOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([SLkotlin/jvm/functions/Function1;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021C7 RID: 8647 RVA: 0x00077BE4 File Offset: 0x00075DE4
		[Register("firstOrNull", "([Ljava/lang/Object;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FirstOrNull(Java.Lang.Object[] _this_firstOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_firstOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([Ljava/lang/Object;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
			}
			return @object;
		}

		// Token: 0x060021C8 RID: 8648 RVA: 0x00077C60 File Offset: 0x00075E60
		[Register("firstOrNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FirstOrNull(Java.Lang.Object[] _this_firstOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_firstOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("firstOrNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_firstOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_firstOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_firstOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060021C9 RID: 8649 RVA: 0x00077D08 File Offset: 0x00075F08
		[Register("flatMap", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList FlatMap(bool[] _this_flatMap, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMap);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMap.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMap != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMap);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatMap);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060021CA RID: 8650 RVA: 0x00077DB0 File Offset: 0x00075FB0
		[Register("flatMap", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList FlatMap(byte[] _this_flatMap, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMap);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMap.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMap != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMap);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatMap);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060021CB RID: 8651 RVA: 0x00077E58 File Offset: 0x00076058
		[Register("flatMap", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList FlatMap(char[] _this_flatMap, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMap);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMap.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMap != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMap);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatMap);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060021CC RID: 8652 RVA: 0x00077F00 File Offset: 0x00076100
		[Register("flatMap", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList FlatMap(double[] _this_flatMap, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMap);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMap.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMap != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMap);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatMap);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060021CD RID: 8653 RVA: 0x00077FA8 File Offset: 0x000761A8
		[Register("flatMap", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList FlatMap(float[] _this_flatMap, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMap);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMap.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMap != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMap);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatMap);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060021CE RID: 8654 RVA: 0x00078050 File Offset: 0x00076250
		[Register("flatMap", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList FlatMap(int[] _this_flatMap, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMap);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMap.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMap != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMap);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatMap);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060021CF RID: 8655 RVA: 0x000780F8 File Offset: 0x000762F8
		[Register("flatMap", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList FlatMap(long[] _this_flatMap, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMap);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMap.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMap != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMap);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatMap);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060021D0 RID: 8656 RVA: 0x000781A0 File Offset: 0x000763A0
		[Register("flatMap", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList FlatMap(short[] _this_flatMap, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMap);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMap.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMap != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMap);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatMap);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060021D1 RID: 8657 RVA: 0x00078248 File Offset: 0x00076448
		[Register("flatMap", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList FlatMap(Java.Lang.Object[] _this_flatMap, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_flatMap);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMap.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMap != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_flatMap);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatMap);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060021D2 RID: 8658 RVA: 0x000782F0 File Offset: 0x000764F0
		[Register("flatMapSequence", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList FlatMapSequence(Java.Lang.Object[] _this_flatMap, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_flatMap);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapSequence.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMap != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_flatMap);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatMap);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060021D3 RID: 8659 RVA: 0x00078398 File Offset: 0x00076598
		[Register("flatMapSequenceTo", "([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object FlatMapSequenceTo(Java.Lang.Object[] _this_flatMapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_flatMapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapSequenceTo.([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMapTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_flatMapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_flatMapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060021D4 RID: 8660 RVA: 0x0007846C File Offset: 0x0007666C
		[Register("flatMapTo", "([ZLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object FlatMapTo(bool[] _this_flatMapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapTo.([ZLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_flatMapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060021D5 RID: 8661 RVA: 0x00078540 File Offset: 0x00076740
		[Register("flatMapTo", "([BLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object FlatMapTo(byte[] _this_flatMapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapTo.([BLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_flatMapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060021D6 RID: 8662 RVA: 0x00078614 File Offset: 0x00076814
		[Register("flatMapTo", "([CLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object FlatMapTo(char[] _this_flatMapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapTo.([CLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_flatMapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060021D7 RID: 8663 RVA: 0x000786E8 File Offset: 0x000768E8
		[Register("flatMapTo", "([DLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object FlatMapTo(double[] _this_flatMapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapTo.([DLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_flatMapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060021D8 RID: 8664 RVA: 0x000787BC File Offset: 0x000769BC
		[Register("flatMapTo", "([FLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object FlatMapTo(float[] _this_flatMapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapTo.([FLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_flatMapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060021D9 RID: 8665 RVA: 0x00078890 File Offset: 0x00076A90
		[Register("flatMapTo", "([ILjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object FlatMapTo(int[] _this_flatMapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapTo.([ILjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_flatMapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060021DA RID: 8666 RVA: 0x00078964 File Offset: 0x00076B64
		[Register("flatMapTo", "([JLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object FlatMapTo(long[] _this_flatMapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapTo.([JLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_flatMapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060021DB RID: 8667 RVA: 0x00078A38 File Offset: 0x00076C38
		[Register("flatMapTo", "([SLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object FlatMapTo(short[] _this_flatMapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_flatMapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapTo.([SLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_flatMapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_flatMapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060021DC RID: 8668 RVA: 0x00078B0C File Offset: 0x00076D0C
		[Register("flatMapTo", "([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object FlatMapTo(Java.Lang.Object[] _this_flatMapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_flatMapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatMapTo.([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatMapTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_flatMapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_flatMapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060021DD RID: 8669 RVA: 0x00078BE0 File Offset: 0x00076DE0
		[Register("fold", "([ZLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Fold(bool[] _this_fold, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fold);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("fold.([ZLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_fold != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fold);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_fold);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021DE RID: 8670 RVA: 0x00078CB4 File Offset: 0x00076EB4
		[Register("fold", "([BLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Fold(byte[] _this_fold, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fold);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("fold.([BLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_fold != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fold);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_fold);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021DF RID: 8671 RVA: 0x00078D88 File Offset: 0x00076F88
		[Register("fold", "([CLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Fold(char[] _this_fold, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fold);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("fold.([CLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_fold != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fold);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_fold);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021E0 RID: 8672 RVA: 0x00078E5C File Offset: 0x0007705C
		[Register("fold", "([DLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Fold(double[] _this_fold, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fold);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("fold.([DLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_fold != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fold);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_fold);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021E1 RID: 8673 RVA: 0x00078F30 File Offset: 0x00077130
		[Register("fold", "([FLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Fold(float[] _this_fold, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fold);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("fold.([FLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_fold != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fold);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_fold);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021E2 RID: 8674 RVA: 0x00079004 File Offset: 0x00077204
		[Register("fold", "([ILjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Fold(int[] _this_fold, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fold);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("fold.([ILjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_fold != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fold);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_fold);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021E3 RID: 8675 RVA: 0x000790D8 File Offset: 0x000772D8
		[Register("fold", "([JLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Fold(long[] _this_fold, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fold);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("fold.([JLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_fold != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fold);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_fold);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021E4 RID: 8676 RVA: 0x000791AC File Offset: 0x000773AC
		[Register("fold", "([SLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Fold(short[] _this_fold, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fold);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("fold.([SLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_fold != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fold);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_fold);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021E5 RID: 8677 RVA: 0x00079280 File Offset: 0x00077480
		[Register("fold", "([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Fold(Java.Lang.Object[] _this_fold, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_fold);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("fold.([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_fold != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_fold);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_fold);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021E6 RID: 8678 RVA: 0x00079354 File Offset: 0x00077554
		[Register("foldIndexed", "([ZLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldIndexed(bool[] _this_foldIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldIndexed.([ZLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021E7 RID: 8679 RVA: 0x00079428 File Offset: 0x00077628
		[Register("foldIndexed", "([BLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldIndexed(byte[] _this_foldIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldIndexed.([BLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021E8 RID: 8680 RVA: 0x000794FC File Offset: 0x000776FC
		[Register("foldIndexed", "([CLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldIndexed(char[] _this_foldIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldIndexed.([CLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021E9 RID: 8681 RVA: 0x000795D0 File Offset: 0x000777D0
		[Register("foldIndexed", "([DLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldIndexed(double[] _this_foldIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldIndexed.([DLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021EA RID: 8682 RVA: 0x000796A4 File Offset: 0x000778A4
		[Register("foldIndexed", "([FLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldIndexed(float[] _this_foldIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldIndexed.([FLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021EB RID: 8683 RVA: 0x00079778 File Offset: 0x00077978
		[Register("foldIndexed", "([ILjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldIndexed(int[] _this_foldIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldIndexed.([ILjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021EC RID: 8684 RVA: 0x0007984C File Offset: 0x00077A4C
		[Register("foldIndexed", "([JLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldIndexed(long[] _this_foldIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldIndexed.([JLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021ED RID: 8685 RVA: 0x00079920 File Offset: 0x00077B20
		[Register("foldIndexed", "([SLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldIndexed(short[] _this_foldIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldIndexed.([SLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021EE RID: 8686 RVA: 0x000799F4 File Offset: 0x00077BF4
		[Register("foldIndexed", "([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldIndexed(Java.Lang.Object[] _this_foldIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_foldIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldIndexed.([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldIndexed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_foldIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021EF RID: 8687 RVA: 0x00079AC8 File Offset: 0x00077CC8
		[Register("foldRight", "([ZLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRight(bool[] _this_foldRight, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRight);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRight.([ZLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRight);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021F0 RID: 8688 RVA: 0x00079B9C File Offset: 0x00077D9C
		[Register("foldRight", "([BLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRight(byte[] _this_foldRight, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRight);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRight.([BLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRight);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021F1 RID: 8689 RVA: 0x00079C70 File Offset: 0x00077E70
		[Register("foldRight", "([CLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRight(char[] _this_foldRight, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRight);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRight.([CLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRight);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021F2 RID: 8690 RVA: 0x00079D44 File Offset: 0x00077F44
		[Register("foldRight", "([DLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRight(double[] _this_foldRight, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRight);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRight.([DLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRight);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021F3 RID: 8691 RVA: 0x00079E18 File Offset: 0x00078018
		[Register("foldRight", "([FLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRight(float[] _this_foldRight, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRight);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRight.([FLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRight);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021F4 RID: 8692 RVA: 0x00079EEC File Offset: 0x000780EC
		[Register("foldRight", "([ILjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRight(int[] _this_foldRight, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRight);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRight.([ILjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRight);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021F5 RID: 8693 RVA: 0x00079FC0 File Offset: 0x000781C0
		[Register("foldRight", "([JLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRight(long[] _this_foldRight, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRight);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRight.([JLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRight);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021F6 RID: 8694 RVA: 0x0007A094 File Offset: 0x00078294
		[Register("foldRight", "([SLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRight(short[] _this_foldRight, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRight);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRight.([SLjava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRight);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021F7 RID: 8695 RVA: 0x0007A168 File Offset: 0x00078368
		[Register("foldRight", "([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRight(Java.Lang.Object[] _this_foldRight, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_foldRight);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRight.([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRight != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_foldRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRight);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021F8 RID: 8696 RVA: 0x0007A23C File Offset: 0x0007843C
		[Register("foldRightIndexed", "([ZLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRightIndexed(bool[] _this_foldRightIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRightIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRightIndexed.([ZLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRightIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021F9 RID: 8697 RVA: 0x0007A310 File Offset: 0x00078510
		[Register("foldRightIndexed", "([BLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRightIndexed(byte[] _this_foldRightIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRightIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRightIndexed.([BLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRightIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021FA RID: 8698 RVA: 0x0007A3E4 File Offset: 0x000785E4
		[Register("foldRightIndexed", "([CLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRightIndexed(char[] _this_foldRightIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRightIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRightIndexed.([CLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRightIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021FB RID: 8699 RVA: 0x0007A4B8 File Offset: 0x000786B8
		[Register("foldRightIndexed", "([DLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRightIndexed(double[] _this_foldRightIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRightIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRightIndexed.([DLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRightIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021FC RID: 8700 RVA: 0x0007A58C File Offset: 0x0007878C
		[Register("foldRightIndexed", "([FLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRightIndexed(float[] _this_foldRightIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRightIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRightIndexed.([FLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRightIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021FD RID: 8701 RVA: 0x0007A660 File Offset: 0x00078860
		[Register("foldRightIndexed", "([ILjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRightIndexed(int[] _this_foldRightIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRightIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRightIndexed.([ILjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRightIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021FE RID: 8702 RVA: 0x0007A734 File Offset: 0x00078934
		[Register("foldRightIndexed", "([JLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRightIndexed(long[] _this_foldRightIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRightIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRightIndexed.([JLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRightIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060021FF RID: 8703 RVA: 0x0007A808 File Offset: 0x00078A08
		[Register("foldRightIndexed", "([SLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRightIndexed(short[] _this_foldRightIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_foldRightIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRightIndexed.([SLjava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_foldRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRightIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x06002200 RID: 8704 RVA: 0x0007A8DC File Offset: 0x00078ADC
		[Register("foldRightIndexed", "([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object FoldRightIndexed(Java.Lang.Object[] _this_foldRightIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_foldRightIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("foldRightIndexed.([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_foldRightIndexed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_foldRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_foldRightIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x06002201 RID: 8705 RVA: 0x0007A9B0 File Offset: 0x00078BB0
		[Register("forEach", "([ZLkotlin/jvm/functions/Function1;)V", "")]
		public unsafe static void ForEach(bool[] _this_forEach, IFunction1 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEach);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEach.([ZLkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_forEach != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEach);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEach);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002202 RID: 8706 RVA: 0x0007AA48 File Offset: 0x00078C48
		[Register("forEach", "([BLkotlin/jvm/functions/Function1;)V", "")]
		public unsafe static void ForEach(byte[] _this_forEach, IFunction1 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEach);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEach.([BLkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_forEach != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEach);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEach);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002203 RID: 8707 RVA: 0x0007AAE0 File Offset: 0x00078CE0
		[Register("forEach", "([CLkotlin/jvm/functions/Function1;)V", "")]
		public unsafe static void ForEach(char[] _this_forEach, IFunction1 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEach);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEach.([CLkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_forEach != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEach);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEach);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002204 RID: 8708 RVA: 0x0007AB78 File Offset: 0x00078D78
		[Register("forEach", "([DLkotlin/jvm/functions/Function1;)V", "")]
		public unsafe static void ForEach(double[] _this_forEach, IFunction1 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEach);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEach.([DLkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_forEach != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEach);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEach);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002205 RID: 8709 RVA: 0x0007AC10 File Offset: 0x00078E10
		[Register("forEach", "([FLkotlin/jvm/functions/Function1;)V", "")]
		public unsafe static void ForEach(float[] _this_forEach, IFunction1 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEach);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEach.([FLkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_forEach != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEach);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEach);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002206 RID: 8710 RVA: 0x0007ACA8 File Offset: 0x00078EA8
		[Register("forEach", "([ILkotlin/jvm/functions/Function1;)V", "")]
		public unsafe static void ForEach(int[] _this_forEach, IFunction1 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEach);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEach.([ILkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_forEach != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEach);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEach);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002207 RID: 8711 RVA: 0x0007AD40 File Offset: 0x00078F40
		[Register("forEach", "([JLkotlin/jvm/functions/Function1;)V", "")]
		public unsafe static void ForEach(long[] _this_forEach, IFunction1 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEach);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEach.([JLkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_forEach != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEach);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEach);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002208 RID: 8712 RVA: 0x0007ADD8 File Offset: 0x00078FD8
		[Register("forEach", "([SLkotlin/jvm/functions/Function1;)V", "")]
		public unsafe static void ForEach(short[] _this_forEach, IFunction1 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEach);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEach.([SLkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_forEach != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEach);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEach);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002209 RID: 8713 RVA: 0x0007AE70 File Offset: 0x00079070
		[Register("forEach", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static void ForEach(Java.Lang.Object[] _this_forEach, IFunction1 action)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_forEach);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEach.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_forEach != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_forEach);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEach);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x0600220A RID: 8714 RVA: 0x0007AF08 File Offset: 0x00079108
		[Register("forEachIndexed", "([ZLkotlin/jvm/functions/Function2;)V", "")]
		public unsafe static void ForEachIndexed(bool[] _this_forEachIndexed, IFunction2 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEachIndexed);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEachIndexed.([ZLkotlin/jvm/functions/Function2;)V", ptr);
			}
			finally
			{
				if (_this_forEachIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEachIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEachIndexed);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x0600220B RID: 8715 RVA: 0x0007AFA0 File Offset: 0x000791A0
		[Register("forEachIndexed", "([BLkotlin/jvm/functions/Function2;)V", "")]
		public unsafe static void ForEachIndexed(byte[] _this_forEachIndexed, IFunction2 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEachIndexed);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEachIndexed.([BLkotlin/jvm/functions/Function2;)V", ptr);
			}
			finally
			{
				if (_this_forEachIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEachIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEachIndexed);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x0600220C RID: 8716 RVA: 0x0007B038 File Offset: 0x00079238
		[Register("forEachIndexed", "([CLkotlin/jvm/functions/Function2;)V", "")]
		public unsafe static void ForEachIndexed(char[] _this_forEachIndexed, IFunction2 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEachIndexed);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEachIndexed.([CLkotlin/jvm/functions/Function2;)V", ptr);
			}
			finally
			{
				if (_this_forEachIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEachIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEachIndexed);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x0600220D RID: 8717 RVA: 0x0007B0D0 File Offset: 0x000792D0
		[Register("forEachIndexed", "([DLkotlin/jvm/functions/Function2;)V", "")]
		public unsafe static void ForEachIndexed(double[] _this_forEachIndexed, IFunction2 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEachIndexed);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEachIndexed.([DLkotlin/jvm/functions/Function2;)V", ptr);
			}
			finally
			{
				if (_this_forEachIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEachIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEachIndexed);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x0600220E RID: 8718 RVA: 0x0007B168 File Offset: 0x00079368
		[Register("forEachIndexed", "([FLkotlin/jvm/functions/Function2;)V", "")]
		public unsafe static void ForEachIndexed(float[] _this_forEachIndexed, IFunction2 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEachIndexed);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEachIndexed.([FLkotlin/jvm/functions/Function2;)V", ptr);
			}
			finally
			{
				if (_this_forEachIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEachIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEachIndexed);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x0600220F RID: 8719 RVA: 0x0007B200 File Offset: 0x00079400
		[Register("forEachIndexed", "([ILkotlin/jvm/functions/Function2;)V", "")]
		public unsafe static void ForEachIndexed(int[] _this_forEachIndexed, IFunction2 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEachIndexed);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEachIndexed.([ILkotlin/jvm/functions/Function2;)V", ptr);
			}
			finally
			{
				if (_this_forEachIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEachIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEachIndexed);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002210 RID: 8720 RVA: 0x0007B298 File Offset: 0x00079498
		[Register("forEachIndexed", "([JLkotlin/jvm/functions/Function2;)V", "")]
		public unsafe static void ForEachIndexed(long[] _this_forEachIndexed, IFunction2 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEachIndexed);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEachIndexed.([JLkotlin/jvm/functions/Function2;)V", ptr);
			}
			finally
			{
				if (_this_forEachIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEachIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEachIndexed);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002211 RID: 8721 RVA: 0x0007B330 File Offset: 0x00079530
		[Register("forEachIndexed", "([SLkotlin/jvm/functions/Function2;)V", "")]
		public unsafe static void ForEachIndexed(short[] _this_forEachIndexed, IFunction2 action)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_forEachIndexed);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEachIndexed.([SLkotlin/jvm/functions/Function2;)V", ptr);
			}
			finally
			{
				if (_this_forEachIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_forEachIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEachIndexed);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002212 RID: 8722 RVA: 0x0007B3C8 File Offset: 0x000795C8
		[Register("forEachIndexed", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static void ForEachIndexed(Java.Lang.Object[] _this_forEachIndexed, IFunction2 action)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_forEachIndexed);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((action == null) ? IntPtr.Zero : ((Java.Lang.Object)action).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("forEachIndexed.([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V", ptr);
			}
			finally
			{
				if (_this_forEachIndexed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_forEachIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_forEachIndexed);
				GC.KeepAlive(action);
			}
		}

		// Token: 0x06002213 RID: 8723 RVA: 0x0007B460 File Offset: 0x00079660
		[Register("getIndices", "([Z)Lkotlin/ranges/IntRange;", "")]
		public unsafe static IntRange GetIndices(bool[] _this_indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indices);
			IntRange @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IntRange>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getIndices.([Z)Lkotlin/ranges/IntRange;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_indices != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indices);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indices);
			}
			return @object;
		}

		// Token: 0x06002214 RID: 8724 RVA: 0x0007B4DC File Offset: 0x000796DC
		[Register("getIndices", "([B)Lkotlin/ranges/IntRange;", "")]
		public unsafe static IntRange GetIndices(byte[] _this_indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indices);
			IntRange @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IntRange>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getIndices.([B)Lkotlin/ranges/IntRange;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_indices != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indices);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indices);
			}
			return @object;
		}

		// Token: 0x06002215 RID: 8725 RVA: 0x0007B558 File Offset: 0x00079758
		[Register("getIndices", "([C)Lkotlin/ranges/IntRange;", "")]
		public unsafe static IntRange GetIndices(char[] _this_indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indices);
			IntRange @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IntRange>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getIndices.([C)Lkotlin/ranges/IntRange;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_indices != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indices);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indices);
			}
			return @object;
		}

		// Token: 0x06002216 RID: 8726 RVA: 0x0007B5D4 File Offset: 0x000797D4
		[Register("getIndices", "([D)Lkotlin/ranges/IntRange;", "")]
		public unsafe static IntRange GetIndices(double[] _this_indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indices);
			IntRange @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IntRange>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getIndices.([D)Lkotlin/ranges/IntRange;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_indices != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indices);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indices);
			}
			return @object;
		}

		// Token: 0x06002217 RID: 8727 RVA: 0x0007B650 File Offset: 0x00079850
		[Register("getIndices", "([F)Lkotlin/ranges/IntRange;", "")]
		public unsafe static IntRange GetIndices(float[] _this_indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indices);
			IntRange @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IntRange>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getIndices.([F)Lkotlin/ranges/IntRange;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_indices != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indices);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indices);
			}
			return @object;
		}

		// Token: 0x06002218 RID: 8728 RVA: 0x0007B6CC File Offset: 0x000798CC
		[Register("getIndices", "([I)Lkotlin/ranges/IntRange;", "")]
		public unsafe static IntRange GetIndices(int[] _this_indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indices);
			IntRange @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IntRange>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getIndices.([I)Lkotlin/ranges/IntRange;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_indices != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indices);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indices);
			}
			return @object;
		}

		// Token: 0x06002219 RID: 8729 RVA: 0x0007B748 File Offset: 0x00079948
		[Register("getIndices", "([J)Lkotlin/ranges/IntRange;", "")]
		public unsafe static IntRange GetIndices(long[] _this_indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indices);
			IntRange @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IntRange>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getIndices.([J)Lkotlin/ranges/IntRange;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_indices != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indices);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indices);
			}
			return @object;
		}

		// Token: 0x0600221A RID: 8730 RVA: 0x0007B7C4 File Offset: 0x000799C4
		[Register("getIndices", "([S)Lkotlin/ranges/IntRange;", "")]
		public unsafe static IntRange GetIndices(short[] _this_indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indices);
			IntRange @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IntRange>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getIndices.([S)Lkotlin/ranges/IntRange;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_indices != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indices);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indices);
			}
			return @object;
		}

		// Token: 0x0600221B RID: 8731 RVA: 0x0007B840 File Offset: 0x00079A40
		[Register("getIndices", "([Ljava/lang/Object;)Lkotlin/ranges/IntRange;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static IntRange GetIndices(Java.Lang.Object[] _this_indices)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_indices);
			IntRange @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IntRange>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getIndices.([Ljava/lang/Object;)Lkotlin/ranges/IntRange;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_indices != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_indices);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indices);
			}
			return @object;
		}

		// Token: 0x0600221C RID: 8732 RVA: 0x0007B8BC File Offset: 0x00079ABC
		[Register("getLastIndex", "([Z)I", "")]
		public unsafe static int GetLastIndex(bool[] _this_lastIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndex);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("getLastIndex.([Z)I", ptr);
			}
			finally
			{
				if (_this_lastIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndex);
			}
			return result;
		}

		// Token: 0x0600221D RID: 8733 RVA: 0x0007B928 File Offset: 0x00079B28
		[Register("getLastIndex", "([B)I", "")]
		public unsafe static int GetLastIndex(byte[] _this_lastIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndex);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("getLastIndex.([B)I", ptr);
			}
			finally
			{
				if (_this_lastIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndex);
			}
			return result;
		}

		// Token: 0x0600221E RID: 8734 RVA: 0x0007B994 File Offset: 0x00079B94
		[Register("getLastIndex", "([C)I", "")]
		public unsafe static int GetLastIndex(char[] _this_lastIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndex);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("getLastIndex.([C)I", ptr);
			}
			finally
			{
				if (_this_lastIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndex);
			}
			return result;
		}

		// Token: 0x0600221F RID: 8735 RVA: 0x0007BA00 File Offset: 0x00079C00
		[Register("getLastIndex", "([D)I", "")]
		public unsafe static int GetLastIndex(double[] _this_lastIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndex);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("getLastIndex.([D)I", ptr);
			}
			finally
			{
				if (_this_lastIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndex);
			}
			return result;
		}

		// Token: 0x06002220 RID: 8736 RVA: 0x0007BA6C File Offset: 0x00079C6C
		[Register("getLastIndex", "([F)I", "")]
		public unsafe static int GetLastIndex(float[] _this_lastIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndex);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("getLastIndex.([F)I", ptr);
			}
			finally
			{
				if (_this_lastIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndex);
			}
			return result;
		}

		// Token: 0x06002221 RID: 8737 RVA: 0x0007BAD8 File Offset: 0x00079CD8
		[Register("getLastIndex", "([I)I", "")]
		public unsafe static int GetLastIndex(int[] _this_lastIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndex);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("getLastIndex.([I)I", ptr);
			}
			finally
			{
				if (_this_lastIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndex);
			}
			return result;
		}

		// Token: 0x06002222 RID: 8738 RVA: 0x0007BB44 File Offset: 0x00079D44
		[Register("getLastIndex", "([J)I", "")]
		public unsafe static int GetLastIndex(long[] _this_lastIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndex);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("getLastIndex.([J)I", ptr);
			}
			finally
			{
				if (_this_lastIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndex);
			}
			return result;
		}

		// Token: 0x06002223 RID: 8739 RVA: 0x0007BBB0 File Offset: 0x00079DB0
		[Register("getLastIndex", "([S)I", "")]
		public unsafe static int GetLastIndex(short[] _this_lastIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndex);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("getLastIndex.([S)I", ptr);
			}
			finally
			{
				if (_this_lastIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndex);
			}
			return result;
		}

		// Token: 0x06002224 RID: 8740 RVA: 0x0007BC1C File Offset: 0x00079E1C
		[Register("getLastIndex", "([Ljava/lang/Object;)I", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static int GetLastIndex(Java.Lang.Object[] _this_lastIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_lastIndex);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("getLastIndex.([Ljava/lang/Object;)I", ptr);
			}
			finally
			{
				if (_this_lastIndex != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_lastIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndex);
			}
			return result;
		}

		// Token: 0x06002225 RID: 8741 RVA: 0x0007BC88 File Offset: 0x00079E88
		[Register("getOrNull", "([ZI)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean GetOrNull(bool[] _this_getOrNull, int index)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_getOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(index);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getOrNull.([ZI)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_getOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_getOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_getOrNull);
			}
			return @object;
		}

		// Token: 0x06002226 RID: 8742 RVA: 0x0007BD18 File Offset: 0x00079F18
		[Register("getOrNull", "([BI)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte GetOrNull(byte[] _this_getOrNull, int index)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_getOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(index);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getOrNull.([BI)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_getOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_getOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_getOrNull);
			}
			return @object;
		}

		// Token: 0x06002227 RID: 8743 RVA: 0x0007BDA8 File Offset: 0x00079FA8
		[Register("getOrNull", "([CI)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character GetOrNull(char[] _this_getOrNull, int index)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_getOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(index);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getOrNull.([CI)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_getOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_getOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_getOrNull);
			}
			return @object;
		}

		// Token: 0x06002228 RID: 8744 RVA: 0x0007BE38 File Offset: 0x0007A038
		[Register("getOrNull", "([DI)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double GetOrNull(double[] _this_getOrNull, int index)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_getOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(index);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getOrNull.([DI)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_getOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_getOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_getOrNull);
			}
			return @object;
		}

		// Token: 0x06002229 RID: 8745 RVA: 0x0007BEC8 File Offset: 0x0007A0C8
		[Register("getOrNull", "([FI)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float GetOrNull(float[] _this_getOrNull, int index)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_getOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(index);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getOrNull.([FI)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_getOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_getOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_getOrNull);
			}
			return @object;
		}

		// Token: 0x0600222A RID: 8746 RVA: 0x0007BF58 File Offset: 0x0007A158
		[Register("getOrNull", "([II)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer GetOrNull(int[] _this_getOrNull, int index)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_getOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(index);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getOrNull.([II)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_getOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_getOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_getOrNull);
			}
			return @object;
		}

		// Token: 0x0600222B RID: 8747 RVA: 0x0007BFE8 File Offset: 0x0007A1E8
		[Register("getOrNull", "([JI)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long GetOrNull(long[] _this_getOrNull, int index)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_getOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(index);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getOrNull.([JI)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_getOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_getOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_getOrNull);
			}
			return @object;
		}

		// Token: 0x0600222C RID: 8748 RVA: 0x0007C078 File Offset: 0x0007A278
		[Register("getOrNull", "([SI)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short GetOrNull(short[] _this_getOrNull, int index)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_getOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(index);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getOrNull.([SI)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_getOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_getOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_getOrNull);
			}
			return @object;
		}

		// Token: 0x0600222D RID: 8749 RVA: 0x0007C108 File Offset: 0x0007A308
		[Register("getOrNull", "([Ljava/lang/Object;I)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object GetOrNull(Java.Lang.Object[] _this_getOrNull, int index)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_getOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(index);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("getOrNull.([Ljava/lang/Object;I)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_getOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_getOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_getOrNull);
			}
			return @object;
		}

		// Token: 0x0600222E RID: 8750 RVA: 0x0007C198 File Offset: 0x0007A398
		[Register("groupBy", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary GroupBy(bool[] _this_groupBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([ZLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x0600222F RID: 8751 RVA: 0x0007C240 File Offset: 0x0007A440
		[Register("groupBy", "([ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary GroupBy(bool[] _this_groupBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([ZLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x06002230 RID: 8752 RVA: 0x0007C318 File Offset: 0x0007A518
		[Register("groupBy", "([BLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary GroupBy(byte[] _this_groupBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([BLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x06002231 RID: 8753 RVA: 0x0007C3C0 File Offset: 0x0007A5C0
		[Register("groupBy", "([BLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary GroupBy(byte[] _this_groupBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([BLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x06002232 RID: 8754 RVA: 0x0007C498 File Offset: 0x0007A698
		[Register("groupBy", "([CLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary GroupBy(char[] _this_groupBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([CLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x06002233 RID: 8755 RVA: 0x0007C540 File Offset: 0x0007A740
		[Register("groupBy", "([CLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary GroupBy(char[] _this_groupBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([CLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x06002234 RID: 8756 RVA: 0x0007C618 File Offset: 0x0007A818
		[Register("groupBy", "([DLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary GroupBy(double[] _this_groupBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([DLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x06002235 RID: 8757 RVA: 0x0007C6C0 File Offset: 0x0007A8C0
		[Register("groupBy", "([DLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary GroupBy(double[] _this_groupBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([DLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x06002236 RID: 8758 RVA: 0x0007C798 File Offset: 0x0007A998
		[Register("groupBy", "([FLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary GroupBy(float[] _this_groupBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([FLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x06002237 RID: 8759 RVA: 0x0007C840 File Offset: 0x0007AA40
		[Register("groupBy", "([FLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary GroupBy(float[] _this_groupBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([FLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x06002238 RID: 8760 RVA: 0x0007C918 File Offset: 0x0007AB18
		[Register("groupBy", "([ILkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary GroupBy(int[] _this_groupBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([ILkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x06002239 RID: 8761 RVA: 0x0007C9C0 File Offset: 0x0007ABC0
		[Register("groupBy", "([ILkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary GroupBy(int[] _this_groupBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([ILkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x0600223A RID: 8762 RVA: 0x0007CA98 File Offset: 0x0007AC98
		[Register("groupBy", "([JLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary GroupBy(long[] _this_groupBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([JLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x0600223B RID: 8763 RVA: 0x0007CB40 File Offset: 0x0007AD40
		[Register("groupBy", "([JLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary GroupBy(long[] _this_groupBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([JLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x0600223C RID: 8764 RVA: 0x0007CC18 File Offset: 0x0007AE18
		[Register("groupBy", "([SLkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K"
		})]
		public unsafe static IDictionary GroupBy(short[] _this_groupBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([SLkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x0600223D RID: 8765 RVA: 0x0007CCC0 File Offset: 0x0007AEC0
		[Register("groupBy", "([SLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V"
		})]
		public unsafe static IDictionary GroupBy(short[] _this_groupBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([SLkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x0600223E RID: 8766 RVA: 0x0007CD98 File Offset: 0x0007AF98
		[Register("groupBy", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K"
		})]
		public unsafe static IDictionary GroupBy(Java.Lang.Object[] _this_groupBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
			}
			return result;
		}

		// Token: 0x0600223F RID: 8767 RVA: 0x0007CE40 File Offset: 0x0007B040
		[Register("groupBy", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K",
			"V"
		})]
		public unsafe static IDictionary GroupBy(Java.Lang.Object[] _this_groupBy, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_groupBy);
			IDictionary result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[2] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				result = JavaDictionary.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupBy.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_groupBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupBy);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return result;
		}

		// Token: 0x06002240 RID: 8768 RVA: 0x0007CF18 File Offset: 0x0007B118
		[Register("groupByTo", "([ZLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, java.util.List<java.lang.Boolean>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(bool[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([ZLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002241 RID: 8769 RVA: 0x0007CFEC File Offset: 0x0007B1EC
		[Register("groupByTo", "([ZLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, java.util.List<V>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(bool[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([ZLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002242 RID: 8770 RVA: 0x0007D0F0 File Offset: 0x0007B2F0
		[Register("groupByTo", "([BLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, java.util.List<java.lang.Byte>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(byte[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([BLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002243 RID: 8771 RVA: 0x0007D1C4 File Offset: 0x0007B3C4
		[Register("groupByTo", "([BLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, java.util.List<V>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(byte[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([BLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002244 RID: 8772 RVA: 0x0007D2C8 File Offset: 0x0007B4C8
		[Register("groupByTo", "([CLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, java.util.List<java.lang.Character>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(char[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([CLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002245 RID: 8773 RVA: 0x0007D39C File Offset: 0x0007B59C
		[Register("groupByTo", "([CLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, java.util.List<V>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(char[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([CLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002246 RID: 8774 RVA: 0x0007D4A0 File Offset: 0x0007B6A0
		[Register("groupByTo", "([DLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, java.util.List<java.lang.Double>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(double[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([DLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002247 RID: 8775 RVA: 0x0007D574 File Offset: 0x0007B774
		[Register("groupByTo", "([DLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, java.util.List<V>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(double[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([DLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002248 RID: 8776 RVA: 0x0007D678 File Offset: 0x0007B878
		[Register("groupByTo", "([FLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, java.util.List<java.lang.Float>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(float[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([FLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002249 RID: 8777 RVA: 0x0007D74C File Offset: 0x0007B94C
		[Register("groupByTo", "([FLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, java.util.List<V>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(float[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([FLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x0600224A RID: 8778 RVA: 0x0007D850 File Offset: 0x0007BA50
		[Register("groupByTo", "([ILjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, java.util.List<java.lang.Integer>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(int[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([ILjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x0600224B RID: 8779 RVA: 0x0007D924 File Offset: 0x0007BB24
		[Register("groupByTo", "([ILjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, java.util.List<V>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(int[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([ILjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x0600224C RID: 8780 RVA: 0x0007DA28 File Offset: 0x0007BC28
		[Register("groupByTo", "([JLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, java.util.List<java.lang.Long>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(long[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([JLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x0600224D RID: 8781 RVA: 0x0007DAFC File Offset: 0x0007BCFC
		[Register("groupByTo", "([JLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, java.util.List<V>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(long[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([JLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x0600224E RID: 8782 RVA: 0x0007DC00 File Offset: 0x0007BE00
		[Register("groupByTo", "([SLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"M extends java.util.Map<? super K, java.util.List<java.lang.Short>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(short[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([SLjava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x0600224F RID: 8783 RVA: 0x0007DCD4 File Offset: 0x0007BED4
		[Register("groupByTo", "([SLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"K",
			"V",
			"M extends java.util.Map<? super K, java.util.List<V>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(short[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([SLjava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002250 RID: 8784 RVA: 0x0007DDD8 File Offset: 0x0007BFD8
		[Register("groupByTo", "([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K",
			"M extends java.util.Map<? super K, java.util.List<T>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(Java.Lang.Object[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002251 RID: 8785 RVA: 0x0007DEAC File Offset: 0x0007C0AC
		[Register("groupByTo", "([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K",
			"V",
			"M extends java.util.Map<? super K, java.util.List<V>>"
		})]
		public unsafe static Java.Lang.Object GroupByTo(Java.Lang.Object[] _this_groupByTo, Java.Lang.Object destination, IFunction1 keySelector, IFunction1 valueTransform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_groupByTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				ptr[3] = new JniArgumentValue((valueTransform == null) ? IntPtr.Zero : ((Java.Lang.Object)valueTransform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupByTo.([Ljava/lang/Object;Ljava/util/Map;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupByTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_groupByTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_groupByTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(keySelector);
				GC.KeepAlive(valueTransform);
			}
			return @object;
		}

		// Token: 0x06002252 RID: 8786 RVA: 0x0007DFB0 File Offset: 0x0007C1B0
		[Register("groupingBy", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/collections/Grouping;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"K"
		})]
		public unsafe static IGrouping GroupingBy(Java.Lang.Object[] _this_groupingBy, IFunction1 keySelector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_groupingBy);
			IGrouping @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((keySelector == null) ? IntPtr.Zero : ((Java.Lang.Object)keySelector).Handle);
				@object = Java.Lang.Object.GetObject<IGrouping>(ArraysKt._members.StaticMethods.InvokeObjectMethod("groupingBy.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/collections/Grouping;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_groupingBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_groupingBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_groupingBy);
				GC.KeepAlive(keySelector);
			}
			return @object;
		}

		// Token: 0x06002253 RID: 8787 RVA: 0x0007E058 File Offset: 0x0007C258
		[Register("indexOf", "([ZZ)I", "")]
		public unsafe static int IndexOf(bool[] _this_indexOf, bool element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOf.([ZZ)I", ptr);
			}
			finally
			{
				if (_this_indexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOf);
			}
			return result;
		}

		// Token: 0x06002254 RID: 8788 RVA: 0x0007E0D8 File Offset: 0x0007C2D8
		[Register("indexOf", "([BB)I", "")]
		public unsafe static int IndexOf(byte[] _this_indexOf, sbyte element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOf.([BB)I", ptr);
			}
			finally
			{
				if (_this_indexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOf);
			}
			return result;
		}

		// Token: 0x06002255 RID: 8789 RVA: 0x0007E158 File Offset: 0x0007C358
		[Register("indexOf", "([CC)I", "")]
		public unsafe static int IndexOf(char[] _this_indexOf, char element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOf.([CC)I", ptr);
			}
			finally
			{
				if (_this_indexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOf);
			}
			return result;
		}

		// Token: 0x06002256 RID: 8790 RVA: 0x0007E1D8 File Offset: 0x0007C3D8
		[Register("indexOf", "([II)I", "")]
		public unsafe static int IndexOf(int[] _this_indexOf, int element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOf.([II)I", ptr);
			}
			finally
			{
				if (_this_indexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOf);
			}
			return result;
		}

		// Token: 0x06002257 RID: 8791 RVA: 0x0007E258 File Offset: 0x0007C458
		[Register("indexOf", "([JJ)I", "")]
		public unsafe static int IndexOf(long[] _this_indexOf, long element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOf.([JJ)I", ptr);
			}
			finally
			{
				if (_this_indexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOf);
			}
			return result;
		}

		// Token: 0x06002258 RID: 8792 RVA: 0x0007E2D8 File Offset: 0x0007C4D8
		[Register("indexOf", "([SS)I", "")]
		public unsafe static int IndexOf(short[] _this_indexOf, short element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOf.([SS)I", ptr);
			}
			finally
			{
				if (_this_indexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOf);
			}
			return result;
		}

		// Token: 0x06002259 RID: 8793 RVA: 0x0007E358 File Offset: 0x0007C558
		[Register("indexOf", "([Ljava/lang/Object;Ljava/lang/Object;)I", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static int IndexOf(Java.Lang.Object[] _this_indexOf, [Nullable(2)] Java.Lang.Object element)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_indexOf);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(element);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOf.([Ljava/lang/Object;Ljava/lang/Object;)I", ptr);
			}
			finally
			{
				if (_this_indexOf != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_indexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_indexOf);
				GC.KeepAlive(element);
			}
			return result;
		}

		// Token: 0x0600225A RID: 8794 RVA: 0x0007E3EC File Offset: 0x0007C5EC
		[Register("indexOfFirst", "([ZLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfFirst(bool[] _this_indexOfFirst, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfFirst);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfFirst.([ZLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfFirst != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfFirst);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfFirst);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600225B RID: 8795 RVA: 0x0007E488 File Offset: 0x0007C688
		[Register("indexOfFirst", "([BLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfFirst(byte[] _this_indexOfFirst, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfFirst);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfFirst.([BLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfFirst != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfFirst);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfFirst);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600225C RID: 8796 RVA: 0x0007E524 File Offset: 0x0007C724
		[Register("indexOfFirst", "([CLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfFirst(char[] _this_indexOfFirst, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfFirst);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfFirst.([CLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfFirst != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfFirst);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfFirst);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600225D RID: 8797 RVA: 0x0007E5C0 File Offset: 0x0007C7C0
		[Register("indexOfFirst", "([DLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfFirst(double[] _this_indexOfFirst, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfFirst);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfFirst.([DLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfFirst != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfFirst);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfFirst);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600225E RID: 8798 RVA: 0x0007E65C File Offset: 0x0007C85C
		[Register("indexOfFirst", "([FLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfFirst(float[] _this_indexOfFirst, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfFirst);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfFirst.([FLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfFirst != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfFirst);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfFirst);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600225F RID: 8799 RVA: 0x0007E6F8 File Offset: 0x0007C8F8
		[Register("indexOfFirst", "([ILkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfFirst(int[] _this_indexOfFirst, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfFirst);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfFirst.([ILkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfFirst != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfFirst);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfFirst);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002260 RID: 8800 RVA: 0x0007E794 File Offset: 0x0007C994
		[Register("indexOfFirst", "([JLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfFirst(long[] _this_indexOfFirst, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfFirst);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfFirst.([JLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfFirst != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfFirst);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfFirst);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002261 RID: 8801 RVA: 0x0007E830 File Offset: 0x0007CA30
		[Register("indexOfFirst", "([SLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfFirst(short[] _this_indexOfFirst, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfFirst);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfFirst.([SLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfFirst != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfFirst);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfFirst);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002262 RID: 8802 RVA: 0x0007E8CC File Offset: 0x0007CACC
		[Register("indexOfFirst", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static int IndexOfFirst(Java.Lang.Object[] _this_indexOfFirst, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_indexOfFirst);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfFirst.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfFirst != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_indexOfFirst);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfFirst);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002263 RID: 8803 RVA: 0x0007E968 File Offset: 0x0007CB68
		[Register("indexOfLast", "([ZLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfLast(bool[] _this_indexOfLast, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfLast);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfLast.([ZLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfLast);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002264 RID: 8804 RVA: 0x0007EA04 File Offset: 0x0007CC04
		[Register("indexOfLast", "([BLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfLast(byte[] _this_indexOfLast, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfLast);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfLast.([BLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfLast);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002265 RID: 8805 RVA: 0x0007EAA0 File Offset: 0x0007CCA0
		[Register("indexOfLast", "([CLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfLast(char[] _this_indexOfLast, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfLast);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfLast.([CLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfLast);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002266 RID: 8806 RVA: 0x0007EB3C File Offset: 0x0007CD3C
		[Register("indexOfLast", "([DLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfLast(double[] _this_indexOfLast, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfLast);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfLast.([DLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfLast);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002267 RID: 8807 RVA: 0x0007EBD8 File Offset: 0x0007CDD8
		[Register("indexOfLast", "([FLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfLast(float[] _this_indexOfLast, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfLast);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfLast.([FLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfLast);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002268 RID: 8808 RVA: 0x0007EC74 File Offset: 0x0007CE74
		[Register("indexOfLast", "([ILkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfLast(int[] _this_indexOfLast, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfLast);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfLast.([ILkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfLast);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002269 RID: 8809 RVA: 0x0007ED10 File Offset: 0x0007CF10
		[Register("indexOfLast", "([JLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfLast(long[] _this_indexOfLast, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfLast);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfLast.([JLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfLast);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600226A RID: 8810 RVA: 0x0007EDAC File Offset: 0x0007CFAC
		[Register("indexOfLast", "([SLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int IndexOfLast(short[] _this_indexOfLast, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_indexOfLast);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfLast.([SLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_indexOfLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfLast);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600226B RID: 8811 RVA: 0x0007EE48 File Offset: 0x0007D048
		[Register("indexOfLast", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static int IndexOfLast(Java.Lang.Object[] _this_indexOfLast, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_indexOfLast);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("indexOfLast.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_indexOfLast != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_indexOfLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_indexOfLast);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600226C RID: 8812 RVA: 0x0007EEE4 File Offset: 0x0007D0E4
		[Register("intersect", "([ZLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Boolean> Intersect(bool[] _this_intersect, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_intersect);
			ICollection<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("intersect.([ZLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_intersect != null)
				{
					JNIEnv.CopyArray(intPtr, _this_intersect);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_intersect);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600226D RID: 8813 RVA: 0x0007EF8C File Offset: 0x0007D18C
		[Register("intersect", "([BLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Byte> Intersect(byte[] _this_intersect, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_intersect);
			ICollection<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("intersect.([BLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_intersect != null)
				{
					JNIEnv.CopyArray(intPtr, _this_intersect);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_intersect);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600226E RID: 8814 RVA: 0x0007F034 File Offset: 0x0007D234
		[Register("intersect", "([CLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Character> Intersect(char[] _this_intersect, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_intersect);
			ICollection<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("intersect.([CLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_intersect != null)
				{
					JNIEnv.CopyArray(intPtr, _this_intersect);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_intersect);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600226F RID: 8815 RVA: 0x0007F0DC File Offset: 0x0007D2DC
		[Register("intersect", "([DLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Double> Intersect(double[] _this_intersect, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_intersect);
			ICollection<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("intersect.([DLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_intersect != null)
				{
					JNIEnv.CopyArray(intPtr, _this_intersect);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_intersect);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002270 RID: 8816 RVA: 0x0007F184 File Offset: 0x0007D384
		[Register("intersect", "([FLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Float> Intersect(float[] _this_intersect, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_intersect);
			ICollection<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("intersect.([FLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_intersect != null)
				{
					JNIEnv.CopyArray(intPtr, _this_intersect);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_intersect);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002271 RID: 8817 RVA: 0x0007F22C File Offset: 0x0007D42C
		[Register("intersect", "([ILjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Integer> Intersect(int[] _this_intersect, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_intersect);
			ICollection<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("intersect.([ILjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_intersect != null)
				{
					JNIEnv.CopyArray(intPtr, _this_intersect);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_intersect);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002272 RID: 8818 RVA: 0x0007F2D4 File Offset: 0x0007D4D4
		[Register("intersect", "([JLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Long> Intersect(long[] _this_intersect, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_intersect);
			ICollection<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("intersect.([JLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_intersect != null)
				{
					JNIEnv.CopyArray(intPtr, _this_intersect);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_intersect);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002273 RID: 8819 RVA: 0x0007F37C File Offset: 0x0007D57C
		[Register("intersect", "([SLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Short> Intersect(short[] _this_intersect, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_intersect);
			ICollection<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("intersect.([SLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_intersect != null)
				{
					JNIEnv.CopyArray(intPtr, _this_intersect);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_intersect);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002274 RID: 8820 RVA: 0x0007F424 File Offset: 0x0007D624
		[Register("intersect", "([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.ICollection Intersect(Java.Lang.Object[] _this_intersect, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_intersect);
			System.Collections.ICollection result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("intersect.([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_intersect != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_intersect);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_intersect);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002275 RID: 8821 RVA: 0x0007F4CC File Offset: 0x0007D6CC
		[Register("joinTo", "([ZLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", "")]
		[JavaTypeParameters(new string[]
		{
			"A extends java.lang.Appendable"
		})]
		public unsafe static Java.Lang.Object JoinTo(bool[] _this_joinTo, Java.Lang.Object buffer, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(buffer);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr6 = CharSequence.ToLocalJniHandle(truncated);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)8) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(intPtr5);
				ptr[5] = new JniArgumentValue(limit);
				ptr[6] = new JniArgumentValue(intPtr6);
				ptr[7] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinTo.([ZLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				JNIEnv.DeleteLocalRef(intPtr6);
				GC.KeepAlive(_this_joinTo);
				GC.KeepAlive(buffer);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002276 RID: 8822 RVA: 0x0007F674 File Offset: 0x0007D874
		public static Java.Lang.Object JoinTo(bool[] _this_joinTo, Java.Lang.Object buffer, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			Java.Lang.Object result = ArraysKt.JoinTo(_this_joinTo, buffer, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002277 RID: 8823 RVA: 0x0007F6EC File Offset: 0x0007D8EC
		[Register("joinTo", "([BLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", "")]
		[JavaTypeParameters(new string[]
		{
			"A extends java.lang.Appendable"
		})]
		public unsafe static Java.Lang.Object JoinTo(byte[] _this_joinTo, Java.Lang.Object buffer, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(buffer);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr6 = CharSequence.ToLocalJniHandle(truncated);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)8) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(intPtr5);
				ptr[5] = new JniArgumentValue(limit);
				ptr[6] = new JniArgumentValue(intPtr6);
				ptr[7] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinTo.([BLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				JNIEnv.DeleteLocalRef(intPtr6);
				GC.KeepAlive(_this_joinTo);
				GC.KeepAlive(buffer);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002278 RID: 8824 RVA: 0x0007F894 File Offset: 0x0007DA94
		public static Java.Lang.Object JoinTo(byte[] _this_joinTo, Java.Lang.Object buffer, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			Java.Lang.Object result = ArraysKt.JoinTo(_this_joinTo, buffer, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002279 RID: 8825 RVA: 0x0007F90C File Offset: 0x0007DB0C
		[Register("joinTo", "([CLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", "")]
		[JavaTypeParameters(new string[]
		{
			"A extends java.lang.Appendable"
		})]
		public unsafe static Java.Lang.Object JoinTo(char[] _this_joinTo, Java.Lang.Object buffer, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(buffer);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr6 = CharSequence.ToLocalJniHandle(truncated);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)8) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(intPtr5);
				ptr[5] = new JniArgumentValue(limit);
				ptr[6] = new JniArgumentValue(intPtr6);
				ptr[7] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinTo.([CLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				JNIEnv.DeleteLocalRef(intPtr6);
				GC.KeepAlive(_this_joinTo);
				GC.KeepAlive(buffer);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x0600227A RID: 8826 RVA: 0x0007FAB4 File Offset: 0x0007DCB4
		public static Java.Lang.Object JoinTo(char[] _this_joinTo, Java.Lang.Object buffer, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			Java.Lang.Object result = ArraysKt.JoinTo(_this_joinTo, buffer, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x0600227B RID: 8827 RVA: 0x0007FB2C File Offset: 0x0007DD2C
		[Register("joinTo", "([DLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", "")]
		[JavaTypeParameters(new string[]
		{
			"A extends java.lang.Appendable"
		})]
		public unsafe static Java.Lang.Object JoinTo(double[] _this_joinTo, Java.Lang.Object buffer, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(buffer);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr6 = CharSequence.ToLocalJniHandle(truncated);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)8) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(intPtr5);
				ptr[5] = new JniArgumentValue(limit);
				ptr[6] = new JniArgumentValue(intPtr6);
				ptr[7] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinTo.([DLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				JNIEnv.DeleteLocalRef(intPtr6);
				GC.KeepAlive(_this_joinTo);
				GC.KeepAlive(buffer);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x0600227C RID: 8828 RVA: 0x0007FCD4 File Offset: 0x0007DED4
		public static Java.Lang.Object JoinTo(double[] _this_joinTo, Java.Lang.Object buffer, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			Java.Lang.Object result = ArraysKt.JoinTo(_this_joinTo, buffer, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x0600227D RID: 8829 RVA: 0x0007FD4C File Offset: 0x0007DF4C
		[Register("joinTo", "([FLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", "")]
		[JavaTypeParameters(new string[]
		{
			"A extends java.lang.Appendable"
		})]
		public unsafe static Java.Lang.Object JoinTo(float[] _this_joinTo, Java.Lang.Object buffer, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(buffer);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr6 = CharSequence.ToLocalJniHandle(truncated);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)8) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(intPtr5);
				ptr[5] = new JniArgumentValue(limit);
				ptr[6] = new JniArgumentValue(intPtr6);
				ptr[7] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinTo.([FLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				JNIEnv.DeleteLocalRef(intPtr6);
				GC.KeepAlive(_this_joinTo);
				GC.KeepAlive(buffer);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x0600227E RID: 8830 RVA: 0x0007FEF4 File Offset: 0x0007E0F4
		public static Java.Lang.Object JoinTo(float[] _this_joinTo, Java.Lang.Object buffer, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			Java.Lang.Object result = ArraysKt.JoinTo(_this_joinTo, buffer, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x0600227F RID: 8831 RVA: 0x0007FF6C File Offset: 0x0007E16C
		[Register("joinTo", "([ILjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", "")]
		[JavaTypeParameters(new string[]
		{
			"A extends java.lang.Appendable"
		})]
		public unsafe static Java.Lang.Object JoinTo(int[] _this_joinTo, Java.Lang.Object buffer, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(buffer);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr6 = CharSequence.ToLocalJniHandle(truncated);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)8) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(intPtr5);
				ptr[5] = new JniArgumentValue(limit);
				ptr[6] = new JniArgumentValue(intPtr6);
				ptr[7] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinTo.([ILjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				JNIEnv.DeleteLocalRef(intPtr6);
				GC.KeepAlive(_this_joinTo);
				GC.KeepAlive(buffer);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002280 RID: 8832 RVA: 0x00080114 File Offset: 0x0007E314
		public static Java.Lang.Object JoinTo(int[] _this_joinTo, Java.Lang.Object buffer, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			Java.Lang.Object result = ArraysKt.JoinTo(_this_joinTo, buffer, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002281 RID: 8833 RVA: 0x0008018C File Offset: 0x0007E38C
		[Register("joinTo", "([JLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", "")]
		[JavaTypeParameters(new string[]
		{
			"A extends java.lang.Appendable"
		})]
		public unsafe static Java.Lang.Object JoinTo(long[] _this_joinTo, Java.Lang.Object buffer, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(buffer);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr6 = CharSequence.ToLocalJniHandle(truncated);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)8) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(intPtr5);
				ptr[5] = new JniArgumentValue(limit);
				ptr[6] = new JniArgumentValue(intPtr6);
				ptr[7] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinTo.([JLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				JNIEnv.DeleteLocalRef(intPtr6);
				GC.KeepAlive(_this_joinTo);
				GC.KeepAlive(buffer);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002282 RID: 8834 RVA: 0x00080334 File Offset: 0x0007E534
		public static Java.Lang.Object JoinTo(long[] _this_joinTo, Java.Lang.Object buffer, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			Java.Lang.Object result = ArraysKt.JoinTo(_this_joinTo, buffer, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002283 RID: 8835 RVA: 0x000803AC File Offset: 0x0007E5AC
		[Register("joinTo", "([SLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", "")]
		[JavaTypeParameters(new string[]
		{
			"A extends java.lang.Appendable"
		})]
		public unsafe static Java.Lang.Object JoinTo(short[] _this_joinTo, Java.Lang.Object buffer, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(buffer);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr6 = CharSequence.ToLocalJniHandle(truncated);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)8) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(intPtr5);
				ptr[5] = new JniArgumentValue(limit);
				ptr[6] = new JniArgumentValue(intPtr6);
				ptr[7] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinTo.([SLjava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				JNIEnv.DeleteLocalRef(intPtr6);
				GC.KeepAlive(_this_joinTo);
				GC.KeepAlive(buffer);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002284 RID: 8836 RVA: 0x00080554 File Offset: 0x0007E754
		public static Java.Lang.Object JoinTo(short[] _this_joinTo, Java.Lang.Object buffer, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			Java.Lang.Object result = ArraysKt.JoinTo(_this_joinTo, buffer, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002285 RID: 8837 RVA: 0x000805CC File Offset: 0x0007E7CC
		[Register("joinTo", "([Ljava/lang/Object;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"A extends java.lang.Appendable"
		})]
		public unsafe static Java.Lang.Object JoinTo(Java.Lang.Object[] _this_joinTo, Java.Lang.Object buffer, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_joinTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(buffer);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr6 = CharSequence.ToLocalJniHandle(truncated);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)8) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(intPtr5);
				ptr[5] = new JniArgumentValue(limit);
				ptr[6] = new JniArgumentValue(intPtr6);
				ptr[7] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinTo.([Ljava/lang/Object;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/Appendable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_joinTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				JNIEnv.DeleteLocalRef(intPtr6);
				GC.KeepAlive(_this_joinTo);
				GC.KeepAlive(buffer);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x06002286 RID: 8838 RVA: 0x00080774 File Offset: 0x0007E974
		public static Java.Lang.Object JoinTo(Java.Lang.Object[] _this_joinTo, Java.Lang.Object buffer, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			Java.Lang.Object result = ArraysKt.JoinTo(_this_joinTo, buffer, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002287 RID: 8839 RVA: 0x000807EC File Offset: 0x0007E9EC
		[Register("joinToString", "([ZLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", "")]
		public unsafe static string JoinToString(bool[] _this_joinToString, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinToString);
			IntPtr intPtr2 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(truncated);
			string @string;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)7) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(limit);
				ptr[5] = new JniArgumentValue(intPtr5);
				ptr[6] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@string = JNIEnv.GetString(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinToString.([ZLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinToString != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinToString);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				GC.KeepAlive(_this_joinToString);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @string;
		}

		// Token: 0x06002288 RID: 8840 RVA: 0x00080964 File Offset: 0x0007EB64
		public static string JoinToString(bool[] _this_joinToString, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			string result = ArraysKt.JoinToString(_this_joinToString, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002289 RID: 8841 RVA: 0x000809DC File Offset: 0x0007EBDC
		[Register("joinToString", "([BLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", "")]
		public unsafe static string JoinToString(byte[] _this_joinToString, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinToString);
			IntPtr intPtr2 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(truncated);
			string @string;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)7) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(limit);
				ptr[5] = new JniArgumentValue(intPtr5);
				ptr[6] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@string = JNIEnv.GetString(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinToString.([BLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinToString != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinToString);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				GC.KeepAlive(_this_joinToString);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @string;
		}

		// Token: 0x0600228A RID: 8842 RVA: 0x00080B54 File Offset: 0x0007ED54
		public static string JoinToString(byte[] _this_joinToString, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			string result = ArraysKt.JoinToString(_this_joinToString, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x0600228B RID: 8843 RVA: 0x00080BCC File Offset: 0x0007EDCC
		[Register("joinToString", "([CLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", "")]
		public unsafe static string JoinToString(char[] _this_joinToString, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinToString);
			IntPtr intPtr2 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(truncated);
			string @string;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)7) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(limit);
				ptr[5] = new JniArgumentValue(intPtr5);
				ptr[6] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@string = JNIEnv.GetString(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinToString.([CLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinToString != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinToString);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				GC.KeepAlive(_this_joinToString);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @string;
		}

		// Token: 0x0600228C RID: 8844 RVA: 0x00080D44 File Offset: 0x0007EF44
		public static string JoinToString(char[] _this_joinToString, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			string result = ArraysKt.JoinToString(_this_joinToString, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x0600228D RID: 8845 RVA: 0x00080DBC File Offset: 0x0007EFBC
		[Register("joinToString", "([DLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", "")]
		public unsafe static string JoinToString(double[] _this_joinToString, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinToString);
			IntPtr intPtr2 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(truncated);
			string @string;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)7) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(limit);
				ptr[5] = new JniArgumentValue(intPtr5);
				ptr[6] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@string = JNIEnv.GetString(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinToString.([DLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinToString != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinToString);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				GC.KeepAlive(_this_joinToString);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @string;
		}

		// Token: 0x0600228E RID: 8846 RVA: 0x00080F34 File Offset: 0x0007F134
		public static string JoinToString(double[] _this_joinToString, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			string result = ArraysKt.JoinToString(_this_joinToString, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x0600228F RID: 8847 RVA: 0x00080FAC File Offset: 0x0007F1AC
		[Register("joinToString", "([FLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", "")]
		public unsafe static string JoinToString(float[] _this_joinToString, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinToString);
			IntPtr intPtr2 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(truncated);
			string @string;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)7) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(limit);
				ptr[5] = new JniArgumentValue(intPtr5);
				ptr[6] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@string = JNIEnv.GetString(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinToString.([FLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinToString != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinToString);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				GC.KeepAlive(_this_joinToString);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @string;
		}

		// Token: 0x06002290 RID: 8848 RVA: 0x00081124 File Offset: 0x0007F324
		public static string JoinToString(float[] _this_joinToString, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			string result = ArraysKt.JoinToString(_this_joinToString, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002291 RID: 8849 RVA: 0x0008119C File Offset: 0x0007F39C
		[Register("joinToString", "([ILjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", "")]
		public unsafe static string JoinToString(int[] _this_joinToString, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinToString);
			IntPtr intPtr2 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(truncated);
			string @string;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)7) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(limit);
				ptr[5] = new JniArgumentValue(intPtr5);
				ptr[6] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@string = JNIEnv.GetString(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinToString.([ILjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinToString != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinToString);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				GC.KeepAlive(_this_joinToString);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @string;
		}

		// Token: 0x06002292 RID: 8850 RVA: 0x00081314 File Offset: 0x0007F514
		public static string JoinToString(int[] _this_joinToString, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			string result = ArraysKt.JoinToString(_this_joinToString, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002293 RID: 8851 RVA: 0x0008138C File Offset: 0x0007F58C
		[Register("joinToString", "([JLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", "")]
		public unsafe static string JoinToString(long[] _this_joinToString, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinToString);
			IntPtr intPtr2 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(truncated);
			string @string;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)7) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(limit);
				ptr[5] = new JniArgumentValue(intPtr5);
				ptr[6] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@string = JNIEnv.GetString(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinToString.([JLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinToString != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinToString);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				GC.KeepAlive(_this_joinToString);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @string;
		}

		// Token: 0x06002294 RID: 8852 RVA: 0x00081504 File Offset: 0x0007F704
		public static string JoinToString(long[] _this_joinToString, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			string result = ArraysKt.JoinToString(_this_joinToString, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002295 RID: 8853 RVA: 0x0008157C File Offset: 0x0007F77C
		[Register("joinToString", "([SLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", "")]
		public unsafe static string JoinToString(short[] _this_joinToString, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_joinToString);
			IntPtr intPtr2 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(truncated);
			string @string;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)7) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(limit);
				ptr[5] = new JniArgumentValue(intPtr5);
				ptr[6] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@string = JNIEnv.GetString(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinToString.([SLjava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinToString != null)
				{
					JNIEnv.CopyArray(intPtr, _this_joinToString);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				GC.KeepAlive(_this_joinToString);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @string;
		}

		// Token: 0x06002296 RID: 8854 RVA: 0x000816F4 File Offset: 0x0007F8F4
		public static string JoinToString(short[] _this_joinToString, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			string result = ArraysKt.JoinToString(_this_joinToString, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002297 RID: 8855 RVA: 0x0008176C File Offset: 0x0007F96C
		[Register("joinToString", "([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static string JoinToString(Java.Lang.Object[] _this_joinToString, ICharSequence separator, ICharSequence prefix, ICharSequence postfix, int limit, ICharSequence truncated, [Nullable(2)] IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_joinToString);
			IntPtr intPtr2 = CharSequence.ToLocalJniHandle(separator);
			IntPtr intPtr3 = CharSequence.ToLocalJniHandle(prefix);
			IntPtr intPtr4 = CharSequence.ToLocalJniHandle(postfix);
			IntPtr intPtr5 = CharSequence.ToLocalJniHandle(truncated);
			string @string;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)7) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(intPtr3);
				ptr[3] = new JniArgumentValue(intPtr4);
				ptr[4] = new JniArgumentValue(limit);
				ptr[5] = new JniArgumentValue(intPtr5);
				ptr[6] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@string = JNIEnv.GetString(ArraysKt._members.StaticMethods.InvokeObjectMethod("joinToString.([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_joinToString != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_joinToString);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				JNIEnv.DeleteLocalRef(intPtr3);
				JNIEnv.DeleteLocalRef(intPtr4);
				JNIEnv.DeleteLocalRef(intPtr5);
				GC.KeepAlive(_this_joinToString);
				GC.KeepAlive(separator);
				GC.KeepAlive(prefix);
				GC.KeepAlive(postfix);
				GC.KeepAlive(truncated);
				GC.KeepAlive(transform);
			}
			return @string;
		}

		// Token: 0x06002298 RID: 8856 RVA: 0x000818E4 File Offset: 0x0007FAE4
		public static string JoinToString(Java.Lang.Object[] _this_joinToString, string separator, string prefix, string postfix, int limit, string truncated, [Nullable(2)] IFunction1 transform)
		{
			Java.Lang.String @string = (separator == null) ? null : new Java.Lang.String(separator);
			Java.Lang.String string2 = (prefix == null) ? null : new Java.Lang.String(prefix);
			Java.Lang.String string3 = (postfix == null) ? null : new Java.Lang.String(postfix);
			Java.Lang.String string4 = (truncated == null) ? null : new Java.Lang.String(truncated);
			string result = ArraysKt.JoinToString(_this_joinToString, @string, string2, string3, limit, string4, transform);
			if (@string != null)
			{
				@string.Dispose();
			}
			if (string2 != null)
			{
				string2.Dispose();
			}
			if (string3 != null)
			{
				string3.Dispose();
			}
			if (string4 != null)
			{
				string4.Dispose();
			}
			return result;
		}

		// Token: 0x06002299 RID: 8857 RVA: 0x0008195C File Offset: 0x0007FB5C
		[Register("last", "([Z)Z", "")]
		public unsafe static bool Last(bool[] _this_last)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("last.([Z)Z", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
			}
			return result;
		}

		// Token: 0x0600229A RID: 8858 RVA: 0x000819C8 File Offset: 0x0007FBC8
		[Register("last", "([ZLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool Last(bool[] _this_last, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("last.([ZLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600229B RID: 8859 RVA: 0x00081A64 File Offset: 0x0007FC64
		[Register("last", "([B)B", "")]
		public unsafe static sbyte Last(byte[] _this_last)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("last.([B)B", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
			}
			return result;
		}

		// Token: 0x0600229C RID: 8860 RVA: 0x00081AD0 File Offset: 0x0007FCD0
		[Register("last", "([BLkotlin/jvm/functions/Function1;)B", "")]
		public unsafe static sbyte Last(byte[] _this_last, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("last.([BLkotlin/jvm/functions/Function1;)B", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600229D RID: 8861 RVA: 0x00081B6C File Offset: 0x0007FD6C
		[Register("last", "([C)C", "")]
		public unsafe static char Last(char[] _this_last)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("last.([C)C", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
			}
			return result;
		}

		// Token: 0x0600229E RID: 8862 RVA: 0x00081BD8 File Offset: 0x0007FDD8
		[Register("last", "([CLkotlin/jvm/functions/Function1;)C", "")]
		public unsafe static char Last(char[] _this_last, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("last.([CLkotlin/jvm/functions/Function1;)C", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600229F RID: 8863 RVA: 0x00081C74 File Offset: 0x0007FE74
		[Register("last", "([D)D", "")]
		public unsafe static double Last(double[] _this_last)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("last.([D)D", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
			}
			return result;
		}

		// Token: 0x060022A0 RID: 8864 RVA: 0x00081CE0 File Offset: 0x0007FEE0
		[Register("last", "([DLkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double Last(double[] _this_last, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("last.([DLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060022A1 RID: 8865 RVA: 0x00081D7C File Offset: 0x0007FF7C
		[Register("last", "([F)F", "")]
		public unsafe static float Last(float[] _this_last)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("last.([F)F", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
			}
			return result;
		}

		// Token: 0x060022A2 RID: 8866 RVA: 0x00081DE8 File Offset: 0x0007FFE8
		[Register("last", "([FLkotlin/jvm/functions/Function1;)F", "")]
		public unsafe static float Last(float[] _this_last, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("last.([FLkotlin/jvm/functions/Function1;)F", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060022A3 RID: 8867 RVA: 0x00081E84 File Offset: 0x00080084
		[Register("last", "([I)I", "")]
		public unsafe static int Last(int[] _this_last)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("last.([I)I", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
			}
			return result;
		}

		// Token: 0x060022A4 RID: 8868 RVA: 0x00081EF0 File Offset: 0x000800F0
		[Register("last", "([ILkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int Last(int[] _this_last, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("last.([ILkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060022A5 RID: 8869 RVA: 0x00081F8C File Offset: 0x0008018C
		[Register("last", "([J)J", "")]
		public unsafe static long Last(long[] _this_last)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("last.([J)J", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
			}
			return result;
		}

		// Token: 0x060022A6 RID: 8870 RVA: 0x00081FF8 File Offset: 0x000801F8
		[Register("last", "([JLkotlin/jvm/functions/Function1;)J", "")]
		public unsafe static long Last(long[] _this_last, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("last.([JLkotlin/jvm/functions/Function1;)J", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060022A7 RID: 8871 RVA: 0x00082094 File Offset: 0x00080294
		[Register("last", "([S)S", "")]
		public unsafe static short Last(short[] _this_last)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("last.([S)S", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
			}
			return result;
		}

		// Token: 0x060022A8 RID: 8872 RVA: 0x00082100 File Offset: 0x00080300
		[Register("last", "([SLkotlin/jvm/functions/Function1;)S", "")]
		public unsafe static short Last(short[] _this_last, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_last);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("last.([SLkotlin/jvm/functions/Function1;)S", ptr);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060022A9 RID: 8873 RVA: 0x0008219C File Offset: 0x0008039C
		[Register("last", "([Ljava/lang/Object;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Last(Java.Lang.Object[] _this_last)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_last);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("last.([Ljava/lang/Object;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
			}
			return @object;
		}

		// Token: 0x060022AA RID: 8874 RVA: 0x00082218 File Offset: 0x00080418
		[Register("last", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Last(Java.Lang.Object[] _this_last, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_last);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("last.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_last != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_last);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_last);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060022AB RID: 8875 RVA: 0x000822C0 File Offset: 0x000804C0
		[Register("lastIndexOf", "([ZZ)I", "")]
		public unsafe static int LastIndexOf(bool[] _this_lastIndexOf, bool element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("lastIndexOf.([ZZ)I", ptr);
			}
			finally
			{
				if (_this_lastIndexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndexOf);
			}
			return result;
		}

		// Token: 0x060022AC RID: 8876 RVA: 0x00082340 File Offset: 0x00080540
		[Register("lastIndexOf", "([BB)I", "")]
		public unsafe static int LastIndexOf(byte[] _this_lastIndexOf, sbyte element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("lastIndexOf.([BB)I", ptr);
			}
			finally
			{
				if (_this_lastIndexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndexOf);
			}
			return result;
		}

		// Token: 0x060022AD RID: 8877 RVA: 0x000823C0 File Offset: 0x000805C0
		[Register("lastIndexOf", "([CC)I", "")]
		public unsafe static int LastIndexOf(char[] _this_lastIndexOf, char element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("lastIndexOf.([CC)I", ptr);
			}
			finally
			{
				if (_this_lastIndexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndexOf);
			}
			return result;
		}

		// Token: 0x060022AE RID: 8878 RVA: 0x00082440 File Offset: 0x00080640
		[Register("lastIndexOf", "([II)I", "")]
		public unsafe static int LastIndexOf(int[] _this_lastIndexOf, int element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("lastIndexOf.([II)I", ptr);
			}
			finally
			{
				if (_this_lastIndexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndexOf);
			}
			return result;
		}

		// Token: 0x060022AF RID: 8879 RVA: 0x000824C0 File Offset: 0x000806C0
		[Register("lastIndexOf", "([JJ)I", "")]
		public unsafe static int LastIndexOf(long[] _this_lastIndexOf, long element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("lastIndexOf.([JJ)I", ptr);
			}
			finally
			{
				if (_this_lastIndexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndexOf);
			}
			return result;
		}

		// Token: 0x060022B0 RID: 8880 RVA: 0x00082540 File Offset: 0x00080740
		[Register("lastIndexOf", "([SS)I", "")]
		public unsafe static int LastIndexOf(short[] _this_lastIndexOf, short element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastIndexOf);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("lastIndexOf.([SS)I", ptr);
			}
			finally
			{
				if (_this_lastIndexOf != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastIndexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastIndexOf);
			}
			return result;
		}

		// Token: 0x060022B1 RID: 8881 RVA: 0x000825C0 File Offset: 0x000807C0
		[Register("lastIndexOf", "([Ljava/lang/Object;Ljava/lang/Object;)I", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static int LastIndexOf(Java.Lang.Object[] _this_lastIndexOf, [Nullable(2)] Java.Lang.Object element)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_lastIndexOf);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(element);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("lastIndexOf.([Ljava/lang/Object;Ljava/lang/Object;)I", ptr);
			}
			finally
			{
				if (_this_lastIndexOf != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_lastIndexOf);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_lastIndexOf);
				GC.KeepAlive(element);
			}
			return result;
		}

		// Token: 0x060022B2 RID: 8882 RVA: 0x00082654 File Offset: 0x00080854
		[Register("lastOrNull", "([Z)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean LastOrNull(bool[] _this_lastOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([Z)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
			}
			return @object;
		}

		// Token: 0x060022B3 RID: 8883 RVA: 0x000826D0 File Offset: 0x000808D0
		[Register("lastOrNull", "([ZLkotlin/jvm/functions/Function1;)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean LastOrNull(bool[] _this_lastOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([ZLkotlin/jvm/functions/Function1;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060022B4 RID: 8884 RVA: 0x00082778 File Offset: 0x00080978
		[Register("lastOrNull", "([B)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte LastOrNull(byte[] _this_lastOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([B)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
			}
			return @object;
		}

		// Token: 0x060022B5 RID: 8885 RVA: 0x000827F4 File Offset: 0x000809F4
		[Register("lastOrNull", "([BLkotlin/jvm/functions/Function1;)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte LastOrNull(byte[] _this_lastOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([BLkotlin/jvm/functions/Function1;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060022B6 RID: 8886 RVA: 0x0008289C File Offset: 0x00080A9C
		[Register("lastOrNull", "([C)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character LastOrNull(char[] _this_lastOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([C)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
			}
			return @object;
		}

		// Token: 0x060022B7 RID: 8887 RVA: 0x00082918 File Offset: 0x00080B18
		[Register("lastOrNull", "([CLkotlin/jvm/functions/Function1;)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character LastOrNull(char[] _this_lastOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([CLkotlin/jvm/functions/Function1;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060022B8 RID: 8888 RVA: 0x000829C0 File Offset: 0x00080BC0
		[Register("lastOrNull", "([D)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double LastOrNull(double[] _this_lastOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([D)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
			}
			return @object;
		}

		// Token: 0x060022B9 RID: 8889 RVA: 0x00082A3C File Offset: 0x00080C3C
		[Register("lastOrNull", "([DLkotlin/jvm/functions/Function1;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double LastOrNull(double[] _this_lastOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([DLkotlin/jvm/functions/Function1;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060022BA RID: 8890 RVA: 0x00082AE4 File Offset: 0x00080CE4
		[Register("lastOrNull", "([F)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float LastOrNull(float[] _this_lastOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([F)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
			}
			return @object;
		}

		// Token: 0x060022BB RID: 8891 RVA: 0x00082B60 File Offset: 0x00080D60
		[Register("lastOrNull", "([FLkotlin/jvm/functions/Function1;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float LastOrNull(float[] _this_lastOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([FLkotlin/jvm/functions/Function1;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060022BC RID: 8892 RVA: 0x00082C08 File Offset: 0x00080E08
		[Register("lastOrNull", "([I)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer LastOrNull(int[] _this_lastOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([I)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
			}
			return @object;
		}

		// Token: 0x060022BD RID: 8893 RVA: 0x00082C84 File Offset: 0x00080E84
		[Register("lastOrNull", "([ILkotlin/jvm/functions/Function1;)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer LastOrNull(int[] _this_lastOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([ILkotlin/jvm/functions/Function1;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060022BE RID: 8894 RVA: 0x00082D2C File Offset: 0x00080F2C
		[Register("lastOrNull", "([J)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long LastOrNull(long[] _this_lastOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([J)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
			}
			return @object;
		}

		// Token: 0x060022BF RID: 8895 RVA: 0x00082DA8 File Offset: 0x00080FA8
		[Register("lastOrNull", "([JLkotlin/jvm/functions/Function1;)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long LastOrNull(long[] _this_lastOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([JLkotlin/jvm/functions/Function1;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060022C0 RID: 8896 RVA: 0x00082E50 File Offset: 0x00081050
		[Register("lastOrNull", "([S)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short LastOrNull(short[] _this_lastOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([S)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
			}
			return @object;
		}

		// Token: 0x060022C1 RID: 8897 RVA: 0x00082ECC File Offset: 0x000810CC
		[Register("lastOrNull", "([SLkotlin/jvm/functions/Function1;)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short LastOrNull(short[] _this_lastOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_lastOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([SLkotlin/jvm/functions/Function1;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060022C2 RID: 8898 RVA: 0x00082F74 File Offset: 0x00081174
		[Register("lastOrNull", "([Ljava/lang/Object;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object LastOrNull(Java.Lang.Object[] _this_lastOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_lastOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([Ljava/lang/Object;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
			}
			return @object;
		}

		// Token: 0x060022C3 RID: 8899 RVA: 0x00082FF0 File Offset: 0x000811F0
		[Register("lastOrNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object LastOrNull(Java.Lang.Object[] _this_lastOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_lastOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("lastOrNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_lastOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_lastOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_lastOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x060022C4 RID: 8900 RVA: 0x00083098 File Offset: 0x00081298
		[Register("map", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Map(bool[] _this_map, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_map);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("map.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_map != null)
				{
					JNIEnv.CopyArray(intPtr, _this_map);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_map);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022C5 RID: 8901 RVA: 0x00083140 File Offset: 0x00081340
		[Register("map", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Map(byte[] _this_map, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_map);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("map.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_map != null)
				{
					JNIEnv.CopyArray(intPtr, _this_map);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_map);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022C6 RID: 8902 RVA: 0x000831E8 File Offset: 0x000813E8
		[Register("map", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Map(char[] _this_map, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_map);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("map.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_map != null)
				{
					JNIEnv.CopyArray(intPtr, _this_map);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_map);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022C7 RID: 8903 RVA: 0x00083290 File Offset: 0x00081490
		[Register("map", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Map(double[] _this_map, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_map);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("map.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_map != null)
				{
					JNIEnv.CopyArray(intPtr, _this_map);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_map);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022C8 RID: 8904 RVA: 0x00083338 File Offset: 0x00081538
		[Register("map", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Map(float[] _this_map, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_map);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("map.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_map != null)
				{
					JNIEnv.CopyArray(intPtr, _this_map);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_map);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022C9 RID: 8905 RVA: 0x000833E0 File Offset: 0x000815E0
		[Register("map", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Map(int[] _this_map, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_map);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("map.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_map != null)
				{
					JNIEnv.CopyArray(intPtr, _this_map);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_map);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022CA RID: 8906 RVA: 0x00083488 File Offset: 0x00081688
		[Register("map", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Map(long[] _this_map, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_map);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("map.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_map != null)
				{
					JNIEnv.CopyArray(intPtr, _this_map);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_map);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022CB RID: 8907 RVA: 0x00083530 File Offset: 0x00081730
		[Register("map", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Map(short[] _this_map, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_map);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("map.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_map != null)
				{
					JNIEnv.CopyArray(intPtr, _this_map);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_map);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022CC RID: 8908 RVA: 0x000835D8 File Offset: 0x000817D8
		[Register("map", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList Map(Java.Lang.Object[] _this_map, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_map);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("map.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_map != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_map);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_map);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022CD RID: 8909 RVA: 0x00083680 File Offset: 0x00081880
		[Register("mapIndexed", "([ZLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList MapIndexed(bool[] _this_mapIndexed, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexed.([ZLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapIndexed);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022CE RID: 8910 RVA: 0x00083728 File Offset: 0x00081928
		[Register("mapIndexed", "([BLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList MapIndexed(byte[] _this_mapIndexed, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexed.([BLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapIndexed);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022CF RID: 8911 RVA: 0x000837D0 File Offset: 0x000819D0
		[Register("mapIndexed", "([CLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList MapIndexed(char[] _this_mapIndexed, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexed.([CLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapIndexed);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022D0 RID: 8912 RVA: 0x00083878 File Offset: 0x00081A78
		[Register("mapIndexed", "([DLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList MapIndexed(double[] _this_mapIndexed, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexed.([DLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapIndexed);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022D1 RID: 8913 RVA: 0x00083920 File Offset: 0x00081B20
		[Register("mapIndexed", "([FLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList MapIndexed(float[] _this_mapIndexed, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexed.([FLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapIndexed);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022D2 RID: 8914 RVA: 0x000839C8 File Offset: 0x00081BC8
		[Register("mapIndexed", "([ILkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList MapIndexed(int[] _this_mapIndexed, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexed.([ILkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapIndexed);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022D3 RID: 8915 RVA: 0x00083A70 File Offset: 0x00081C70
		[Register("mapIndexed", "([JLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList MapIndexed(long[] _this_mapIndexed, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexed.([JLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapIndexed);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022D4 RID: 8916 RVA: 0x00083B18 File Offset: 0x00081D18
		[Register("mapIndexed", "([SLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList MapIndexed(short[] _this_mapIndexed, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexed.([SLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapIndexed);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022D5 RID: 8917 RVA: 0x00083BC0 File Offset: 0x00081DC0
		[Register("mapIndexed", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList MapIndexed(Java.Lang.Object[] _this_mapIndexed, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_mapIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexed.([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_mapIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapIndexed);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022D6 RID: 8918 RVA: 0x00083C68 File Offset: 0x00081E68
		[Register("mapIndexedNotNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList MapIndexedNotNull(Java.Lang.Object[] _this_mapIndexedNotNull, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_mapIndexedNotNull);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedNotNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedNotNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_mapIndexedNotNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapIndexedNotNull);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022D7 RID: 8919 RVA: 0x00083D10 File Offset: 0x00081F10
		[Register("mapIndexedNotNullTo", "([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapIndexedNotNullTo(Java.Lang.Object[] _this_mapIndexedNotNullTo, Java.Lang.Object destination, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_mapIndexedNotNullTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedNotNullTo.([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedNotNullTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_mapIndexedNotNullTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapIndexedNotNullTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022D8 RID: 8920 RVA: 0x00083DE4 File Offset: 0x00081FE4
		[Register("mapIndexedTo", "([ZLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapIndexedTo(bool[] _this_mapIndexedTo, Java.Lang.Object destination, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedTo.([ZLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022D9 RID: 8921 RVA: 0x00083EB8 File Offset: 0x000820B8
		[Register("mapIndexedTo", "([BLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapIndexedTo(byte[] _this_mapIndexedTo, Java.Lang.Object destination, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedTo.([BLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022DA RID: 8922 RVA: 0x00083F8C File Offset: 0x0008218C
		[Register("mapIndexedTo", "([CLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapIndexedTo(char[] _this_mapIndexedTo, Java.Lang.Object destination, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedTo.([CLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022DB RID: 8923 RVA: 0x00084060 File Offset: 0x00082260
		[Register("mapIndexedTo", "([DLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapIndexedTo(double[] _this_mapIndexedTo, Java.Lang.Object destination, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedTo.([DLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022DC RID: 8924 RVA: 0x00084134 File Offset: 0x00082334
		[Register("mapIndexedTo", "([FLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapIndexedTo(float[] _this_mapIndexedTo, Java.Lang.Object destination, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedTo.([FLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022DD RID: 8925 RVA: 0x00084208 File Offset: 0x00082408
		[Register("mapIndexedTo", "([ILjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapIndexedTo(int[] _this_mapIndexedTo, Java.Lang.Object destination, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedTo.([ILjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022DE RID: 8926 RVA: 0x000842DC File Offset: 0x000824DC
		[Register("mapIndexedTo", "([JLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapIndexedTo(long[] _this_mapIndexedTo, Java.Lang.Object destination, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedTo.([JLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022DF RID: 8927 RVA: 0x000843B0 File Offset: 0x000825B0
		[Register("mapIndexedTo", "([SLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapIndexedTo(short[] _this_mapIndexedTo, Java.Lang.Object destination, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedTo.([SLjava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022E0 RID: 8928 RVA: 0x00084484 File Offset: 0x00082684
		[Register("mapIndexedTo", "([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapIndexedTo(Java.Lang.Object[] _this_mapIndexedTo, Java.Lang.Object destination, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_mapIndexedTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapIndexedTo.([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function2;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapIndexedTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_mapIndexedTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapIndexedTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022E1 RID: 8929 RVA: 0x00084558 File Offset: 0x00082758
		[Register("mapNotNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList MapNotNull(Java.Lang.Object[] _this_mapNotNull, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_mapNotNull);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapNotNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapNotNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_mapNotNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_mapNotNull);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x060022E2 RID: 8930 RVA: 0x00084600 File Offset: 0x00082800
		[Register("mapNotNullTo", "([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapNotNullTo(Java.Lang.Object[] _this_mapNotNullTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_mapNotNullTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapNotNullTo.([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapNotNullTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_mapNotNullTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapNotNullTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022E3 RID: 8931 RVA: 0x000846D4 File Offset: 0x000828D4
		[Register("mapTo", "([ZLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapTo(bool[] _this_mapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapTo.([ZLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022E4 RID: 8932 RVA: 0x000847A8 File Offset: 0x000829A8
		[Register("mapTo", "([BLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapTo(byte[] _this_mapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapTo.([BLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022E5 RID: 8933 RVA: 0x0008487C File Offset: 0x00082A7C
		[Register("mapTo", "([CLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapTo(char[] _this_mapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapTo.([CLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022E6 RID: 8934 RVA: 0x00084950 File Offset: 0x00082B50
		[Register("mapTo", "([DLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapTo(double[] _this_mapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapTo.([DLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022E7 RID: 8935 RVA: 0x00084A24 File Offset: 0x00082C24
		[Register("mapTo", "([FLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapTo(float[] _this_mapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapTo.([FLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022E8 RID: 8936 RVA: 0x00084AF8 File Offset: 0x00082CF8
		[Register("mapTo", "([ILjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapTo(int[] _this_mapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapTo.([ILjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022E9 RID: 8937 RVA: 0x00084BCC File Offset: 0x00082DCC
		[Register("mapTo", "([JLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapTo(long[] _this_mapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapTo.([JLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022EA RID: 8938 RVA: 0x00084CA0 File Offset: 0x00082EA0
		[Register("mapTo", "([SLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapTo(short[] _this_mapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_mapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapTo.([SLjava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapTo != null)
				{
					JNIEnv.CopyArray(intPtr, _this_mapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022EB RID: 8939 RVA: 0x00084D74 File Offset: 0x00082F74
		[Register("mapTo", "([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R",
			"C extends java.util.Collection<? super R>"
		})]
		public unsafe static Java.Lang.Object MapTo(Java.Lang.Object[] _this_mapTo, Java.Lang.Object destination, IFunction1 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_mapTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("mapTo.([Ljava/lang/Object;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_mapTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_mapTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_mapTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(transform);
			}
			return @object;
		}

		// Token: 0x060022EC RID: 8940 RVA: 0x00084E48 File Offset: 0x00083048
		[Register("maxByOrNull", "([ZLkotlin/jvm/functions/Function1;)Ljava/lang/Boolean;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean MaxByOrNull(bool[] _this_maxByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxByOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxByOrNull.([ZLkotlin/jvm/functions/Function1;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x060022ED RID: 8941 RVA: 0x00084EF0 File Offset: 0x000830F0
		[Register("maxByOrNull", "([BLkotlin/jvm/functions/Function1;)Ljava/lang/Byte;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte MaxByOrNull(byte[] _this_maxByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxByOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxByOrNull.([BLkotlin/jvm/functions/Function1;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x060022EE RID: 8942 RVA: 0x00084F98 File Offset: 0x00083198
		[Register("maxByOrNull", "([CLkotlin/jvm/functions/Function1;)Ljava/lang/Character;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Character MaxByOrNull(char[] _this_maxByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxByOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxByOrNull.([CLkotlin/jvm/functions/Function1;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x060022EF RID: 8943 RVA: 0x00085040 File Offset: 0x00083240
		[Register("maxByOrNull", "([DLkotlin/jvm/functions/Function1;)Ljava/lang/Double;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double MaxByOrNull(double[] _this_maxByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxByOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxByOrNull.([DLkotlin/jvm/functions/Function1;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x060022F0 RID: 8944 RVA: 0x000850E8 File Offset: 0x000832E8
		[Register("maxByOrNull", "([FLkotlin/jvm/functions/Function1;)Ljava/lang/Float;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Float MaxByOrNull(float[] _this_maxByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxByOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxByOrNull.([FLkotlin/jvm/functions/Function1;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x060022F1 RID: 8945 RVA: 0x00085190 File Offset: 0x00083390
		[Register("maxByOrNull", "([ILkotlin/jvm/functions/Function1;)Ljava/lang/Integer;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Integer MaxByOrNull(int[] _this_maxByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxByOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxByOrNull.([ILkotlin/jvm/functions/Function1;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x060022F2 RID: 8946 RVA: 0x00085238 File Offset: 0x00083438
		[Register("maxByOrNull", "([JLkotlin/jvm/functions/Function1;)Ljava/lang/Long;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Long MaxByOrNull(long[] _this_maxByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxByOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxByOrNull.([JLkotlin/jvm/functions/Function1;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x060022F3 RID: 8947 RVA: 0x000852E0 File Offset: 0x000834E0
		[Register("maxByOrNull", "([SLkotlin/jvm/functions/Function1;)Ljava/lang/Short;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Short MaxByOrNull(short[] _this_maxByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxByOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxByOrNull.([SLkotlin/jvm/functions/Function1;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x060022F4 RID: 8948 RVA: 0x00085388 File Offset: 0x00083588
		[Register("maxByOrNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object MaxByOrNull(Java.Lang.Object[] _this_maxByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_maxByOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxByOrNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxByOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_maxByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x060022F5 RID: 8949 RVA: 0x00085430 File Offset: 0x00083630
		[Register("maxByOrThrow", "([ZLkotlin/jvm/functions/Function1;)Z", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static bool MaxByOrThrow(bool[] _this_maxBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxBy);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("maxByOrThrow.([ZLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_maxBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060022F6 RID: 8950 RVA: 0x000854CC File Offset: 0x000836CC
		[Register("maxByOrThrow", "([BLkotlin/jvm/functions/Function1;)B", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static sbyte MaxByOrThrow(byte[] _this_maxBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxBy);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("maxByOrThrow.([BLkotlin/jvm/functions/Function1;)B", ptr);
			}
			finally
			{
				if (_this_maxBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060022F7 RID: 8951 RVA: 0x00085568 File Offset: 0x00083768
		[Register("maxByOrThrow", "([CLkotlin/jvm/functions/Function1;)C", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static char MaxByOrThrow(char[] _this_maxBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxBy);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("maxByOrThrow.([CLkotlin/jvm/functions/Function1;)C", ptr);
			}
			finally
			{
				if (_this_maxBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060022F8 RID: 8952 RVA: 0x00085604 File Offset: 0x00083804
		[Register("maxByOrThrow", "([DLkotlin/jvm/functions/Function1;)D", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static double MaxByOrThrow(double[] _this_maxBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxBy);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("maxByOrThrow.([DLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_maxBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060022F9 RID: 8953 RVA: 0x000856A0 File Offset: 0x000838A0
		[Register("maxByOrThrow", "([FLkotlin/jvm/functions/Function1;)F", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static float MaxByOrThrow(float[] _this_maxBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxBy);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("maxByOrThrow.([FLkotlin/jvm/functions/Function1;)F", ptr);
			}
			finally
			{
				if (_this_maxBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060022FA RID: 8954 RVA: 0x0008573C File Offset: 0x0008393C
		[Register("maxByOrThrow", "([ILkotlin/jvm/functions/Function1;)I", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static int MaxByOrThrow(int[] _this_maxBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("maxByOrThrow.([ILkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_maxBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060022FB RID: 8955 RVA: 0x000857D8 File Offset: 0x000839D8
		[Register("maxByOrThrow", "([JLkotlin/jvm/functions/Function1;)J", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static long MaxByOrThrow(long[] _this_maxBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxBy);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("maxByOrThrow.([JLkotlin/jvm/functions/Function1;)J", ptr);
			}
			finally
			{
				if (_this_maxBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060022FC RID: 8956 RVA: 0x00085874 File Offset: 0x00083A74
		[Register("maxByOrThrow", "([SLkotlin/jvm/functions/Function1;)S", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static short MaxByOrThrow(short[] _this_maxBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxBy);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("maxByOrThrow.([SLkotlin/jvm/functions/Function1;)S", ptr);
			}
			finally
			{
				if (_this_maxBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060022FD RID: 8957 RVA: 0x00085910 File Offset: 0x00083B10
		[Register("maxByOrThrow", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object MaxByOrThrow(Java.Lang.Object[] _this_maxBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_maxBy);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxByOrThrow.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_maxBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxBy);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x060022FE RID: 8958 RVA: 0x000859B8 File Offset: 0x00083BB8
		[Register("maxOrNull", "([B)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte MaxOrNull(byte[] _this_maxOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrNull.([B)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxOrNull);
			}
			return @object;
		}

		// Token: 0x060022FF RID: 8959 RVA: 0x00085A34 File Offset: 0x00083C34
		[Register("maxOrNull", "([C)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character MaxOrNull(char[] _this_maxOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrNull.([C)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxOrNull);
			}
			return @object;
		}

		// Token: 0x06002300 RID: 8960 RVA: 0x00085AB0 File Offset: 0x00083CB0
		[Register("maxOrNull", "([D)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double MaxOrNull(double[] _this_maxOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrNull.([D)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxOrNull);
			}
			return @object;
		}

		// Token: 0x06002301 RID: 8961 RVA: 0x00085B2C File Offset: 0x00083D2C
		[Register("maxOrNull", "([F)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float MaxOrNull(float[] _this_maxOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrNull.([F)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxOrNull);
			}
			return @object;
		}

		// Token: 0x06002302 RID: 8962 RVA: 0x00085BA8 File Offset: 0x00083DA8
		[Register("maxOrNull", "([I)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer MaxOrNull(int[] _this_maxOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrNull.([I)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxOrNull);
			}
			return @object;
		}

		// Token: 0x06002303 RID: 8963 RVA: 0x00085C24 File Offset: 0x00083E24
		[Register("maxOrNull", "([Ljava/lang/Double;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double MaxOrNull(Java.Lang.Double[] _this_maxOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Double>(_this_maxOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrNull.([Ljava/lang/Double;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Double>(intPtr, _this_maxOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxOrNull);
			}
			return @object;
		}

		// Token: 0x06002304 RID: 8964 RVA: 0x00085CA0 File Offset: 0x00083EA0
		[Register("maxOrNull", "([Ljava/lang/Float;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float MaxOrNull(Float[] _this_maxOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray<Float>(_this_maxOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrNull.([Ljava/lang/Float;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxOrNull != null)
				{
					JNIEnv.CopyArray<Float>(intPtr, _this_maxOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxOrNull);
			}
			return @object;
		}

		// Token: 0x06002305 RID: 8965 RVA: 0x00085D1C File Offset: 0x00083F1C
		[Register("maxOrNull", "([J)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long MaxOrNull(long[] _this_maxOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrNull.([J)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxOrNull);
			}
			return @object;
		}

		// Token: 0x06002306 RID: 8966 RVA: 0x00085D98 File Offset: 0x00083F98
		[Register("maxOrNull", "([S)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short MaxOrNull(short[] _this_maxOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrNull.([S)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxOrNull);
			}
			return @object;
		}

		// Token: 0x06002307 RID: 8967 RVA: 0x00085E14 File Offset: 0x00084014
		[Register("maxOrNull", "([Ljava/lang/Comparable;)Ljava/lang/Comparable;", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object MaxOrNull(Java.Lang.Object[] _this_maxOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_maxOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrNull.([Ljava/lang/Comparable;)Ljava/lang/Comparable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_maxOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxOrNull);
			}
			return @object;
		}

		// Token: 0x06002308 RID: 8968 RVA: 0x00085E90 File Offset: 0x00084090
		[Register("maxOrThrow", "([B)B", "")]
		public unsafe static sbyte MaxOrThrow(byte[] _this_max)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_max);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("maxOrThrow.([B)B", ptr);
			}
			finally
			{
				if (_this_max != null)
				{
					JNIEnv.CopyArray(intPtr, _this_max);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_max);
			}
			return result;
		}

		// Token: 0x06002309 RID: 8969 RVA: 0x00085EFC File Offset: 0x000840FC
		[Register("maxOrThrow", "([C)C", "")]
		public unsafe static char MaxOrThrow(char[] _this_max)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_max);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("maxOrThrow.([C)C", ptr);
			}
			finally
			{
				if (_this_max != null)
				{
					JNIEnv.CopyArray(intPtr, _this_max);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_max);
			}
			return result;
		}

		// Token: 0x0600230A RID: 8970 RVA: 0x00085F68 File Offset: 0x00084168
		[Register("maxOrThrow", "([D)D", "")]
		public unsafe static double MaxOrThrow(double[] _this_max)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_max);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("maxOrThrow.([D)D", ptr);
			}
			finally
			{
				if (_this_max != null)
				{
					JNIEnv.CopyArray(intPtr, _this_max);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_max);
			}
			return result;
		}

		// Token: 0x0600230B RID: 8971 RVA: 0x00085FD4 File Offset: 0x000841D4
		[Register("maxOrThrow", "([F)F", "")]
		public unsafe static float MaxOrThrow(float[] _this_max)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_max);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("maxOrThrow.([F)F", ptr);
			}
			finally
			{
				if (_this_max != null)
				{
					JNIEnv.CopyArray(intPtr, _this_max);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_max);
			}
			return result;
		}

		// Token: 0x0600230C RID: 8972 RVA: 0x00086040 File Offset: 0x00084240
		[Register("maxOrThrow", "([I)I", "")]
		public unsafe static int MaxOrThrow(int[] _this_max)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_max);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("maxOrThrow.([I)I", ptr);
			}
			finally
			{
				if (_this_max != null)
				{
					JNIEnv.CopyArray(intPtr, _this_max);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_max);
			}
			return result;
		}

		// Token: 0x0600230D RID: 8973 RVA: 0x000860AC File Offset: 0x000842AC
		[Register("maxOrThrow", "([Ljava/lang/Double;)D", "")]
		public unsafe static double MaxOrThrow(Java.Lang.Double[] _this_max)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Double>(_this_max);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("maxOrThrow.([Ljava/lang/Double;)D", ptr);
			}
			finally
			{
				if (_this_max != null)
				{
					JNIEnv.CopyArray<Java.Lang.Double>(intPtr, _this_max);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_max);
			}
			return result;
		}

		// Token: 0x0600230E RID: 8974 RVA: 0x00086118 File Offset: 0x00084318
		[Register("maxOrThrow", "([Ljava/lang/Float;)F", "")]
		public unsafe static float MaxOrThrow(Float[] _this_max)
		{
			IntPtr intPtr = JNIEnv.NewArray<Float>(_this_max);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("maxOrThrow.([Ljava/lang/Float;)F", ptr);
			}
			finally
			{
				if (_this_max != null)
				{
					JNIEnv.CopyArray<Float>(intPtr, _this_max);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_max);
			}
			return result;
		}

		// Token: 0x0600230F RID: 8975 RVA: 0x00086184 File Offset: 0x00084384
		[Register("maxOrThrow", "([J)J", "")]
		public unsafe static long MaxOrThrow(long[] _this_max)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_max);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("maxOrThrow.([J)J", ptr);
			}
			finally
			{
				if (_this_max != null)
				{
					JNIEnv.CopyArray(intPtr, _this_max);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_max);
			}
			return result;
		}

		// Token: 0x06002310 RID: 8976 RVA: 0x000861F0 File Offset: 0x000843F0
		[Register("maxOrThrow", "([S)S", "")]
		public unsafe static short MaxOrThrow(short[] _this_max)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_max);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("maxOrThrow.([S)S", ptr);
			}
			finally
			{
				if (_this_max != null)
				{
					JNIEnv.CopyArray(intPtr, _this_max);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_max);
			}
			return result;
		}

		// Token: 0x06002311 RID: 8977 RVA: 0x0008625C File Offset: 0x0008445C
		[Register("maxOrThrow", "([Ljava/lang/Comparable;)Ljava/lang/Comparable;", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		public unsafe static Java.Lang.Object MaxOrThrow(Java.Lang.Object[] _this_max)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_max);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxOrThrow.([Ljava/lang/Comparable;)Ljava/lang/Comparable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_max != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_max);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_max);
			}
			return @object;
		}

		// Token: 0x06002312 RID: 8978 RVA: 0x000862D8 File Offset: 0x000844D8
		[Register("maxWithOrNull", "([ZLjava/util/Comparator;)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean MaxWithOrNull(bool[] _this_maxWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWithOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxWithOrNull.([ZLjava/util/Comparator;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002313 RID: 8979 RVA: 0x00086380 File Offset: 0x00084580
		[Register("maxWithOrNull", "([BLjava/util/Comparator;)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte MaxWithOrNull(byte[] _this_maxWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWithOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxWithOrNull.([BLjava/util/Comparator;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002314 RID: 8980 RVA: 0x00086428 File Offset: 0x00084628
		[Register("maxWithOrNull", "([CLjava/util/Comparator;)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character MaxWithOrNull(char[] _this_maxWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWithOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxWithOrNull.([CLjava/util/Comparator;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002315 RID: 8981 RVA: 0x000864D0 File Offset: 0x000846D0
		[Register("maxWithOrNull", "([DLjava/util/Comparator;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double MaxWithOrNull(double[] _this_maxWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWithOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxWithOrNull.([DLjava/util/Comparator;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002316 RID: 8982 RVA: 0x00086578 File Offset: 0x00084778
		[Register("maxWithOrNull", "([FLjava/util/Comparator;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float MaxWithOrNull(float[] _this_maxWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWithOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxWithOrNull.([FLjava/util/Comparator;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002317 RID: 8983 RVA: 0x00086620 File Offset: 0x00084820
		[Register("maxWithOrNull", "([ILjava/util/Comparator;)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer MaxWithOrNull(int[] _this_maxWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWithOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxWithOrNull.([ILjava/util/Comparator;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002318 RID: 8984 RVA: 0x000866C8 File Offset: 0x000848C8
		[Register("maxWithOrNull", "([JLjava/util/Comparator;)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long MaxWithOrNull(long[] _this_maxWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWithOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxWithOrNull.([JLjava/util/Comparator;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002319 RID: 8985 RVA: 0x00086770 File Offset: 0x00084970
		[Register("maxWithOrNull", "([SLjava/util/Comparator;)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short MaxWithOrNull(short[] _this_maxWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWithOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxWithOrNull.([SLjava/util/Comparator;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x0600231A RID: 8986 RVA: 0x00086818 File Offset: 0x00084A18
		[Register("maxWithOrNull", "([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object MaxWithOrNull(Java.Lang.Object[] _this_maxWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_maxWithOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxWithOrNull.([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxWithOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_maxWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x0600231B RID: 8987 RVA: 0x000868C0 File Offset: 0x00084AC0
		[Register("maxWithOrThrow", "([ZLjava/util/Comparator;)Z", "")]
		public unsafe static bool MaxWithOrThrow(bool[] _this_maxWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWith);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("maxWithOrThrow.([ZLjava/util/Comparator;)Z", ptr);
			}
			finally
			{
				if (_this_maxWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x0600231C RID: 8988 RVA: 0x0008695C File Offset: 0x00084B5C
		[Register("maxWithOrThrow", "([BLjava/util/Comparator;)B", "")]
		public unsafe static sbyte MaxWithOrThrow(byte[] _this_maxWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWith);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("maxWithOrThrow.([BLjava/util/Comparator;)B", ptr);
			}
			finally
			{
				if (_this_maxWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x0600231D RID: 8989 RVA: 0x000869F8 File Offset: 0x00084BF8
		[Register("maxWithOrThrow", "([CLjava/util/Comparator;)C", "")]
		public unsafe static char MaxWithOrThrow(char[] _this_maxWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWith);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("maxWithOrThrow.([CLjava/util/Comparator;)C", ptr);
			}
			finally
			{
				if (_this_maxWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x0600231E RID: 8990 RVA: 0x00086A94 File Offset: 0x00084C94
		[Register("maxWithOrThrow", "([DLjava/util/Comparator;)D", "")]
		public unsafe static double MaxWithOrThrow(double[] _this_maxWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWith);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("maxWithOrThrow.([DLjava/util/Comparator;)D", ptr);
			}
			finally
			{
				if (_this_maxWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x0600231F RID: 8991 RVA: 0x00086B30 File Offset: 0x00084D30
		[Register("maxWithOrThrow", "([FLjava/util/Comparator;)F", "")]
		public unsafe static float MaxWithOrThrow(float[] _this_maxWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWith);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("maxWithOrThrow.([FLjava/util/Comparator;)F", ptr);
			}
			finally
			{
				if (_this_maxWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002320 RID: 8992 RVA: 0x00086BCC File Offset: 0x00084DCC
		[Register("maxWithOrThrow", "([ILjava/util/Comparator;)I", "")]
		public unsafe static int MaxWithOrThrow(int[] _this_maxWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWith);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("maxWithOrThrow.([ILjava/util/Comparator;)I", ptr);
			}
			finally
			{
				if (_this_maxWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002321 RID: 8993 RVA: 0x00086C68 File Offset: 0x00084E68
		[Register("maxWithOrThrow", "([JLjava/util/Comparator;)J", "")]
		public unsafe static long MaxWithOrThrow(long[] _this_maxWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWith);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("maxWithOrThrow.([JLjava/util/Comparator;)J", ptr);
			}
			finally
			{
				if (_this_maxWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002322 RID: 8994 RVA: 0x00086D04 File Offset: 0x00084F04
		[Register("maxWithOrThrow", "([SLjava/util/Comparator;)S", "")]
		public unsafe static short MaxWithOrThrow(short[] _this_maxWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_maxWith);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("maxWithOrThrow.([SLjava/util/Comparator;)S", ptr);
			}
			finally
			{
				if (_this_maxWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_maxWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002323 RID: 8995 RVA: 0x00086DA0 File Offset: 0x00084FA0
		[Register("maxWithOrThrow", "([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object MaxWithOrThrow(Java.Lang.Object[] _this_maxWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_maxWith);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("maxWithOrThrow.([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_maxWith != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_maxWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_maxWith);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002324 RID: 8996 RVA: 0x00086E48 File Offset: 0x00085048
		[Register("minByOrNull", "([ZLkotlin/jvm/functions/Function1;)Ljava/lang/Boolean;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean MinByOrNull(bool[] _this_minByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minByOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minByOrNull.([ZLkotlin/jvm/functions/Function1;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x06002325 RID: 8997 RVA: 0x00086EF0 File Offset: 0x000850F0
		[Register("minByOrNull", "([BLkotlin/jvm/functions/Function1;)Ljava/lang/Byte;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte MinByOrNull(byte[] _this_minByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minByOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minByOrNull.([BLkotlin/jvm/functions/Function1;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x06002326 RID: 8998 RVA: 0x00086F98 File Offset: 0x00085198
		[Register("minByOrNull", "([CLkotlin/jvm/functions/Function1;)Ljava/lang/Character;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Character MinByOrNull(char[] _this_minByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minByOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minByOrNull.([CLkotlin/jvm/functions/Function1;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x06002327 RID: 8999 RVA: 0x00087040 File Offset: 0x00085240
		[Register("minByOrNull", "([DLkotlin/jvm/functions/Function1;)Ljava/lang/Double;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double MinByOrNull(double[] _this_minByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minByOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minByOrNull.([DLkotlin/jvm/functions/Function1;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x06002328 RID: 9000 RVA: 0x000870E8 File Offset: 0x000852E8
		[Register("minByOrNull", "([FLkotlin/jvm/functions/Function1;)Ljava/lang/Float;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Float MinByOrNull(float[] _this_minByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minByOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minByOrNull.([FLkotlin/jvm/functions/Function1;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x06002329 RID: 9001 RVA: 0x00087190 File Offset: 0x00085390
		[Register("minByOrNull", "([ILkotlin/jvm/functions/Function1;)Ljava/lang/Integer;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Integer MinByOrNull(int[] _this_minByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minByOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minByOrNull.([ILkotlin/jvm/functions/Function1;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x0600232A RID: 9002 RVA: 0x00087238 File Offset: 0x00085438
		[Register("minByOrNull", "([JLkotlin/jvm/functions/Function1;)Ljava/lang/Long;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Long MinByOrNull(long[] _this_minByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minByOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minByOrNull.([JLkotlin/jvm/functions/Function1;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x0600232B RID: 9003 RVA: 0x000872E0 File Offset: 0x000854E0
		[Register("minByOrNull", "([SLkotlin/jvm/functions/Function1;)Ljava/lang/Short;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Short MinByOrNull(short[] _this_minByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minByOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minByOrNull.([SLkotlin/jvm/functions/Function1;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minByOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x0600232C RID: 9004 RVA: 0x00087388 File Offset: 0x00085588
		[Register("minByOrNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object MinByOrNull(Java.Lang.Object[] _this_minByOrNull, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_minByOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minByOrNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minByOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_minByOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minByOrNull);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x0600232D RID: 9005 RVA: 0x00087430 File Offset: 0x00085630
		[Register("minByOrThrow", "([ZLkotlin/jvm/functions/Function1;)Z", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static bool MinByOrThrow(bool[] _this_minBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minBy);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("minByOrThrow.([ZLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_minBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x0600232E RID: 9006 RVA: 0x000874CC File Offset: 0x000856CC
		[Register("minByOrThrow", "([BLkotlin/jvm/functions/Function1;)B", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static sbyte MinByOrThrow(byte[] _this_minBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minBy);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("minByOrThrow.([BLkotlin/jvm/functions/Function1;)B", ptr);
			}
			finally
			{
				if (_this_minBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x0600232F RID: 9007 RVA: 0x00087568 File Offset: 0x00085768
		[Register("minByOrThrow", "([CLkotlin/jvm/functions/Function1;)C", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static char MinByOrThrow(char[] _this_minBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minBy);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("minByOrThrow.([CLkotlin/jvm/functions/Function1;)C", ptr);
			}
			finally
			{
				if (_this_minBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002330 RID: 9008 RVA: 0x00087604 File Offset: 0x00085804
		[Register("minByOrThrow", "([DLkotlin/jvm/functions/Function1;)D", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static double MinByOrThrow(double[] _this_minBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minBy);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("minByOrThrow.([DLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_minBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002331 RID: 9009 RVA: 0x000876A0 File Offset: 0x000858A0
		[Register("minByOrThrow", "([FLkotlin/jvm/functions/Function1;)F", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static float MinByOrThrow(float[] _this_minBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minBy);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("minByOrThrow.([FLkotlin/jvm/functions/Function1;)F", ptr);
			}
			finally
			{
				if (_this_minBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002332 RID: 9010 RVA: 0x0008773C File Offset: 0x0008593C
		[Register("minByOrThrow", "([ILkotlin/jvm/functions/Function1;)I", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static int MinByOrThrow(int[] _this_minBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("minByOrThrow.([ILkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_minBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002333 RID: 9011 RVA: 0x000877D8 File Offset: 0x000859D8
		[Register("minByOrThrow", "([JLkotlin/jvm/functions/Function1;)J", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static long MinByOrThrow(long[] _this_minBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minBy);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("minByOrThrow.([JLkotlin/jvm/functions/Function1;)J", ptr);
			}
			finally
			{
				if (_this_minBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002334 RID: 9012 RVA: 0x00087874 File Offset: 0x00085A74
		[Register("minByOrThrow", "([SLkotlin/jvm/functions/Function1;)S", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static short MinByOrThrow(short[] _this_minBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minBy);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("minByOrThrow.([SLkotlin/jvm/functions/Function1;)S", ptr);
			}
			finally
			{
				if (_this_minBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002335 RID: 9013 RVA: 0x00087910 File Offset: 0x00085B10
		[Register("minByOrThrow", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R extends java.lang.Comparable<? super R>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object MinByOrThrow(Java.Lang.Object[] _this_minBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_minBy);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minByOrThrow.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_minBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minBy);
				GC.KeepAlive(selector);
			}
			return @object;
		}

		// Token: 0x06002336 RID: 9014 RVA: 0x000879B8 File Offset: 0x00085BB8
		[Register("minOrNull", "([B)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte MinOrNull(byte[] _this_minOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrNull.([B)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minOrNull);
			}
			return @object;
		}

		// Token: 0x06002337 RID: 9015 RVA: 0x00087A34 File Offset: 0x00085C34
		[Register("minOrNull", "([C)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character MinOrNull(char[] _this_minOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrNull.([C)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minOrNull);
			}
			return @object;
		}

		// Token: 0x06002338 RID: 9016 RVA: 0x00087AB0 File Offset: 0x00085CB0
		[Register("minOrNull", "([D)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double MinOrNull(double[] _this_minOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrNull.([D)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minOrNull);
			}
			return @object;
		}

		// Token: 0x06002339 RID: 9017 RVA: 0x00087B2C File Offset: 0x00085D2C
		[Register("minOrNull", "([F)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float MinOrNull(float[] _this_minOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrNull.([F)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minOrNull);
			}
			return @object;
		}

		// Token: 0x0600233A RID: 9018 RVA: 0x00087BA8 File Offset: 0x00085DA8
		[Register("minOrNull", "([I)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer MinOrNull(int[] _this_minOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrNull.([I)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minOrNull);
			}
			return @object;
		}

		// Token: 0x0600233B RID: 9019 RVA: 0x00087C24 File Offset: 0x00085E24
		[Register("minOrNull", "([Ljava/lang/Double;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double MinOrNull(Java.Lang.Double[] _this_minOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Double>(_this_minOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrNull.([Ljava/lang/Double;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Double>(intPtr, _this_minOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minOrNull);
			}
			return @object;
		}

		// Token: 0x0600233C RID: 9020 RVA: 0x00087CA0 File Offset: 0x00085EA0
		[Register("minOrNull", "([Ljava/lang/Float;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float MinOrNull(Float[] _this_minOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray<Float>(_this_minOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrNull.([Ljava/lang/Float;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minOrNull != null)
				{
					JNIEnv.CopyArray<Float>(intPtr, _this_minOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minOrNull);
			}
			return @object;
		}

		// Token: 0x0600233D RID: 9021 RVA: 0x00087D1C File Offset: 0x00085F1C
		[Register("minOrNull", "([J)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long MinOrNull(long[] _this_minOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrNull.([J)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minOrNull);
			}
			return @object;
		}

		// Token: 0x0600233E RID: 9022 RVA: 0x00087D98 File Offset: 0x00085F98
		[Register("minOrNull", "([S)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short MinOrNull(short[] _this_minOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrNull.([S)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minOrNull);
			}
			return @object;
		}

		// Token: 0x0600233F RID: 9023 RVA: 0x00087E14 File Offset: 0x00086014
		[Register("minOrNull", "([Ljava/lang/Comparable;)Ljava/lang/Comparable;", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object MinOrNull(Java.Lang.Object[] _this_minOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_minOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrNull.([Ljava/lang/Comparable;)Ljava/lang/Comparable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_minOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minOrNull);
			}
			return @object;
		}

		// Token: 0x06002340 RID: 9024 RVA: 0x00087E90 File Offset: 0x00086090
		[Register("minOrThrow", "([B)B", "")]
		public unsafe static sbyte MinOrThrow(byte[] _this_min)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_min);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("minOrThrow.([B)B", ptr);
			}
			finally
			{
				if (_this_min != null)
				{
					JNIEnv.CopyArray(intPtr, _this_min);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_min);
			}
			return result;
		}

		// Token: 0x06002341 RID: 9025 RVA: 0x00087EFC File Offset: 0x000860FC
		[Register("minOrThrow", "([C)C", "")]
		public unsafe static char MinOrThrow(char[] _this_min)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_min);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("minOrThrow.([C)C", ptr);
			}
			finally
			{
				if (_this_min != null)
				{
					JNIEnv.CopyArray(intPtr, _this_min);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_min);
			}
			return result;
		}

		// Token: 0x06002342 RID: 9026 RVA: 0x00087F68 File Offset: 0x00086168
		[Register("minOrThrow", "([D)D", "")]
		public unsafe static double MinOrThrow(double[] _this_min)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_min);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("minOrThrow.([D)D", ptr);
			}
			finally
			{
				if (_this_min != null)
				{
					JNIEnv.CopyArray(intPtr, _this_min);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_min);
			}
			return result;
		}

		// Token: 0x06002343 RID: 9027 RVA: 0x00087FD4 File Offset: 0x000861D4
		[Register("minOrThrow", "([F)F", "")]
		public unsafe static float MinOrThrow(float[] _this_min)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_min);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("minOrThrow.([F)F", ptr);
			}
			finally
			{
				if (_this_min != null)
				{
					JNIEnv.CopyArray(intPtr, _this_min);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_min);
			}
			return result;
		}

		// Token: 0x06002344 RID: 9028 RVA: 0x00088040 File Offset: 0x00086240
		[Register("minOrThrow", "([I)I", "")]
		public unsafe static int MinOrThrow(int[] _this_min)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_min);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("minOrThrow.([I)I", ptr);
			}
			finally
			{
				if (_this_min != null)
				{
					JNIEnv.CopyArray(intPtr, _this_min);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_min);
			}
			return result;
		}

		// Token: 0x06002345 RID: 9029 RVA: 0x000880AC File Offset: 0x000862AC
		[Register("minOrThrow", "([Ljava/lang/Double;)D", "")]
		public unsafe static double MinOrThrow(Java.Lang.Double[] _this_min)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Double>(_this_min);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("minOrThrow.([Ljava/lang/Double;)D", ptr);
			}
			finally
			{
				if (_this_min != null)
				{
					JNIEnv.CopyArray<Java.Lang.Double>(intPtr, _this_min);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_min);
			}
			return result;
		}

		// Token: 0x06002346 RID: 9030 RVA: 0x00088118 File Offset: 0x00086318
		[Register("minOrThrow", "([Ljava/lang/Float;)F", "")]
		public unsafe static float MinOrThrow(Float[] _this_min)
		{
			IntPtr intPtr = JNIEnv.NewArray<Float>(_this_min);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("minOrThrow.([Ljava/lang/Float;)F", ptr);
			}
			finally
			{
				if (_this_min != null)
				{
					JNIEnv.CopyArray<Float>(intPtr, _this_min);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_min);
			}
			return result;
		}

		// Token: 0x06002347 RID: 9031 RVA: 0x00088184 File Offset: 0x00086384
		[Register("minOrThrow", "([J)J", "")]
		public unsafe static long MinOrThrow(long[] _this_min)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_min);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("minOrThrow.([J)J", ptr);
			}
			finally
			{
				if (_this_min != null)
				{
					JNIEnv.CopyArray(intPtr, _this_min);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_min);
			}
			return result;
		}

		// Token: 0x06002348 RID: 9032 RVA: 0x000881F0 File Offset: 0x000863F0
		[Register("minOrThrow", "([S)S", "")]
		public unsafe static short MinOrThrow(short[] _this_min)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_min);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("minOrThrow.([S)S", ptr);
			}
			finally
			{
				if (_this_min != null)
				{
					JNIEnv.CopyArray(intPtr, _this_min);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_min);
			}
			return result;
		}

		// Token: 0x06002349 RID: 9033 RVA: 0x0008825C File Offset: 0x0008645C
		[Register("minOrThrow", "([Ljava/lang/Comparable;)Ljava/lang/Comparable;", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		public unsafe static Java.Lang.Object MinOrThrow(Java.Lang.Object[] _this_min)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_min);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minOrThrow.([Ljava/lang/Comparable;)Ljava/lang/Comparable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_min != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_min);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_min);
			}
			return @object;
		}

		// Token: 0x0600234A RID: 9034 RVA: 0x000882D8 File Offset: 0x000864D8
		[Register("minWithOrNull", "([ZLjava/util/Comparator;)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean MinWithOrNull(bool[] _this_minWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWithOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minWithOrNull.([ZLjava/util/Comparator;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x0600234B RID: 9035 RVA: 0x00088380 File Offset: 0x00086580
		[Register("minWithOrNull", "([BLjava/util/Comparator;)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte MinWithOrNull(byte[] _this_minWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWithOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minWithOrNull.([BLjava/util/Comparator;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x0600234C RID: 9036 RVA: 0x00088428 File Offset: 0x00086628
		[Register("minWithOrNull", "([CLjava/util/Comparator;)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character MinWithOrNull(char[] _this_minWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWithOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minWithOrNull.([CLjava/util/Comparator;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x0600234D RID: 9037 RVA: 0x000884D0 File Offset: 0x000866D0
		[Register("minWithOrNull", "([DLjava/util/Comparator;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double MinWithOrNull(double[] _this_minWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWithOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minWithOrNull.([DLjava/util/Comparator;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x0600234E RID: 9038 RVA: 0x00088578 File Offset: 0x00086778
		[Register("minWithOrNull", "([FLjava/util/Comparator;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float MinWithOrNull(float[] _this_minWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWithOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minWithOrNull.([FLjava/util/Comparator;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x0600234F RID: 9039 RVA: 0x00088620 File Offset: 0x00086820
		[Register("minWithOrNull", "([ILjava/util/Comparator;)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer MinWithOrNull(int[] _this_minWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWithOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minWithOrNull.([ILjava/util/Comparator;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002350 RID: 9040 RVA: 0x000886C8 File Offset: 0x000868C8
		[Register("minWithOrNull", "([JLjava/util/Comparator;)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long MinWithOrNull(long[] _this_minWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWithOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minWithOrNull.([JLjava/util/Comparator;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002351 RID: 9041 RVA: 0x00088770 File Offset: 0x00086970
		[Register("minWithOrNull", "([SLjava/util/Comparator;)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short MinWithOrNull(short[] _this_minWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWithOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minWithOrNull.([SLjava/util/Comparator;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minWithOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002352 RID: 9042 RVA: 0x00088818 File Offset: 0x00086A18
		[Register("minWithOrNull", "([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object MinWithOrNull(Java.Lang.Object[] _this_minWithOrNull, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_minWithOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minWithOrNull.([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minWithOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_minWithOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWithOrNull);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x06002353 RID: 9043 RVA: 0x000888C0 File Offset: 0x00086AC0
		[Register("minWithOrThrow", "([ZLjava/util/Comparator;)Z", "")]
		public unsafe static bool MinWithOrThrow(bool[] _this_minWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWith);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("minWithOrThrow.([ZLjava/util/Comparator;)Z", ptr);
			}
			finally
			{
				if (_this_minWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002354 RID: 9044 RVA: 0x0008895C File Offset: 0x00086B5C
		[Register("minWithOrThrow", "([BLjava/util/Comparator;)B", "")]
		public unsafe static sbyte MinWithOrThrow(byte[] _this_minWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWith);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("minWithOrThrow.([BLjava/util/Comparator;)B", ptr);
			}
			finally
			{
				if (_this_minWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002355 RID: 9045 RVA: 0x000889F8 File Offset: 0x00086BF8
		[Register("minWithOrThrow", "([CLjava/util/Comparator;)C", "")]
		public unsafe static char MinWithOrThrow(char[] _this_minWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWith);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("minWithOrThrow.([CLjava/util/Comparator;)C", ptr);
			}
			finally
			{
				if (_this_minWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002356 RID: 9046 RVA: 0x00088A94 File Offset: 0x00086C94
		[Register("minWithOrThrow", "([DLjava/util/Comparator;)D", "")]
		public unsafe static double MinWithOrThrow(double[] _this_minWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWith);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("minWithOrThrow.([DLjava/util/Comparator;)D", ptr);
			}
			finally
			{
				if (_this_minWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002357 RID: 9047 RVA: 0x00088B30 File Offset: 0x00086D30
		[Register("minWithOrThrow", "([FLjava/util/Comparator;)F", "")]
		public unsafe static float MinWithOrThrow(float[] _this_minWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWith);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("minWithOrThrow.([FLjava/util/Comparator;)F", ptr);
			}
			finally
			{
				if (_this_minWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002358 RID: 9048 RVA: 0x00088BCC File Offset: 0x00086DCC
		[Register("minWithOrThrow", "([ILjava/util/Comparator;)I", "")]
		public unsafe static int MinWithOrThrow(int[] _this_minWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWith);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("minWithOrThrow.([ILjava/util/Comparator;)I", ptr);
			}
			finally
			{
				if (_this_minWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002359 RID: 9049 RVA: 0x00088C68 File Offset: 0x00086E68
		[Register("minWithOrThrow", "([JLjava/util/Comparator;)J", "")]
		public unsafe static long MinWithOrThrow(long[] _this_minWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWith);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("minWithOrThrow.([JLjava/util/Comparator;)J", ptr);
			}
			finally
			{
				if (_this_minWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x0600235A RID: 9050 RVA: 0x00088D04 File Offset: 0x00086F04
		[Register("minWithOrThrow", "([SLjava/util/Comparator;)S", "")]
		public unsafe static short MinWithOrThrow(short[] _this_minWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_minWith);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("minWithOrThrow.([SLjava/util/Comparator;)S", ptr);
			}
			finally
			{
				if (_this_minWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_minWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x0600235B RID: 9051 RVA: 0x00088DA0 File Offset: 0x00086FA0
		[Register("minWithOrThrow", "([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object MinWithOrThrow(Java.Lang.Object[] _this_minWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_minWith);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("minWithOrThrow.([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_minWith != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_minWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_minWith);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x0600235C RID: 9052 RVA: 0x00088E48 File Offset: 0x00087048
		[Register("none", "([Z)Z", "")]
		public unsafe static bool None(bool[] _this_none)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([Z)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
			}
			return result;
		}

		// Token: 0x0600235D RID: 9053 RVA: 0x00088EB4 File Offset: 0x000870B4
		[Register("none", "([ZLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool None(bool[] _this_none, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([ZLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600235E RID: 9054 RVA: 0x00088F50 File Offset: 0x00087150
		[Register("none", "([B)Z", "")]
		public unsafe static bool None(byte[] _this_none)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([B)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
			}
			return result;
		}

		// Token: 0x0600235F RID: 9055 RVA: 0x00088FBC File Offset: 0x000871BC
		[Register("none", "([BLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool None(byte[] _this_none, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([BLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002360 RID: 9056 RVA: 0x00089058 File Offset: 0x00087258
		[Register("none", "([C)Z", "")]
		public unsafe static bool None(char[] _this_none)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([C)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
			}
			return result;
		}

		// Token: 0x06002361 RID: 9057 RVA: 0x000890C4 File Offset: 0x000872C4
		[Register("none", "([CLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool None(char[] _this_none, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([CLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002362 RID: 9058 RVA: 0x00089160 File Offset: 0x00087360
		[Register("none", "([D)Z", "")]
		public unsafe static bool None(double[] _this_none)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([D)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
			}
			return result;
		}

		// Token: 0x06002363 RID: 9059 RVA: 0x000891CC File Offset: 0x000873CC
		[Register("none", "([DLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool None(double[] _this_none, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([DLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002364 RID: 9060 RVA: 0x00089268 File Offset: 0x00087468
		[Register("none", "([F)Z", "")]
		public unsafe static bool None(float[] _this_none)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([F)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
			}
			return result;
		}

		// Token: 0x06002365 RID: 9061 RVA: 0x000892D4 File Offset: 0x000874D4
		[Register("none", "([FLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool None(float[] _this_none, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([FLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002366 RID: 9062 RVA: 0x00089370 File Offset: 0x00087570
		[Register("none", "([I)Z", "")]
		public unsafe static bool None(int[] _this_none)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([I)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
			}
			return result;
		}

		// Token: 0x06002367 RID: 9063 RVA: 0x000893DC File Offset: 0x000875DC
		[Register("none", "([ILkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool None(int[] _this_none, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([ILkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002368 RID: 9064 RVA: 0x00089478 File Offset: 0x00087678
		[Register("none", "([J)Z", "")]
		public unsafe static bool None(long[] _this_none)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([J)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
			}
			return result;
		}

		// Token: 0x06002369 RID: 9065 RVA: 0x000894E4 File Offset: 0x000876E4
		[Register("none", "([JLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool None(long[] _this_none, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([JLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600236A RID: 9066 RVA: 0x00089580 File Offset: 0x00087780
		[Register("none", "([S)Z", "")]
		public unsafe static bool None(short[] _this_none)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([S)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
			}
			return result;
		}

		// Token: 0x0600236B RID: 9067 RVA: 0x000895EC File Offset: 0x000877EC
		[Register("none", "([SLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool None(short[] _this_none, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([SLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600236C RID: 9068 RVA: 0x00089688 File Offset: 0x00087888
		[Register("none", "([Ljava/lang/Object;)Z", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static bool None(Java.Lang.Object[] _this_none)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([Ljava/lang/Object;)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
			}
			return result;
		}

		// Token: 0x0600236D RID: 9069 RVA: 0x000896F4 File Offset: 0x000878F4
		[Register("none", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static bool None(Java.Lang.Object[] _this_none, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_none);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("none.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_none != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_none);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_none);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600236E RID: 9070 RVA: 0x00089790 File Offset: 0x00087990
		[Register("partition", "([ZLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", "")]
		public unsafe static Pair Partition(bool[] _this_partition, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_partition);
			Pair @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Pair>(ArraysKt._members.StaticMethods.InvokeObjectMethod("partition.([ZLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_partition != null)
				{
					JNIEnv.CopyArray(intPtr, _this_partition);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_partition);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x0600236F RID: 9071 RVA: 0x00089838 File Offset: 0x00087A38
		[Register("partition", "([BLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", "")]
		public unsafe static Pair Partition(byte[] _this_partition, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_partition);
			Pair @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Pair>(ArraysKt._members.StaticMethods.InvokeObjectMethod("partition.([BLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_partition != null)
				{
					JNIEnv.CopyArray(intPtr, _this_partition);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_partition);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002370 RID: 9072 RVA: 0x000898E0 File Offset: 0x00087AE0
		[Register("partition", "([CLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", "")]
		public unsafe static Pair Partition(char[] _this_partition, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_partition);
			Pair @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Pair>(ArraysKt._members.StaticMethods.InvokeObjectMethod("partition.([CLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_partition != null)
				{
					JNIEnv.CopyArray(intPtr, _this_partition);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_partition);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002371 RID: 9073 RVA: 0x00089988 File Offset: 0x00087B88
		[Register("partition", "([DLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", "")]
		public unsafe static Pair Partition(double[] _this_partition, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_partition);
			Pair @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Pair>(ArraysKt._members.StaticMethods.InvokeObjectMethod("partition.([DLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_partition != null)
				{
					JNIEnv.CopyArray(intPtr, _this_partition);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_partition);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002372 RID: 9074 RVA: 0x00089A30 File Offset: 0x00087C30
		[Register("partition", "([FLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", "")]
		public unsafe static Pair Partition(float[] _this_partition, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_partition);
			Pair @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Pair>(ArraysKt._members.StaticMethods.InvokeObjectMethod("partition.([FLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_partition != null)
				{
					JNIEnv.CopyArray(intPtr, _this_partition);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_partition);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002373 RID: 9075 RVA: 0x00089AD8 File Offset: 0x00087CD8
		[Register("partition", "([ILkotlin/jvm/functions/Function1;)Lkotlin/Pair;", "")]
		public unsafe static Pair Partition(int[] _this_partition, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_partition);
			Pair @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Pair>(ArraysKt._members.StaticMethods.InvokeObjectMethod("partition.([ILkotlin/jvm/functions/Function1;)Lkotlin/Pair;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_partition != null)
				{
					JNIEnv.CopyArray(intPtr, _this_partition);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_partition);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002374 RID: 9076 RVA: 0x00089B80 File Offset: 0x00087D80
		[Register("partition", "([JLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", "")]
		public unsafe static Pair Partition(long[] _this_partition, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_partition);
			Pair @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Pair>(ArraysKt._members.StaticMethods.InvokeObjectMethod("partition.([JLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_partition != null)
				{
					JNIEnv.CopyArray(intPtr, _this_partition);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_partition);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002375 RID: 9077 RVA: 0x00089C28 File Offset: 0x00087E28
		[Register("partition", "([SLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", "")]
		public unsafe static Pair Partition(short[] _this_partition, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_partition);
			Pair @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Pair>(ArraysKt._members.StaticMethods.InvokeObjectMethod("partition.([SLkotlin/jvm/functions/Function1;)Lkotlin/Pair;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_partition != null)
				{
					JNIEnv.CopyArray(intPtr, _this_partition);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_partition);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002376 RID: 9078 RVA: 0x00089CD0 File Offset: 0x00087ED0
		[Register("partition", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/Pair;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Pair Partition(Java.Lang.Object[] _this_partition, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_partition);
			Pair @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Pair>(ArraysKt._members.StaticMethods.InvokeObjectMethod("partition.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/Pair;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_partition != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_partition);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_partition);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002377 RID: 9079 RVA: 0x00089D78 File Offset: 0x00087F78
		[Register("random", "([ZLkotlin/random/Random;)Z", "")]
		public unsafe static bool Random(bool[] _this_random, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_random);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("random.([ZLkotlin/random/Random;)Z", ptr);
			}
			finally
			{
				if (_this_random != null)
				{
					JNIEnv.CopyArray(intPtr, _this_random);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_random);
				GC.KeepAlive(random);
			}
			return result;
		}

		// Token: 0x06002378 RID: 9080 RVA: 0x00089E0C File Offset: 0x0008800C
		[Register("random", "([BLkotlin/random/Random;)B", "")]
		public unsafe static sbyte Random(byte[] _this_random, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_random);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("random.([BLkotlin/random/Random;)B", ptr);
			}
			finally
			{
				if (_this_random != null)
				{
					JNIEnv.CopyArray(intPtr, _this_random);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_random);
				GC.KeepAlive(random);
			}
			return result;
		}

		// Token: 0x06002379 RID: 9081 RVA: 0x00089EA0 File Offset: 0x000880A0
		[Register("random", "([CLkotlin/random/Random;)C", "")]
		public unsafe static char Random(char[] _this_random, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_random);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("random.([CLkotlin/random/Random;)C", ptr);
			}
			finally
			{
				if (_this_random != null)
				{
					JNIEnv.CopyArray(intPtr, _this_random);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_random);
				GC.KeepAlive(random);
			}
			return result;
		}

		// Token: 0x0600237A RID: 9082 RVA: 0x00089F34 File Offset: 0x00088134
		[Register("random", "([DLkotlin/random/Random;)D", "")]
		public unsafe static double Random(double[] _this_random, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_random);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("random.([DLkotlin/random/Random;)D", ptr);
			}
			finally
			{
				if (_this_random != null)
				{
					JNIEnv.CopyArray(intPtr, _this_random);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_random);
				GC.KeepAlive(random);
			}
			return result;
		}

		// Token: 0x0600237B RID: 9083 RVA: 0x00089FC8 File Offset: 0x000881C8
		[Register("random", "([FLkotlin/random/Random;)F", "")]
		public unsafe static float Random(float[] _this_random, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_random);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("random.([FLkotlin/random/Random;)F", ptr);
			}
			finally
			{
				if (_this_random != null)
				{
					JNIEnv.CopyArray(intPtr, _this_random);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_random);
				GC.KeepAlive(random);
			}
			return result;
		}

		// Token: 0x0600237C RID: 9084 RVA: 0x0008A05C File Offset: 0x0008825C
		[Register("random", "([ILkotlin/random/Random;)I", "")]
		public unsafe static int Random(int[] _this_random, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_random);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("random.([ILkotlin/random/Random;)I", ptr);
			}
			finally
			{
				if (_this_random != null)
				{
					JNIEnv.CopyArray(intPtr, _this_random);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_random);
				GC.KeepAlive(random);
			}
			return result;
		}

		// Token: 0x0600237D RID: 9085 RVA: 0x0008A0F0 File Offset: 0x000882F0
		[Register("random", "([JLkotlin/random/Random;)J", "")]
		public unsafe static long Random(long[] _this_random, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_random);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("random.([JLkotlin/random/Random;)J", ptr);
			}
			finally
			{
				if (_this_random != null)
				{
					JNIEnv.CopyArray(intPtr, _this_random);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_random);
				GC.KeepAlive(random);
			}
			return result;
		}

		// Token: 0x0600237E RID: 9086 RVA: 0x0008A184 File Offset: 0x00088384
		[Register("random", "([SLkotlin/random/Random;)S", "")]
		public unsafe static short Random(short[] _this_random, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_random);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("random.([SLkotlin/random/Random;)S", ptr);
			}
			finally
			{
				if (_this_random != null)
				{
					JNIEnv.CopyArray(intPtr, _this_random);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_random);
				GC.KeepAlive(random);
			}
			return result;
		}

		// Token: 0x0600237F RID: 9087 RVA: 0x0008A218 File Offset: 0x00088418
		[Register("random", "([Ljava/lang/Object;Lkotlin/random/Random;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Random(Java.Lang.Object[] _this_random, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_random);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("random.([Ljava/lang/Object;Lkotlin/random/Random;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_random != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_random);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_random);
				GC.KeepAlive(random);
			}
			return @object;
		}

		// Token: 0x06002380 RID: 9088 RVA: 0x0008A2BC File Offset: 0x000884BC
		[Register("randomOrNull", "([ZLkotlin/random/Random;)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean RandomOrNull(bool[] _this_randomOrNull, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_randomOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("randomOrNull.([ZLkotlin/random/Random;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_randomOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_randomOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_randomOrNull);
				GC.KeepAlive(random);
			}
			return @object;
		}

		// Token: 0x06002381 RID: 9089 RVA: 0x0008A360 File Offset: 0x00088560
		[Register("randomOrNull", "([BLkotlin/random/Random;)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte RandomOrNull(byte[] _this_randomOrNull, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_randomOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("randomOrNull.([BLkotlin/random/Random;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_randomOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_randomOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_randomOrNull);
				GC.KeepAlive(random);
			}
			return @object;
		}

		// Token: 0x06002382 RID: 9090 RVA: 0x0008A404 File Offset: 0x00088604
		[Register("randomOrNull", "([CLkotlin/random/Random;)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character RandomOrNull(char[] _this_randomOrNull, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_randomOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("randomOrNull.([CLkotlin/random/Random;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_randomOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_randomOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_randomOrNull);
				GC.KeepAlive(random);
			}
			return @object;
		}

		// Token: 0x06002383 RID: 9091 RVA: 0x0008A4A8 File Offset: 0x000886A8
		[Register("randomOrNull", "([DLkotlin/random/Random;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double RandomOrNull(double[] _this_randomOrNull, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_randomOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("randomOrNull.([DLkotlin/random/Random;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_randomOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_randomOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_randomOrNull);
				GC.KeepAlive(random);
			}
			return @object;
		}

		// Token: 0x06002384 RID: 9092 RVA: 0x0008A54C File Offset: 0x0008874C
		[Register("randomOrNull", "([FLkotlin/random/Random;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float RandomOrNull(float[] _this_randomOrNull, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_randomOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("randomOrNull.([FLkotlin/random/Random;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_randomOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_randomOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_randomOrNull);
				GC.KeepAlive(random);
			}
			return @object;
		}

		// Token: 0x06002385 RID: 9093 RVA: 0x0008A5F0 File Offset: 0x000887F0
		[Register("randomOrNull", "([ILkotlin/random/Random;)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer RandomOrNull(int[] _this_randomOrNull, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_randomOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("randomOrNull.([ILkotlin/random/Random;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_randomOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_randomOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_randomOrNull);
				GC.KeepAlive(random);
			}
			return @object;
		}

		// Token: 0x06002386 RID: 9094 RVA: 0x0008A694 File Offset: 0x00088894
		[Register("randomOrNull", "([JLkotlin/random/Random;)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long RandomOrNull(long[] _this_randomOrNull, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_randomOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("randomOrNull.([JLkotlin/random/Random;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_randomOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_randomOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_randomOrNull);
				GC.KeepAlive(random);
			}
			return @object;
		}

		// Token: 0x06002387 RID: 9095 RVA: 0x0008A738 File Offset: 0x00088938
		[Register("randomOrNull", "([SLkotlin/random/Random;)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short RandomOrNull(short[] _this_randomOrNull, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_randomOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("randomOrNull.([SLkotlin/random/Random;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_randomOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_randomOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_randomOrNull);
				GC.KeepAlive(random);
			}
			return @object;
		}

		// Token: 0x06002388 RID: 9096 RVA: 0x0008A7DC File Offset: 0x000889DC
		[Register("randomOrNull", "([Ljava/lang/Object;Lkotlin/random/Random;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object RandomOrNull(Java.Lang.Object[] _this_randomOrNull, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_randomOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("randomOrNull.([Ljava/lang/Object;Lkotlin/random/Random;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_randomOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_randomOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_randomOrNull);
				GC.KeepAlive(random);
			}
			return @object;
		}

		// Token: 0x06002389 RID: 9097 RVA: 0x0008A880 File Offset: 0x00088A80
		[Register("reduce", "([ZLkotlin/jvm/functions/Function2;)Z", "")]
		public unsafe static bool Reduce(bool[] _this_reduce, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduce);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("reduce.([ZLkotlin/jvm/functions/Function2;)Z", ptr);
			}
			finally
			{
				if (_this_reduce != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduce);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduce);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x0600238A RID: 9098 RVA: 0x0008A91C File Offset: 0x00088B1C
		[Register("reduce", "([BLkotlin/jvm/functions/Function2;)B", "")]
		public unsafe static sbyte Reduce(byte[] _this_reduce, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduce);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("reduce.([BLkotlin/jvm/functions/Function2;)B", ptr);
			}
			finally
			{
				if (_this_reduce != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduce);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduce);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x0600238B RID: 9099 RVA: 0x0008A9B8 File Offset: 0x00088BB8
		[Register("reduce", "([CLkotlin/jvm/functions/Function2;)C", "")]
		public unsafe static char Reduce(char[] _this_reduce, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduce);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("reduce.([CLkotlin/jvm/functions/Function2;)C", ptr);
			}
			finally
			{
				if (_this_reduce != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduce);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduce);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x0600238C RID: 9100 RVA: 0x0008AA54 File Offset: 0x00088C54
		[Register("reduce", "([DLkotlin/jvm/functions/Function2;)D", "")]
		public unsafe static double Reduce(double[] _this_reduce, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduce);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("reduce.([DLkotlin/jvm/functions/Function2;)D", ptr);
			}
			finally
			{
				if (_this_reduce != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduce);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduce);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x0600238D RID: 9101 RVA: 0x0008AAF0 File Offset: 0x00088CF0
		[Register("reduce", "([FLkotlin/jvm/functions/Function2;)F", "")]
		public unsafe static float Reduce(float[] _this_reduce, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduce);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("reduce.([FLkotlin/jvm/functions/Function2;)F", ptr);
			}
			finally
			{
				if (_this_reduce != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduce);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduce);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x0600238E RID: 9102 RVA: 0x0008AB8C File Offset: 0x00088D8C
		[Register("reduce", "([ILkotlin/jvm/functions/Function2;)I", "")]
		public unsafe static int Reduce(int[] _this_reduce, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduce);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("reduce.([ILkotlin/jvm/functions/Function2;)I", ptr);
			}
			finally
			{
				if (_this_reduce != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduce);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduce);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x0600238F RID: 9103 RVA: 0x0008AC28 File Offset: 0x00088E28
		[Register("reduce", "([JLkotlin/jvm/functions/Function2;)J", "")]
		public unsafe static long Reduce(long[] _this_reduce, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduce);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("reduce.([JLkotlin/jvm/functions/Function2;)J", ptr);
			}
			finally
			{
				if (_this_reduce != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduce);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduce);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x06002390 RID: 9104 RVA: 0x0008ACC4 File Offset: 0x00088EC4
		[Register("reduce", "([SLkotlin/jvm/functions/Function2;)S", "")]
		public unsafe static short Reduce(short[] _this_reduce, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduce);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("reduce.([SLkotlin/jvm/functions/Function2;)S", ptr);
			}
			finally
			{
				if (_this_reduce != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduce);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduce);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x06002391 RID: 9105 RVA: 0x0008AD60 File Offset: 0x00088F60
		[Register("reduce", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"S",
			"T extends S"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Reduce(Java.Lang.Object[] _this_reduce, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reduce);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduce.([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduce != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reduce);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduce);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x06002392 RID: 9106 RVA: 0x0008AE08 File Offset: 0x00089008
		[Register("reduceIndexed", "([ZLkotlin/jvm/functions/Function3;)Z", "")]
		public unsafe static bool ReduceIndexed(bool[] _this_reduceIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexed);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("reduceIndexed.([ZLkotlin/jvm/functions/Function3;)Z", ptr);
			}
			finally
			{
				if (_this_reduceIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x06002393 RID: 9107 RVA: 0x0008AEA4 File Offset: 0x000890A4
		[Register("reduceIndexed", "([BLkotlin/jvm/functions/Function3;)B", "")]
		public unsafe static sbyte ReduceIndexed(byte[] _this_reduceIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexed);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("reduceIndexed.([BLkotlin/jvm/functions/Function3;)B", ptr);
			}
			finally
			{
				if (_this_reduceIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x06002394 RID: 9108 RVA: 0x0008AF40 File Offset: 0x00089140
		[Register("reduceIndexed", "([CLkotlin/jvm/functions/Function3;)C", "")]
		public unsafe static char ReduceIndexed(char[] _this_reduceIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexed);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("reduceIndexed.([CLkotlin/jvm/functions/Function3;)C", ptr);
			}
			finally
			{
				if (_this_reduceIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x06002395 RID: 9109 RVA: 0x0008AFDC File Offset: 0x000891DC
		[Register("reduceIndexed", "([DLkotlin/jvm/functions/Function3;)D", "")]
		public unsafe static double ReduceIndexed(double[] _this_reduceIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexed);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("reduceIndexed.([DLkotlin/jvm/functions/Function3;)D", ptr);
			}
			finally
			{
				if (_this_reduceIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x06002396 RID: 9110 RVA: 0x0008B078 File Offset: 0x00089278
		[Register("reduceIndexed", "([FLkotlin/jvm/functions/Function3;)F", "")]
		public unsafe static float ReduceIndexed(float[] _this_reduceIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexed);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("reduceIndexed.([FLkotlin/jvm/functions/Function3;)F", ptr);
			}
			finally
			{
				if (_this_reduceIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x06002397 RID: 9111 RVA: 0x0008B114 File Offset: 0x00089314
		[Register("reduceIndexed", "([ILkotlin/jvm/functions/Function3;)I", "")]
		public unsafe static int ReduceIndexed(int[] _this_reduceIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexed);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("reduceIndexed.([ILkotlin/jvm/functions/Function3;)I", ptr);
			}
			finally
			{
				if (_this_reduceIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x06002398 RID: 9112 RVA: 0x0008B1B0 File Offset: 0x000893B0
		[Register("reduceIndexed", "([JLkotlin/jvm/functions/Function3;)J", "")]
		public unsafe static long ReduceIndexed(long[] _this_reduceIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexed);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("reduceIndexed.([JLkotlin/jvm/functions/Function3;)J", ptr);
			}
			finally
			{
				if (_this_reduceIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x06002399 RID: 9113 RVA: 0x0008B24C File Offset: 0x0008944C
		[Register("reduceIndexed", "([SLkotlin/jvm/functions/Function3;)S", "")]
		public unsafe static short ReduceIndexed(short[] _this_reduceIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexed);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("reduceIndexed.([SLkotlin/jvm/functions/Function3;)S", ptr);
			}
			finally
			{
				if (_this_reduceIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x0600239A RID: 9114 RVA: 0x0008B2E8 File Offset: 0x000894E8
		[Register("reduceIndexed", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"S",
			"T extends S"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object ReduceIndexed(Java.Lang.Object[] _this_reduceIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reduceIndexed);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceIndexed.([Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceIndexed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reduceIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexed);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x0600239B RID: 9115 RVA: 0x0008B390 File Offset: 0x00089590
		[Register("reduceIndexedOrNull", "([ZLkotlin/jvm/functions/Function3;)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean ReduceIndexedOrNull(bool[] _this_reduceIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexedOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceIndexedOrNull.([ZLkotlin/jvm/functions/Function3;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x0600239C RID: 9116 RVA: 0x0008B438 File Offset: 0x00089638
		[Register("reduceIndexedOrNull", "([BLkotlin/jvm/functions/Function3;)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte ReduceIndexedOrNull(byte[] _this_reduceIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexedOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceIndexedOrNull.([BLkotlin/jvm/functions/Function3;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x0600239D RID: 9117 RVA: 0x0008B4E0 File Offset: 0x000896E0
		[Register("reduceIndexedOrNull", "([CLkotlin/jvm/functions/Function3;)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character ReduceIndexedOrNull(char[] _this_reduceIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexedOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceIndexedOrNull.([CLkotlin/jvm/functions/Function3;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x0600239E RID: 9118 RVA: 0x0008B588 File Offset: 0x00089788
		[Register("reduceIndexedOrNull", "([DLkotlin/jvm/functions/Function3;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double ReduceIndexedOrNull(double[] _this_reduceIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexedOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceIndexedOrNull.([DLkotlin/jvm/functions/Function3;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x0600239F RID: 9119 RVA: 0x0008B630 File Offset: 0x00089830
		[Register("reduceIndexedOrNull", "([FLkotlin/jvm/functions/Function3;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float ReduceIndexedOrNull(float[] _this_reduceIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexedOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceIndexedOrNull.([FLkotlin/jvm/functions/Function3;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023A0 RID: 9120 RVA: 0x0008B6D8 File Offset: 0x000898D8
		[Register("reduceIndexedOrNull", "([ILkotlin/jvm/functions/Function3;)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer ReduceIndexedOrNull(int[] _this_reduceIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexedOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceIndexedOrNull.([ILkotlin/jvm/functions/Function3;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023A1 RID: 9121 RVA: 0x0008B780 File Offset: 0x00089980
		[Register("reduceIndexedOrNull", "([JLkotlin/jvm/functions/Function3;)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long ReduceIndexedOrNull(long[] _this_reduceIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexedOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceIndexedOrNull.([JLkotlin/jvm/functions/Function3;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023A2 RID: 9122 RVA: 0x0008B828 File Offset: 0x00089A28
		[Register("reduceIndexedOrNull", "([SLkotlin/jvm/functions/Function3;)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short ReduceIndexedOrNull(short[] _this_reduceIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceIndexedOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceIndexedOrNull.([SLkotlin/jvm/functions/Function3;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023A3 RID: 9123 RVA: 0x0008B8D0 File Offset: 0x00089AD0
		[Register("reduceIndexedOrNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"S",
			"T extends S"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object ReduceIndexedOrNull(Java.Lang.Object[] _this_reduceIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reduceIndexedOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceIndexedOrNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceIndexedOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reduceIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023A4 RID: 9124 RVA: 0x0008B978 File Offset: 0x00089B78
		[Register("reduceOrNull", "([ZLkotlin/jvm/functions/Function2;)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean ReduceOrNull(bool[] _this_reduceOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceOrNull.([ZLkotlin/jvm/functions/Function2;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023A5 RID: 9125 RVA: 0x0008BA20 File Offset: 0x00089C20
		[Register("reduceOrNull", "([BLkotlin/jvm/functions/Function2;)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte ReduceOrNull(byte[] _this_reduceOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceOrNull.([BLkotlin/jvm/functions/Function2;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023A6 RID: 9126 RVA: 0x0008BAC8 File Offset: 0x00089CC8
		[Register("reduceOrNull", "([CLkotlin/jvm/functions/Function2;)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character ReduceOrNull(char[] _this_reduceOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceOrNull.([CLkotlin/jvm/functions/Function2;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023A7 RID: 9127 RVA: 0x0008BB70 File Offset: 0x00089D70
		[Register("reduceOrNull", "([DLkotlin/jvm/functions/Function2;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double ReduceOrNull(double[] _this_reduceOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceOrNull.([DLkotlin/jvm/functions/Function2;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023A8 RID: 9128 RVA: 0x0008BC18 File Offset: 0x00089E18
		[Register("reduceOrNull", "([FLkotlin/jvm/functions/Function2;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float ReduceOrNull(float[] _this_reduceOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceOrNull.([FLkotlin/jvm/functions/Function2;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023A9 RID: 9129 RVA: 0x0008BCC0 File Offset: 0x00089EC0
		[Register("reduceOrNull", "([ILkotlin/jvm/functions/Function2;)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer ReduceOrNull(int[] _this_reduceOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceOrNull.([ILkotlin/jvm/functions/Function2;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023AA RID: 9130 RVA: 0x0008BD68 File Offset: 0x00089F68
		[Register("reduceOrNull", "([JLkotlin/jvm/functions/Function2;)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long ReduceOrNull(long[] _this_reduceOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceOrNull.([JLkotlin/jvm/functions/Function2;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023AB RID: 9131 RVA: 0x0008BE10 File Offset: 0x0008A010
		[Register("reduceOrNull", "([SLkotlin/jvm/functions/Function2;)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short ReduceOrNull(short[] _this_reduceOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceOrNull.([SLkotlin/jvm/functions/Function2;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023AC RID: 9132 RVA: 0x0008BEB8 File Offset: 0x0008A0B8
		[Register("reduceOrNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"S",
			"T extends S"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object ReduceOrNull(Java.Lang.Object[] _this_reduceOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reduceOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceOrNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reduceOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023AD RID: 9133 RVA: 0x0008BF60 File Offset: 0x0008A160
		[Register("reduceRight", "([ZLkotlin/jvm/functions/Function2;)Z", "")]
		public unsafe static bool ReduceRight(bool[] _this_reduceRight, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRight);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("reduceRight.([ZLkotlin/jvm/functions/Function2;)Z", ptr);
			}
			finally
			{
				if (_this_reduceRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRight);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023AE RID: 9134 RVA: 0x0008BFFC File Offset: 0x0008A1FC
		[Register("reduceRight", "([BLkotlin/jvm/functions/Function2;)B", "")]
		public unsafe static sbyte ReduceRight(byte[] _this_reduceRight, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRight);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("reduceRight.([BLkotlin/jvm/functions/Function2;)B", ptr);
			}
			finally
			{
				if (_this_reduceRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRight);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023AF RID: 9135 RVA: 0x0008C098 File Offset: 0x0008A298
		[Register("reduceRight", "([CLkotlin/jvm/functions/Function2;)C", "")]
		public unsafe static char ReduceRight(char[] _this_reduceRight, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRight);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("reduceRight.([CLkotlin/jvm/functions/Function2;)C", ptr);
			}
			finally
			{
				if (_this_reduceRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRight);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023B0 RID: 9136 RVA: 0x0008C134 File Offset: 0x0008A334
		[Register("reduceRight", "([DLkotlin/jvm/functions/Function2;)D", "")]
		public unsafe static double ReduceRight(double[] _this_reduceRight, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRight);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("reduceRight.([DLkotlin/jvm/functions/Function2;)D", ptr);
			}
			finally
			{
				if (_this_reduceRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRight);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023B1 RID: 9137 RVA: 0x0008C1D0 File Offset: 0x0008A3D0
		[Register("reduceRight", "([FLkotlin/jvm/functions/Function2;)F", "")]
		public unsafe static float ReduceRight(float[] _this_reduceRight, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRight);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("reduceRight.([FLkotlin/jvm/functions/Function2;)F", ptr);
			}
			finally
			{
				if (_this_reduceRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRight);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023B2 RID: 9138 RVA: 0x0008C26C File Offset: 0x0008A46C
		[Register("reduceRight", "([ILkotlin/jvm/functions/Function2;)I", "")]
		public unsafe static int ReduceRight(int[] _this_reduceRight, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRight);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("reduceRight.([ILkotlin/jvm/functions/Function2;)I", ptr);
			}
			finally
			{
				if (_this_reduceRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRight);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023B3 RID: 9139 RVA: 0x0008C308 File Offset: 0x0008A508
		[Register("reduceRight", "([JLkotlin/jvm/functions/Function2;)J", "")]
		public unsafe static long ReduceRight(long[] _this_reduceRight, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRight);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("reduceRight.([JLkotlin/jvm/functions/Function2;)J", ptr);
			}
			finally
			{
				if (_this_reduceRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRight);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023B4 RID: 9140 RVA: 0x0008C3A4 File Offset: 0x0008A5A4
		[Register("reduceRight", "([SLkotlin/jvm/functions/Function2;)S", "")]
		public unsafe static short ReduceRight(short[] _this_reduceRight, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRight);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("reduceRight.([SLkotlin/jvm/functions/Function2;)S", ptr);
			}
			finally
			{
				if (_this_reduceRight != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRight);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023B5 RID: 9141 RVA: 0x0008C440 File Offset: 0x0008A640
		[Register("reduceRight", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"S",
			"T extends S"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object ReduceRight(Java.Lang.Object[] _this_reduceRight, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reduceRight);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRight.([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRight != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reduceRight);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRight);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023B6 RID: 9142 RVA: 0x0008C4E8 File Offset: 0x0008A6E8
		[Register("reduceRightIndexed", "([ZLkotlin/jvm/functions/Function3;)Z", "")]
		public unsafe static bool ReduceRightIndexed(bool[] _this_reduceRightIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexed);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("reduceRightIndexed.([ZLkotlin/jvm/functions/Function3;)Z", ptr);
			}
			finally
			{
				if (_this_reduceRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023B7 RID: 9143 RVA: 0x0008C584 File Offset: 0x0008A784
		[Register("reduceRightIndexed", "([BLkotlin/jvm/functions/Function3;)B", "")]
		public unsafe static sbyte ReduceRightIndexed(byte[] _this_reduceRightIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexed);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("reduceRightIndexed.([BLkotlin/jvm/functions/Function3;)B", ptr);
			}
			finally
			{
				if (_this_reduceRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023B8 RID: 9144 RVA: 0x0008C620 File Offset: 0x0008A820
		[Register("reduceRightIndexed", "([CLkotlin/jvm/functions/Function3;)C", "")]
		public unsafe static char ReduceRightIndexed(char[] _this_reduceRightIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexed);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("reduceRightIndexed.([CLkotlin/jvm/functions/Function3;)C", ptr);
			}
			finally
			{
				if (_this_reduceRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023B9 RID: 9145 RVA: 0x0008C6BC File Offset: 0x0008A8BC
		[Register("reduceRightIndexed", "([DLkotlin/jvm/functions/Function3;)D", "")]
		public unsafe static double ReduceRightIndexed(double[] _this_reduceRightIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexed);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("reduceRightIndexed.([DLkotlin/jvm/functions/Function3;)D", ptr);
			}
			finally
			{
				if (_this_reduceRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023BA RID: 9146 RVA: 0x0008C758 File Offset: 0x0008A958
		[Register("reduceRightIndexed", "([FLkotlin/jvm/functions/Function3;)F", "")]
		public unsafe static float ReduceRightIndexed(float[] _this_reduceRightIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexed);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("reduceRightIndexed.([FLkotlin/jvm/functions/Function3;)F", ptr);
			}
			finally
			{
				if (_this_reduceRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023BB RID: 9147 RVA: 0x0008C7F4 File Offset: 0x0008A9F4
		[Register("reduceRightIndexed", "([ILkotlin/jvm/functions/Function3;)I", "")]
		public unsafe static int ReduceRightIndexed(int[] _this_reduceRightIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexed);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("reduceRightIndexed.([ILkotlin/jvm/functions/Function3;)I", ptr);
			}
			finally
			{
				if (_this_reduceRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023BC RID: 9148 RVA: 0x0008C890 File Offset: 0x0008AA90
		[Register("reduceRightIndexed", "([JLkotlin/jvm/functions/Function3;)J", "")]
		public unsafe static long ReduceRightIndexed(long[] _this_reduceRightIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexed);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("reduceRightIndexed.([JLkotlin/jvm/functions/Function3;)J", ptr);
			}
			finally
			{
				if (_this_reduceRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023BD RID: 9149 RVA: 0x0008C92C File Offset: 0x0008AB2C
		[Register("reduceRightIndexed", "([SLkotlin/jvm/functions/Function3;)S", "")]
		public unsafe static short ReduceRightIndexed(short[] _this_reduceRightIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexed);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("reduceRightIndexed.([SLkotlin/jvm/functions/Function3;)S", ptr);
			}
			finally
			{
				if (_this_reduceRightIndexed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023BE RID: 9150 RVA: 0x0008C9C8 File Offset: 0x0008ABC8
		[Register("reduceRightIndexed", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"S",
			"T extends S"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object ReduceRightIndexed(Java.Lang.Object[] _this_reduceRightIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reduceRightIndexed);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightIndexed.([Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightIndexed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reduceRightIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexed);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023BF RID: 9151 RVA: 0x0008CA70 File Offset: 0x0008AC70
		[Register("reduceRightIndexedOrNull", "([ZLkotlin/jvm/functions/Function3;)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean ReduceRightIndexedOrNull(bool[] _this_reduceRightIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexedOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightIndexedOrNull.([ZLkotlin/jvm/functions/Function3;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023C0 RID: 9152 RVA: 0x0008CB18 File Offset: 0x0008AD18
		[Register("reduceRightIndexedOrNull", "([BLkotlin/jvm/functions/Function3;)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte ReduceRightIndexedOrNull(byte[] _this_reduceRightIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexedOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightIndexedOrNull.([BLkotlin/jvm/functions/Function3;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023C1 RID: 9153 RVA: 0x0008CBC0 File Offset: 0x0008ADC0
		[Register("reduceRightIndexedOrNull", "([CLkotlin/jvm/functions/Function3;)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character ReduceRightIndexedOrNull(char[] _this_reduceRightIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexedOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightIndexedOrNull.([CLkotlin/jvm/functions/Function3;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023C2 RID: 9154 RVA: 0x0008CC68 File Offset: 0x0008AE68
		[Register("reduceRightIndexedOrNull", "([DLkotlin/jvm/functions/Function3;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double ReduceRightIndexedOrNull(double[] _this_reduceRightIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexedOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightIndexedOrNull.([DLkotlin/jvm/functions/Function3;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023C3 RID: 9155 RVA: 0x0008CD10 File Offset: 0x0008AF10
		[Register("reduceRightIndexedOrNull", "([FLkotlin/jvm/functions/Function3;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float ReduceRightIndexedOrNull(float[] _this_reduceRightIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexedOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightIndexedOrNull.([FLkotlin/jvm/functions/Function3;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023C4 RID: 9156 RVA: 0x0008CDB8 File Offset: 0x0008AFB8
		[Register("reduceRightIndexedOrNull", "([ILkotlin/jvm/functions/Function3;)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer ReduceRightIndexedOrNull(int[] _this_reduceRightIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexedOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightIndexedOrNull.([ILkotlin/jvm/functions/Function3;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023C5 RID: 9157 RVA: 0x0008CE60 File Offset: 0x0008B060
		[Register("reduceRightIndexedOrNull", "([JLkotlin/jvm/functions/Function3;)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long ReduceRightIndexedOrNull(long[] _this_reduceRightIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexedOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightIndexedOrNull.([JLkotlin/jvm/functions/Function3;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023C6 RID: 9158 RVA: 0x0008CF08 File Offset: 0x0008B108
		[Register("reduceRightIndexedOrNull", "([SLkotlin/jvm/functions/Function3;)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short ReduceRightIndexedOrNull(short[] _this_reduceRightIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightIndexedOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightIndexedOrNull.([SLkotlin/jvm/functions/Function3;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightIndexedOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023C7 RID: 9159 RVA: 0x0008CFB0 File Offset: 0x0008B1B0
		[Register("reduceRightIndexedOrNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"S",
			"T extends S"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object ReduceRightIndexedOrNull(Java.Lang.Object[] _this_reduceRightIndexedOrNull, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reduceRightIndexedOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightIndexedOrNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightIndexedOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reduceRightIndexedOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightIndexedOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023C8 RID: 9160 RVA: 0x0008D058 File Offset: 0x0008B258
		[Register("reduceRightOrNull", "([ZLkotlin/jvm/functions/Function2;)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean ReduceRightOrNull(bool[] _this_reduceRightOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightOrNull.([ZLkotlin/jvm/functions/Function2;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023C9 RID: 9161 RVA: 0x0008D100 File Offset: 0x0008B300
		[Register("reduceRightOrNull", "([BLkotlin/jvm/functions/Function2;)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte ReduceRightOrNull(byte[] _this_reduceRightOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightOrNull.([BLkotlin/jvm/functions/Function2;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023CA RID: 9162 RVA: 0x0008D1A8 File Offset: 0x0008B3A8
		[Register("reduceRightOrNull", "([CLkotlin/jvm/functions/Function2;)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character ReduceRightOrNull(char[] _this_reduceRightOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightOrNull.([CLkotlin/jvm/functions/Function2;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023CB RID: 9163 RVA: 0x0008D250 File Offset: 0x0008B450
		[Register("reduceRightOrNull", "([DLkotlin/jvm/functions/Function2;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double ReduceRightOrNull(double[] _this_reduceRightOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightOrNull.([DLkotlin/jvm/functions/Function2;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023CC RID: 9164 RVA: 0x0008D2F8 File Offset: 0x0008B4F8
		[Register("reduceRightOrNull", "([FLkotlin/jvm/functions/Function2;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float ReduceRightOrNull(float[] _this_reduceRightOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightOrNull.([FLkotlin/jvm/functions/Function2;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023CD RID: 9165 RVA: 0x0008D3A0 File Offset: 0x0008B5A0
		[Register("reduceRightOrNull", "([ILkotlin/jvm/functions/Function2;)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer ReduceRightOrNull(int[] _this_reduceRightOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightOrNull.([ILkotlin/jvm/functions/Function2;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023CE RID: 9166 RVA: 0x0008D448 File Offset: 0x0008B648
		[Register("reduceRightOrNull", "([JLkotlin/jvm/functions/Function2;)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long ReduceRightOrNull(long[] _this_reduceRightOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightOrNull.([JLkotlin/jvm/functions/Function2;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023CF RID: 9167 RVA: 0x0008D4F0 File Offset: 0x0008B6F0
		[Register("reduceRightOrNull", "([SLkotlin/jvm/functions/Function2;)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short ReduceRightOrNull(short[] _this_reduceRightOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reduceRightOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightOrNull.([SLkotlin/jvm/functions/Function2;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reduceRightOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023D0 RID: 9168 RVA: 0x0008D598 File Offset: 0x0008B798
		[Register("reduceRightOrNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"S",
			"T extends S"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object ReduceRightOrNull(Java.Lang.Object[] _this_reduceRightOrNull, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reduceRightOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("reduceRightOrNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reduceRightOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reduceRightOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reduceRightOrNull);
				GC.KeepAlive(operation);
			}
			return @object;
		}

		// Token: 0x060023D1 RID: 9169 RVA: 0x0008D640 File Offset: 0x0008B840
		[Register("requireNoNulls", "([Ljava/lang/Object;)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] RequireNoNulls(Java.Lang.Object[] _this_requireNoNulls)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_requireNoNulls);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("requireNoNulls.([Ljava/lang/Object;)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_requireNoNulls != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_requireNoNulls);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_requireNoNulls);
			}
			return result;
		}

		// Token: 0x060023D2 RID: 9170 RVA: 0x0008D6CC File Offset: 0x0008B8CC
		[Register("reverse", "([Z)V", "")]
		public unsafe static void Reverse(bool[] _this_reverse)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([Z)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023D3 RID: 9171 RVA: 0x0008D738 File Offset: 0x0008B938
		[Register("reverse", "([ZII)V", "")]
		public unsafe static void Reverse(bool[] _this_reverse, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([ZII)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023D4 RID: 9172 RVA: 0x0008D7CC File Offset: 0x0008B9CC
		[Register("reverse", "([B)V", "")]
		public unsafe static void Reverse(byte[] _this_reverse)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([B)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023D5 RID: 9173 RVA: 0x0008D838 File Offset: 0x0008BA38
		[Register("reverse", "([BII)V", "")]
		public unsafe static void Reverse(byte[] _this_reverse, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([BII)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023D6 RID: 9174 RVA: 0x0008D8CC File Offset: 0x0008BACC
		[Register("reverse", "([C)V", "")]
		public unsafe static void Reverse(char[] _this_reverse)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([C)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023D7 RID: 9175 RVA: 0x0008D938 File Offset: 0x0008BB38
		[Register("reverse", "([CII)V", "")]
		public unsafe static void Reverse(char[] _this_reverse, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([CII)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023D8 RID: 9176 RVA: 0x0008D9CC File Offset: 0x0008BBCC
		[Register("reverse", "([D)V", "")]
		public unsafe static void Reverse(double[] _this_reverse)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([D)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023D9 RID: 9177 RVA: 0x0008DA38 File Offset: 0x0008BC38
		[Register("reverse", "([DII)V", "")]
		public unsafe static void Reverse(double[] _this_reverse, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([DII)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023DA RID: 9178 RVA: 0x0008DACC File Offset: 0x0008BCCC
		[Register("reverse", "([F)V", "")]
		public unsafe static void Reverse(float[] _this_reverse)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([F)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023DB RID: 9179 RVA: 0x0008DB38 File Offset: 0x0008BD38
		[Register("reverse", "([FII)V", "")]
		public unsafe static void Reverse(float[] _this_reverse, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([FII)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023DC RID: 9180 RVA: 0x0008DBCC File Offset: 0x0008BDCC
		[Register("reverse", "([I)V", "")]
		public unsafe static void Reverse(int[] _this_reverse)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([I)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023DD RID: 9181 RVA: 0x0008DC38 File Offset: 0x0008BE38
		[Register("reverse", "([III)V", "")]
		public unsafe static void Reverse(int[] _this_reverse, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([III)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023DE RID: 9182 RVA: 0x0008DCCC File Offset: 0x0008BECC
		[Register("reverse", "([J)V", "")]
		public unsafe static void Reverse(long[] _this_reverse)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([J)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023DF RID: 9183 RVA: 0x0008DD38 File Offset: 0x0008BF38
		[Register("reverse", "([JII)V", "")]
		public unsafe static void Reverse(long[] _this_reverse, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([JII)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023E0 RID: 9184 RVA: 0x0008DDCC File Offset: 0x0008BFCC
		[Register("reverse", "([S)V", "")]
		public unsafe static void Reverse(short[] _this_reverse)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([S)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023E1 RID: 9185 RVA: 0x0008DE38 File Offset: 0x0008C038
		[Register("reverse", "([SII)V", "")]
		public unsafe static void Reverse(short[] _this_reverse, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([SII)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023E2 RID: 9186 RVA: 0x0008DECC File Offset: 0x0008C0CC
		[Register("reverse", "([Ljava/lang/Object;)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static void Reverse(Java.Lang.Object[] _this_reverse)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([Ljava/lang/Object;)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023E3 RID: 9187 RVA: 0x0008DF38 File Offset: 0x0008C138
		[Register("reverse", "([Ljava/lang/Object;II)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static void Reverse(Java.Lang.Object[] _this_reverse, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reverse);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("reverse.([Ljava/lang/Object;II)V", ptr);
			}
			finally
			{
				if (_this_reverse != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reverse);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reverse);
			}
		}

		// Token: 0x060023E4 RID: 9188 RVA: 0x0008DFCC File Offset: 0x0008C1CC
		[Register("reversed", "([Z)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> Reversed(bool[] _this_reversed)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversed);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversed.([Z)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reversed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversed);
			}
			return result;
		}

		// Token: 0x060023E5 RID: 9189 RVA: 0x0008E048 File Offset: 0x0008C248
		[Register("reversed", "([B)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> Reversed(byte[] _this_reversed)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversed);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversed.([B)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reversed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversed);
			}
			return result;
		}

		// Token: 0x060023E6 RID: 9190 RVA: 0x0008E0C4 File Offset: 0x0008C2C4
		[Register("reversed", "([C)Ljava/util/List;", "")]
		public unsafe static IList<Character> Reversed(char[] _this_reversed)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversed);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversed.([C)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reversed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversed);
			}
			return result;
		}

		// Token: 0x060023E7 RID: 9191 RVA: 0x0008E140 File Offset: 0x0008C340
		[Register("reversed", "([D)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> Reversed(double[] _this_reversed)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversed);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversed.([D)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reversed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversed);
			}
			return result;
		}

		// Token: 0x060023E8 RID: 9192 RVA: 0x0008E1BC File Offset: 0x0008C3BC
		[Register("reversed", "([F)Ljava/util/List;", "")]
		public unsafe static IList<Float> Reversed(float[] _this_reversed)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversed);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversed.([F)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reversed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversed);
			}
			return result;
		}

		// Token: 0x060023E9 RID: 9193 RVA: 0x0008E238 File Offset: 0x0008C438
		[Register("reversed", "([I)Ljava/util/List;", "")]
		public unsafe static IList<Integer> Reversed(int[] _this_reversed)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversed);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversed.([I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reversed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversed);
			}
			return result;
		}

		// Token: 0x060023EA RID: 9194 RVA: 0x0008E2B4 File Offset: 0x0008C4B4
		[Register("reversed", "([J)Ljava/util/List;", "")]
		public unsafe static IList<Long> Reversed(long[] _this_reversed)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversed);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversed.([J)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reversed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversed);
			}
			return result;
		}

		// Token: 0x060023EB RID: 9195 RVA: 0x0008E330 File Offset: 0x0008C530
		[Register("reversed", "([S)Ljava/util/List;", "")]
		public unsafe static IList<Short> Reversed(short[] _this_reversed)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversed);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversed.([S)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reversed != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversed);
			}
			return result;
		}

		// Token: 0x060023EC RID: 9196 RVA: 0x0008E3AC File Offset: 0x0008C5AC
		[Register("reversed", "([Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList Reversed(Java.Lang.Object[] _this_reversed)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reversed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversed.([Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_reversed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reversed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversed);
			}
			return result;
		}

		// Token: 0x060023ED RID: 9197 RVA: 0x0008E428 File Offset: 0x0008C628
		[Register("reversedArray", "([Z)[Z", "")]
		public unsafe static bool[] ReversedArray(bool[] _this_reversedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversedArray);
			bool[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (bool[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversedArray.([Z)[Z", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(bool));
			}
			finally
			{
				if (_this_reversedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversedArray);
			}
			return result;
		}

		// Token: 0x060023EE RID: 9198 RVA: 0x0008E4B4 File Offset: 0x0008C6B4
		[Register("reversedArray", "([B)[B", "")]
		public unsafe static byte[] ReversedArray(byte[] _this_reversedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversedArray);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversedArray.([B)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_reversedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversedArray);
			}
			return result;
		}

		// Token: 0x060023EF RID: 9199 RVA: 0x0008E540 File Offset: 0x0008C740
		[Register("reversedArray", "([C)[C", "")]
		public unsafe static char[] ReversedArray(char[] _this_reversedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversedArray);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversedArray.([C)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_reversedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversedArray);
			}
			return result;
		}

		// Token: 0x060023F0 RID: 9200 RVA: 0x0008E5CC File Offset: 0x0008C7CC
		[Register("reversedArray", "([D)[D", "")]
		public unsafe static double[] ReversedArray(double[] _this_reversedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversedArray);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversedArray.([D)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_reversedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversedArray);
			}
			return result;
		}

		// Token: 0x060023F1 RID: 9201 RVA: 0x0008E658 File Offset: 0x0008C858
		[Register("reversedArray", "([F)[F", "")]
		public unsafe static float[] ReversedArray(float[] _this_reversedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversedArray);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversedArray.([F)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_reversedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversedArray);
			}
			return result;
		}

		// Token: 0x060023F2 RID: 9202 RVA: 0x0008E6E4 File Offset: 0x0008C8E4
		[Register("reversedArray", "([I)[I", "")]
		public unsafe static int[] ReversedArray(int[] _this_reversedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversedArray);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversedArray.([I)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_reversedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversedArray);
			}
			return result;
		}

		// Token: 0x060023F3 RID: 9203 RVA: 0x0008E770 File Offset: 0x0008C970
		[Register("reversedArray", "([J)[J", "")]
		public unsafe static long[] ReversedArray(long[] _this_reversedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversedArray);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversedArray.([J)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_reversedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversedArray);
			}
			return result;
		}

		// Token: 0x060023F4 RID: 9204 RVA: 0x0008E7FC File Offset: 0x0008C9FC
		[Register("reversedArray", "([S)[S", "")]
		public unsafe static short[] ReversedArray(short[] _this_reversedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_reversedArray);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversedArray.([S)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_reversedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_reversedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversedArray);
			}
			return result;
		}

		// Token: 0x060023F5 RID: 9205 RVA: 0x0008E888 File Offset: 0x0008CA88
		[Register("reversedArray", "([Ljava/lang/Object;)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] ReversedArray(Java.Lang.Object[] _this_reversedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_reversedArray);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("reversedArray.([Ljava/lang/Object;)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_reversedArray != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_reversedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_reversedArray);
			}
			return result;
		}

		// Token: 0x060023F6 RID: 9206 RVA: 0x0008E914 File Offset: 0x0008CB14
		[Register("runningFold", "([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList RunningFold(Java.Lang.Object[] _this_runningFold, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_runningFold);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("runningFold.([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_runningFold != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_runningFold);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_runningFold);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023F7 RID: 9207 RVA: 0x0008E9E8 File Offset: 0x0008CBE8
		[Register("runningFoldIndexed", "([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList RunningFoldIndexed(Java.Lang.Object[] _this_runningFoldIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_runningFoldIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("runningFoldIndexed.([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_runningFoldIndexed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_runningFoldIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_runningFoldIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023F8 RID: 9208 RVA: 0x0008EABC File Offset: 0x0008CCBC
		[Register("runningReduce", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"S",
			"T extends S"
		})]
		public unsafe static System.Collections.IList RunningReduce(Java.Lang.Object[] _this_runningReduce, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_runningReduce);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("runningReduce.([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_runningReduce != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_runningReduce);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_runningReduce);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023F9 RID: 9209 RVA: 0x0008EB64 File Offset: 0x0008CD64
		[Register("runningReduceIndexed", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"S",
			"T extends S"
		})]
		public unsafe static System.Collections.IList RunningReduceIndexed(Java.Lang.Object[] _this_runningReduceIndexed, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_runningReduceIndexed);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("runningReduceIndexed.([Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_runningReduceIndexed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_runningReduceIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_runningReduceIndexed);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023FA RID: 9210 RVA: 0x0008EC0C File Offset: 0x0008CE0C
		[Register("scan", "([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList Scan(Java.Lang.Object[] _this_scan, [Nullable(2)] Java.Lang.Object initial, IFunction2 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_scan);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("scan.([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_scan != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_scan);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_scan);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023FB RID: 9211 RVA: 0x0008ECE0 File Offset: 0x0008CEE0
		[Register("scanIndexed", "([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList ScanIndexed(Java.Lang.Object[] _this_scanIndexed, [Nullable(2)] Java.Lang.Object initial, IFunction3 operation)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_scanIndexed);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(initial);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((operation == null) ? IntPtr.Zero : ((Java.Lang.Object)operation).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("scanIndexed.([Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_scanIndexed != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_scanIndexed);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_scanIndexed);
				GC.KeepAlive(initial);
				GC.KeepAlive(operation);
			}
			return result;
		}

		// Token: 0x060023FC RID: 9212 RVA: 0x0008EDB4 File Offset: 0x0008CFB4
		[Register("shuffle", "([Z)V", "")]
		public unsafe static void Shuffle(bool[] _this_shuffle)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([Z)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
			}
		}

		// Token: 0x060023FD RID: 9213 RVA: 0x0008EE20 File Offset: 0x0008D020
		[Register("shuffle", "([ZLkotlin/random/Random;)V", "")]
		public unsafe static void Shuffle(bool[] _this_shuffle, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([ZLkotlin/random/Random;)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
				GC.KeepAlive(random);
			}
		}

		// Token: 0x060023FE RID: 9214 RVA: 0x0008EEB4 File Offset: 0x0008D0B4
		[Register("shuffle", "([B)V", "")]
		public unsafe static void Shuffle(byte[] _this_shuffle)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([B)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
			}
		}

		// Token: 0x060023FF RID: 9215 RVA: 0x0008EF20 File Offset: 0x0008D120
		[Register("shuffle", "([BLkotlin/random/Random;)V", "")]
		public unsafe static void Shuffle(byte[] _this_shuffle, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([BLkotlin/random/Random;)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
				GC.KeepAlive(random);
			}
		}

		// Token: 0x06002400 RID: 9216 RVA: 0x0008EFB4 File Offset: 0x0008D1B4
		[Register("shuffle", "([C)V", "")]
		public unsafe static void Shuffle(char[] _this_shuffle)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([C)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
			}
		}

		// Token: 0x06002401 RID: 9217 RVA: 0x0008F020 File Offset: 0x0008D220
		[Register("shuffle", "([CLkotlin/random/Random;)V", "")]
		public unsafe static void Shuffle(char[] _this_shuffle, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([CLkotlin/random/Random;)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
				GC.KeepAlive(random);
			}
		}

		// Token: 0x06002402 RID: 9218 RVA: 0x0008F0B4 File Offset: 0x0008D2B4
		[Register("shuffle", "([D)V", "")]
		public unsafe static void Shuffle(double[] _this_shuffle)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([D)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
			}
		}

		// Token: 0x06002403 RID: 9219 RVA: 0x0008F120 File Offset: 0x0008D320
		[Register("shuffle", "([DLkotlin/random/Random;)V", "")]
		public unsafe static void Shuffle(double[] _this_shuffle, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([DLkotlin/random/Random;)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
				GC.KeepAlive(random);
			}
		}

		// Token: 0x06002404 RID: 9220 RVA: 0x0008F1B4 File Offset: 0x0008D3B4
		[Register("shuffle", "([F)V", "")]
		public unsafe static void Shuffle(float[] _this_shuffle)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([F)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
			}
		}

		// Token: 0x06002405 RID: 9221 RVA: 0x0008F220 File Offset: 0x0008D420
		[Register("shuffle", "([FLkotlin/random/Random;)V", "")]
		public unsafe static void Shuffle(float[] _this_shuffle, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([FLkotlin/random/Random;)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
				GC.KeepAlive(random);
			}
		}

		// Token: 0x06002406 RID: 9222 RVA: 0x0008F2B4 File Offset: 0x0008D4B4
		[Register("shuffle", "([I)V", "")]
		public unsafe static void Shuffle(int[] _this_shuffle)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([I)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
			}
		}

		// Token: 0x06002407 RID: 9223 RVA: 0x0008F320 File Offset: 0x0008D520
		[Register("shuffle", "([ILkotlin/random/Random;)V", "")]
		public unsafe static void Shuffle(int[] _this_shuffle, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([ILkotlin/random/Random;)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
				GC.KeepAlive(random);
			}
		}

		// Token: 0x06002408 RID: 9224 RVA: 0x0008F3B4 File Offset: 0x0008D5B4
		[Register("shuffle", "([J)V", "")]
		public unsafe static void Shuffle(long[] _this_shuffle)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([J)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
			}
		}

		// Token: 0x06002409 RID: 9225 RVA: 0x0008F420 File Offset: 0x0008D620
		[Register("shuffle", "([JLkotlin/random/Random;)V", "")]
		public unsafe static void Shuffle(long[] _this_shuffle, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([JLkotlin/random/Random;)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
				GC.KeepAlive(random);
			}
		}

		// Token: 0x0600240A RID: 9226 RVA: 0x0008F4B4 File Offset: 0x0008D6B4
		[Register("shuffle", "([S)V", "")]
		public unsafe static void Shuffle(short[] _this_shuffle)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([S)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
			}
		}

		// Token: 0x0600240B RID: 9227 RVA: 0x0008F520 File Offset: 0x0008D720
		[Register("shuffle", "([SLkotlin/random/Random;)V", "")]
		public unsafe static void Shuffle(short[] _this_shuffle, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([SLkotlin/random/Random;)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
				GC.KeepAlive(random);
			}
		}

		// Token: 0x0600240C RID: 9228 RVA: 0x0008F5B4 File Offset: 0x0008D7B4
		[Register("shuffle", "([Ljava/lang/Object;)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static void Shuffle(Java.Lang.Object[] _this_shuffle)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([Ljava/lang/Object;)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
			}
		}

		// Token: 0x0600240D RID: 9229 RVA: 0x0008F620 File Offset: 0x0008D820
		[Register("shuffle", "([Ljava/lang/Object;Lkotlin/random/Random;)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static void Shuffle(Java.Lang.Object[] _this_shuffle, Kotlin.Random.Random random)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_shuffle);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((random == null) ? IntPtr.Zero : random.Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("shuffle.([Ljava/lang/Object;Lkotlin/random/Random;)V", ptr);
			}
			finally
			{
				if (_this_shuffle != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_shuffle);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_shuffle);
				GC.KeepAlive(random);
			}
		}

		// Token: 0x0600240E RID: 9230 RVA: 0x0008F6B4 File Offset: 0x0008D8B4
		[Register("single", "([Z)Z", "")]
		public unsafe static bool Single(bool[] _this_single)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("single.([Z)Z", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
			}
			return result;
		}

		// Token: 0x0600240F RID: 9231 RVA: 0x0008F720 File Offset: 0x0008D920
		[Register("single", "([ZLkotlin/jvm/functions/Function1;)Z", "")]
		public unsafe static bool Single(bool[] _this_single, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("single.([ZLkotlin/jvm/functions/Function1;)Z", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002410 RID: 9232 RVA: 0x0008F7BC File Offset: 0x0008D9BC
		[Register("single", "([B)B", "")]
		public unsafe static sbyte Single(byte[] _this_single)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("single.([B)B", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
			}
			return result;
		}

		// Token: 0x06002411 RID: 9233 RVA: 0x0008F828 File Offset: 0x0008DA28
		[Register("single", "([BLkotlin/jvm/functions/Function1;)B", "")]
		public unsafe static sbyte Single(byte[] _this_single, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			sbyte result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSByteMethod("single.([BLkotlin/jvm/functions/Function1;)B", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002412 RID: 9234 RVA: 0x0008F8C4 File Offset: 0x0008DAC4
		[Register("single", "([C)C", "")]
		public unsafe static char Single(char[] _this_single)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("single.([C)C", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
			}
			return result;
		}

		// Token: 0x06002413 RID: 9235 RVA: 0x0008F930 File Offset: 0x0008DB30
		[Register("single", "([CLkotlin/jvm/functions/Function1;)C", "")]
		public unsafe static char Single(char[] _this_single, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			char result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeCharMethod("single.([CLkotlin/jvm/functions/Function1;)C", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002414 RID: 9236 RVA: 0x0008F9CC File Offset: 0x0008DBCC
		[Register("single", "([D)D", "")]
		public unsafe static double Single(double[] _this_single)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("single.([D)D", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
			}
			return result;
		}

		// Token: 0x06002415 RID: 9237 RVA: 0x0008FA38 File Offset: 0x0008DC38
		[Register("single", "([DLkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double Single(double[] _this_single, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("single.([DLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002416 RID: 9238 RVA: 0x0008FAD4 File Offset: 0x0008DCD4
		[Register("single", "([F)F", "")]
		public unsafe static float Single(float[] _this_single)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("single.([F)F", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
			}
			return result;
		}

		// Token: 0x06002417 RID: 9239 RVA: 0x0008FB40 File Offset: 0x0008DD40
		[Register("single", "([FLkotlin/jvm/functions/Function1;)F", "")]
		public unsafe static float Single(float[] _this_single, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("single.([FLkotlin/jvm/functions/Function1;)F", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x06002418 RID: 9240 RVA: 0x0008FBDC File Offset: 0x0008DDDC
		[Register("single", "([I)I", "")]
		public unsafe static int Single(int[] _this_single)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("single.([I)I", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
			}
			return result;
		}

		// Token: 0x06002419 RID: 9241 RVA: 0x0008FC48 File Offset: 0x0008DE48
		[Register("single", "([ILkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int Single(int[] _this_single, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("single.([ILkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600241A RID: 9242 RVA: 0x0008FCE4 File Offset: 0x0008DEE4
		[Register("single", "([J)J", "")]
		public unsafe static long Single(long[] _this_single)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("single.([J)J", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
			}
			return result;
		}

		// Token: 0x0600241B RID: 9243 RVA: 0x0008FD50 File Offset: 0x0008DF50
		[Register("single", "([JLkotlin/jvm/functions/Function1;)J", "")]
		public unsafe static long Single(long[] _this_single, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("single.([JLkotlin/jvm/functions/Function1;)J", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600241C RID: 9244 RVA: 0x0008FDEC File Offset: 0x0008DFEC
		[Register("single", "([S)S", "")]
		public unsafe static short Single(short[] _this_single)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("single.([S)S", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
			}
			return result;
		}

		// Token: 0x0600241D RID: 9245 RVA: 0x0008FE58 File Offset: 0x0008E058
		[Register("single", "([SLkotlin/jvm/functions/Function1;)S", "")]
		public unsafe static short Single(short[] _this_single, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_single);
			short result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt16Method("single.([SLkotlin/jvm/functions/Function1;)S", ptr);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x0600241E RID: 9246 RVA: 0x0008FEF4 File Offset: 0x0008E0F4
		[Register("single", "([Ljava/lang/Object;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Single(Java.Lang.Object[] _this_single)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_single);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("single.([Ljava/lang/Object;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
			}
			return @object;
		}

		// Token: 0x0600241F RID: 9247 RVA: 0x0008FF70 File Offset: 0x0008E170
		[Register("single", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object Single(Java.Lang.Object[] _this_single, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_single);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("single.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_single != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_single);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_single);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002420 RID: 9248 RVA: 0x00090018 File Offset: 0x0008E218
		[Register("singleOrNull", "([Z)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean SingleOrNull(bool[] _this_singleOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([Z)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
			}
			return @object;
		}

		// Token: 0x06002421 RID: 9249 RVA: 0x00090094 File Offset: 0x0008E294
		[Register("singleOrNull", "([ZLkotlin/jvm/functions/Function1;)Ljava/lang/Boolean;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Boolean SingleOrNull(bool[] _this_singleOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Java.Lang.Boolean @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Boolean>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([ZLkotlin/jvm/functions/Function1;)Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002422 RID: 9250 RVA: 0x0009013C File Offset: 0x0008E33C
		[Register("singleOrNull", "([B)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte SingleOrNull(byte[] _this_singleOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([B)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
			}
			return @object;
		}

		// Token: 0x06002423 RID: 9251 RVA: 0x000901B8 File Offset: 0x0008E3B8
		[Register("singleOrNull", "([BLkotlin/jvm/functions/Function1;)Ljava/lang/Byte;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Byte SingleOrNull(byte[] _this_singleOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Java.Lang.Byte @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Byte>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([BLkotlin/jvm/functions/Function1;)Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002424 RID: 9252 RVA: 0x00090260 File Offset: 0x0008E460
		[Register("singleOrNull", "([C)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character SingleOrNull(char[] _this_singleOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([C)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
			}
			return @object;
		}

		// Token: 0x06002425 RID: 9253 RVA: 0x000902DC File Offset: 0x0008E4DC
		[Register("singleOrNull", "([CLkotlin/jvm/functions/Function1;)Ljava/lang/Character;", "")]
		[return: Nullable(2)]
		public unsafe static Character SingleOrNull(char[] _this_singleOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Character @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Character>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([CLkotlin/jvm/functions/Function1;)Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002426 RID: 9254 RVA: 0x00090384 File Offset: 0x0008E584
		[Register("singleOrNull", "([D)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double SingleOrNull(double[] _this_singleOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([D)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
			}
			return @object;
		}

		// Token: 0x06002427 RID: 9255 RVA: 0x00090400 File Offset: 0x0008E600
		[Register("singleOrNull", "([DLkotlin/jvm/functions/Function1;)Ljava/lang/Double;", "")]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Double SingleOrNull(double[] _this_singleOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Java.Lang.Double @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Double>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([DLkotlin/jvm/functions/Function1;)Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002428 RID: 9256 RVA: 0x000904A8 File Offset: 0x0008E6A8
		[Register("singleOrNull", "([F)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float SingleOrNull(float[] _this_singleOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([F)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
			}
			return @object;
		}

		// Token: 0x06002429 RID: 9257 RVA: 0x00090524 File Offset: 0x0008E724
		[Register("singleOrNull", "([FLkotlin/jvm/functions/Function1;)Ljava/lang/Float;", "")]
		[return: Nullable(2)]
		public unsafe static Float SingleOrNull(float[] _this_singleOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Float @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Float>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([FLkotlin/jvm/functions/Function1;)Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x0600242A RID: 9258 RVA: 0x000905CC File Offset: 0x0008E7CC
		[Register("singleOrNull", "([I)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer SingleOrNull(int[] _this_singleOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([I)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
			}
			return @object;
		}

		// Token: 0x0600242B RID: 9259 RVA: 0x00090648 File Offset: 0x0008E848
		[Register("singleOrNull", "([ILkotlin/jvm/functions/Function1;)Ljava/lang/Integer;", "")]
		[return: Nullable(2)]
		public unsafe static Integer SingleOrNull(int[] _this_singleOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Integer @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Integer>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([ILkotlin/jvm/functions/Function1;)Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x0600242C RID: 9260 RVA: 0x000906F0 File Offset: 0x0008E8F0
		[Register("singleOrNull", "([J)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long SingleOrNull(long[] _this_singleOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([J)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
			}
			return @object;
		}

		// Token: 0x0600242D RID: 9261 RVA: 0x0009076C File Offset: 0x0008E96C
		[Register("singleOrNull", "([JLkotlin/jvm/functions/Function1;)Ljava/lang/Long;", "")]
		[return: Nullable(2)]
		public unsafe static Long SingleOrNull(long[] _this_singleOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Long @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Long>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([JLkotlin/jvm/functions/Function1;)Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x0600242E RID: 9262 RVA: 0x00090814 File Offset: 0x0008EA14
		[Register("singleOrNull", "([S)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short SingleOrNull(short[] _this_singleOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([S)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
			}
			return @object;
		}

		// Token: 0x0600242F RID: 9263 RVA: 0x00090890 File Offset: 0x0008EA90
		[Register("singleOrNull", "([SLkotlin/jvm/functions/Function1;)Ljava/lang/Short;", "")]
		[return: Nullable(2)]
		public unsafe static Short SingleOrNull(short[] _this_singleOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_singleOrNull);
			Short @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Short>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([SLkotlin/jvm/functions/Function1;)Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002430 RID: 9264 RVA: 0x00090938 File Offset: 0x0008EB38
		[Register("singleOrNull", "([Ljava/lang/Object;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object SingleOrNull(Java.Lang.Object[] _this_singleOrNull)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_singleOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([Ljava/lang/Object;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
			}
			return @object;
		}

		// Token: 0x06002431 RID: 9265 RVA: 0x000909B4 File Offset: 0x0008EBB4
		[Register("singleOrNull", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		[return: Nullable(2)]
		public unsafe static Java.Lang.Object SingleOrNull(Java.Lang.Object[] _this_singleOrNull, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_singleOrNull);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("singleOrNull.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_singleOrNull != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_singleOrNull);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_singleOrNull);
				GC.KeepAlive(predicate);
			}
			return @object;
		}

		// Token: 0x06002432 RID: 9266 RVA: 0x00090A5C File Offset: 0x0008EC5C
		[Register("slice", "([ZLjava/lang/Iterable;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> Slice(bool[] _this_slice, IIterable indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : ((Java.Lang.Object)indices).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([ZLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002433 RID: 9267 RVA: 0x00090B04 File Offset: 0x0008ED04
		[Register("slice", "([ZLkotlin/ranges/IntRange;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> Slice(bool[] _this_slice, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([ZLkotlin/ranges/IntRange;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002434 RID: 9268 RVA: 0x00090BA8 File Offset: 0x0008EDA8
		[Register("slice", "([BLjava/lang/Iterable;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> Slice(byte[] _this_slice, IIterable indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : ((Java.Lang.Object)indices).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([BLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002435 RID: 9269 RVA: 0x00090C50 File Offset: 0x0008EE50
		[Register("slice", "([BLkotlin/ranges/IntRange;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> Slice(byte[] _this_slice, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([BLkotlin/ranges/IntRange;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002436 RID: 9270 RVA: 0x00090CF4 File Offset: 0x0008EEF4
		[Register("slice", "([CLjava/lang/Iterable;)Ljava/util/List;", "")]
		public unsafe static IList<Character> Slice(char[] _this_slice, IIterable indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : ((Java.Lang.Object)indices).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([CLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002437 RID: 9271 RVA: 0x00090D9C File Offset: 0x0008EF9C
		[Register("slice", "([CLkotlin/ranges/IntRange;)Ljava/util/List;", "")]
		public unsafe static IList<Character> Slice(char[] _this_slice, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([CLkotlin/ranges/IntRange;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002438 RID: 9272 RVA: 0x00090E40 File Offset: 0x0008F040
		[Register("slice", "([DLjava/lang/Iterable;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> Slice(double[] _this_slice, IIterable indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : ((Java.Lang.Object)indices).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([DLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002439 RID: 9273 RVA: 0x00090EE8 File Offset: 0x0008F0E8
		[Register("slice", "([DLkotlin/ranges/IntRange;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> Slice(double[] _this_slice, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([DLkotlin/ranges/IntRange;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600243A RID: 9274 RVA: 0x00090F8C File Offset: 0x0008F18C
		[Register("slice", "([FLjava/lang/Iterable;)Ljava/util/List;", "")]
		public unsafe static IList<Float> Slice(float[] _this_slice, IIterable indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : ((Java.Lang.Object)indices).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([FLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600243B RID: 9275 RVA: 0x00091034 File Offset: 0x0008F234
		[Register("slice", "([FLkotlin/ranges/IntRange;)Ljava/util/List;", "")]
		public unsafe static IList<Float> Slice(float[] _this_slice, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([FLkotlin/ranges/IntRange;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600243C RID: 9276 RVA: 0x000910D8 File Offset: 0x0008F2D8
		[Register("slice", "([ILjava/lang/Iterable;)Ljava/util/List;", "")]
		public unsafe static IList<Integer> Slice(int[] _this_slice, IIterable indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : ((Java.Lang.Object)indices).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([ILjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600243D RID: 9277 RVA: 0x00091180 File Offset: 0x0008F380
		[Register("slice", "([ILkotlin/ranges/IntRange;)Ljava/util/List;", "")]
		public unsafe static IList<Integer> Slice(int[] _this_slice, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([ILkotlin/ranges/IntRange;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600243E RID: 9278 RVA: 0x00091224 File Offset: 0x0008F424
		[Register("slice", "([JLjava/lang/Iterable;)Ljava/util/List;", "")]
		public unsafe static IList<Long> Slice(long[] _this_slice, IIterable indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : ((Java.Lang.Object)indices).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([JLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600243F RID: 9279 RVA: 0x000912CC File Offset: 0x0008F4CC
		[Register("slice", "([JLkotlin/ranges/IntRange;)Ljava/util/List;", "")]
		public unsafe static IList<Long> Slice(long[] _this_slice, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([JLkotlin/ranges/IntRange;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002440 RID: 9280 RVA: 0x00091370 File Offset: 0x0008F570
		[Register("slice", "([SLjava/lang/Iterable;)Ljava/util/List;", "")]
		public unsafe static IList<Short> Slice(short[] _this_slice, IIterable indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : ((Java.Lang.Object)indices).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([SLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002441 RID: 9281 RVA: 0x00091418 File Offset: 0x0008F618
		[Register("slice", "([SLkotlin/ranges/IntRange;)Ljava/util/List;", "")]
		public unsafe static IList<Short> Slice(short[] _this_slice, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_slice);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([SLkotlin/ranges/IntRange;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002442 RID: 9282 RVA: 0x000914BC File Offset: 0x0008F6BC
		[Register("slice", "([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList Slice(Java.Lang.Object[] _this_slice, IIterable indices)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_slice);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : ((Java.Lang.Object)indices).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002443 RID: 9283 RVA: 0x00091564 File Offset: 0x0008F764
		[Register("slice", "([Ljava/lang/Object;Lkotlin/ranges/IntRange;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList Slice(Java.Lang.Object[] _this_slice, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_slice);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("slice.([Ljava/lang/Object;Lkotlin/ranges/IntRange;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_slice != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_slice);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_slice);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002444 RID: 9284 RVA: 0x00091608 File Offset: 0x0008F808
		[Register("sliceArray", "([ZLjava/util/Collection;)[Z", "")]
		public unsafe static bool[] SliceArray(bool[] _this_sliceArray, ICollection<Integer> indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			IntPtr intPtr2 = JavaCollection<Integer>.ToLocalJniHandle(indices);
			bool[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (bool[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([ZLjava/util/Collection;)[Z", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(bool));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002445 RID: 9285 RVA: 0x000916BC File Offset: 0x0008F8BC
		[Register("sliceArray", "([ZLkotlin/ranges/IntRange;)[Z", "")]
		public unsafe static bool[] SliceArray(bool[] _this_sliceArray, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			bool[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = (bool[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([ZLkotlin/ranges/IntRange;)[Z", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(bool));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002446 RID: 9286 RVA: 0x00091770 File Offset: 0x0008F970
		[Register("sliceArray", "([BLjava/util/Collection;)[B", "")]
		public unsafe static byte[] SliceArray(byte[] _this_sliceArray, ICollection<Integer> indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			IntPtr intPtr2 = JavaCollection<Integer>.ToLocalJniHandle(indices);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([BLjava/util/Collection;)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002447 RID: 9287 RVA: 0x00091824 File Offset: 0x0008FA24
		[Register("sliceArray", "([BLkotlin/ranges/IntRange;)[B", "")]
		public unsafe static byte[] SliceArray(byte[] _this_sliceArray, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([BLkotlin/ranges/IntRange;)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002448 RID: 9288 RVA: 0x000918D8 File Offset: 0x0008FAD8
		[Register("sliceArray", "([CLjava/util/Collection;)[C", "")]
		public unsafe static char[] SliceArray(char[] _this_sliceArray, ICollection<Integer> indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			IntPtr intPtr2 = JavaCollection<Integer>.ToLocalJniHandle(indices);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([CLjava/util/Collection;)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002449 RID: 9289 RVA: 0x0009198C File Offset: 0x0008FB8C
		[Register("sliceArray", "([CLkotlin/ranges/IntRange;)[C", "")]
		public unsafe static char[] SliceArray(char[] _this_sliceArray, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([CLkotlin/ranges/IntRange;)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600244A RID: 9290 RVA: 0x00091A40 File Offset: 0x0008FC40
		[Register("sliceArray", "([DLjava/util/Collection;)[D", "")]
		public unsafe static double[] SliceArray(double[] _this_sliceArray, ICollection<Integer> indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			IntPtr intPtr2 = JavaCollection<Integer>.ToLocalJniHandle(indices);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([DLjava/util/Collection;)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600244B RID: 9291 RVA: 0x00091AF4 File Offset: 0x0008FCF4
		[Register("sliceArray", "([DLkotlin/ranges/IntRange;)[D", "")]
		public unsafe static double[] SliceArray(double[] _this_sliceArray, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([DLkotlin/ranges/IntRange;)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600244C RID: 9292 RVA: 0x00091BA8 File Offset: 0x0008FDA8
		[Register("sliceArray", "([FLjava/util/Collection;)[F", "")]
		public unsafe static float[] SliceArray(float[] _this_sliceArray, ICollection<Integer> indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			IntPtr intPtr2 = JavaCollection<Integer>.ToLocalJniHandle(indices);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([FLjava/util/Collection;)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600244D RID: 9293 RVA: 0x00091C5C File Offset: 0x0008FE5C
		[Register("sliceArray", "([FLkotlin/ranges/IntRange;)[F", "")]
		public unsafe static float[] SliceArray(float[] _this_sliceArray, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([FLkotlin/ranges/IntRange;)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600244E RID: 9294 RVA: 0x00091D10 File Offset: 0x0008FF10
		[Register("sliceArray", "([ILjava/util/Collection;)[I", "")]
		public unsafe static int[] SliceArray(int[] _this_sliceArray, ICollection<Integer> indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			IntPtr intPtr2 = JavaCollection<Integer>.ToLocalJniHandle(indices);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([ILjava/util/Collection;)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x0600244F RID: 9295 RVA: 0x00091DC4 File Offset: 0x0008FFC4
		[Register("sliceArray", "([ILkotlin/ranges/IntRange;)[I", "")]
		public unsafe static int[] SliceArray(int[] _this_sliceArray, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([ILkotlin/ranges/IntRange;)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002450 RID: 9296 RVA: 0x00091E78 File Offset: 0x00090078
		[Register("sliceArray", "([JLjava/util/Collection;)[J", "")]
		public unsafe static long[] SliceArray(long[] _this_sliceArray, ICollection<Integer> indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			IntPtr intPtr2 = JavaCollection<Integer>.ToLocalJniHandle(indices);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([JLjava/util/Collection;)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002451 RID: 9297 RVA: 0x00091F2C File Offset: 0x0009012C
		[Register("sliceArray", "([JLkotlin/ranges/IntRange;)[J", "")]
		public unsafe static long[] SliceArray(long[] _this_sliceArray, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([JLkotlin/ranges/IntRange;)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002452 RID: 9298 RVA: 0x00091FE0 File Offset: 0x000901E0
		[Register("sliceArray", "([SLjava/util/Collection;)[S", "")]
		public unsafe static short[] SliceArray(short[] _this_sliceArray, ICollection<Integer> indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			IntPtr intPtr2 = JavaCollection<Integer>.ToLocalJniHandle(indices);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([SLjava/util/Collection;)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002453 RID: 9299 RVA: 0x00092094 File Offset: 0x00090294
		[Register("sliceArray", "([SLkotlin/ranges/IntRange;)[S", "")]
		public unsafe static short[] SliceArray(short[] _this_sliceArray, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sliceArray);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([SLkotlin/ranges/IntRange;)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002454 RID: 9300 RVA: 0x00092148 File Offset: 0x00090348
		[Register("sliceArray", "([Ljava/lang/Object;Ljava/util/Collection;)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] SliceArray(Java.Lang.Object[] _this_sliceArray, ICollection<Integer> indices)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sliceArray);
			IntPtr intPtr2 = JavaCollection<Integer>.ToLocalJniHandle(indices);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([Ljava/lang/Object;Ljava/util/Collection;)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002455 RID: 9301 RVA: 0x000921FC File Offset: 0x000903FC
		[Register("sliceArray", "([Ljava/lang/Object;Lkotlin/ranges/IntRange;)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] SliceArray(Java.Lang.Object[] _this_sliceArray, IntRange indices)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sliceArray);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((indices == null) ? IntPtr.Zero : indices.Handle);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sliceArray.([Ljava/lang/Object;Lkotlin/ranges/IntRange;)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_sliceArray != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sliceArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sliceArray);
				GC.KeepAlive(indices);
			}
			return result;
		}

		// Token: 0x06002456 RID: 9302 RVA: 0x000922B0 File Offset: 0x000904B0
		[Register("sortBy", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static void SortBy(Java.Lang.Object[] _this_sortBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortBy);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortBy.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_sortBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortBy);
				GC.KeepAlive(selector);
			}
		}

		// Token: 0x06002457 RID: 9303 RVA: 0x00092348 File Offset: 0x00090548
		[Register("sortByDescending", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static void SortByDescending(Java.Lang.Object[] _this_sortByDescending, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortByDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortByDescending.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V", ptr);
			}
			finally
			{
				if (_this_sortByDescending != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortByDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortByDescending);
				GC.KeepAlive(selector);
			}
		}

		// Token: 0x06002458 RID: 9304 RVA: 0x000923E0 File Offset: 0x000905E0
		[Register("sortDescending", "([B)V", "")]
		public unsafe static void SortDescending(byte[] _this_sortDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([B)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x06002459 RID: 9305 RVA: 0x0009244C File Offset: 0x0009064C
		[Register("sortDescending", "([BII)V", "")]
		public unsafe static void SortDescending(byte[] _this_sortDescending, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([BII)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x0600245A RID: 9306 RVA: 0x000924E0 File Offset: 0x000906E0
		[Register("sortDescending", "([C)V", "")]
		public unsafe static void SortDescending(char[] _this_sortDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([C)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x0600245B RID: 9307 RVA: 0x0009254C File Offset: 0x0009074C
		[Register("sortDescending", "([CII)V", "")]
		public unsafe static void SortDescending(char[] _this_sortDescending, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([CII)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x0600245C RID: 9308 RVA: 0x000925E0 File Offset: 0x000907E0
		[Register("sortDescending", "([D)V", "")]
		public unsafe static void SortDescending(double[] _this_sortDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([D)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x0600245D RID: 9309 RVA: 0x0009264C File Offset: 0x0009084C
		[Register("sortDescending", "([DII)V", "")]
		public unsafe static void SortDescending(double[] _this_sortDescending, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([DII)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x0600245E RID: 9310 RVA: 0x000926E0 File Offset: 0x000908E0
		[Register("sortDescending", "([F)V", "")]
		public unsafe static void SortDescending(float[] _this_sortDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([F)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x0600245F RID: 9311 RVA: 0x0009274C File Offset: 0x0009094C
		[Register("sortDescending", "([FII)V", "")]
		public unsafe static void SortDescending(float[] _this_sortDescending, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([FII)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x06002460 RID: 9312 RVA: 0x000927E0 File Offset: 0x000909E0
		[Register("sortDescending", "([I)V", "")]
		public unsafe static void SortDescending(int[] _this_sortDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([I)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x06002461 RID: 9313 RVA: 0x0009284C File Offset: 0x00090A4C
		[Register("sortDescending", "([III)V", "")]
		public unsafe static void SortDescending(int[] _this_sortDescending, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([III)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x06002462 RID: 9314 RVA: 0x000928E0 File Offset: 0x00090AE0
		[Register("sortDescending", "([J)V", "")]
		public unsafe static void SortDescending(long[] _this_sortDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([J)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x06002463 RID: 9315 RVA: 0x0009294C File Offset: 0x00090B4C
		[Register("sortDescending", "([JII)V", "")]
		public unsafe static void SortDescending(long[] _this_sortDescending, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([JII)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x06002464 RID: 9316 RVA: 0x000929E0 File Offset: 0x00090BE0
		[Register("sortDescending", "([S)V", "")]
		public unsafe static void SortDescending(short[] _this_sortDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([S)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x06002465 RID: 9317 RVA: 0x00092A4C File Offset: 0x00090C4C
		[Register("sortDescending", "([SII)V", "")]
		public unsafe static void SortDescending(short[] _this_sortDescending, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([SII)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x06002466 RID: 9318 RVA: 0x00092AE0 File Offset: 0x00090CE0
		[Register("sortDescending", "([Ljava/lang/Comparable;)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		public unsafe static void SortDescending(Java.Lang.Object[] _this_sortDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([Ljava/lang/Comparable;)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x06002467 RID: 9319 RVA: 0x00092B4C File Offset: 0x00090D4C
		[Register("sortDescending", "([Ljava/lang/Comparable;II)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		public unsafe static void SortDescending(Java.Lang.Object[] _this_sortDescending, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortDescending);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortDescending.([Ljava/lang/Comparable;II)V", ptr);
			}
			finally
			{
				if (_this_sortDescending != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortDescending);
			}
		}

		// Token: 0x06002468 RID: 9320 RVA: 0x00092BE0 File Offset: 0x00090DE0
		[Register("sorted", "([B)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> Sorted(byte[] _this_sorted)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sorted);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sorted.([B)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sorted != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sorted);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sorted);
			}
			return result;
		}

		// Token: 0x06002469 RID: 9321 RVA: 0x00092C5C File Offset: 0x00090E5C
		[Register("sorted", "([C)Ljava/util/List;", "")]
		public unsafe static IList<Character> Sorted(char[] _this_sorted)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sorted);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sorted.([C)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sorted != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sorted);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sorted);
			}
			return result;
		}

		// Token: 0x0600246A RID: 9322 RVA: 0x00092CD8 File Offset: 0x00090ED8
		[Register("sorted", "([D)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> Sorted(double[] _this_sorted)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sorted);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sorted.([D)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sorted != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sorted);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sorted);
			}
			return result;
		}

		// Token: 0x0600246B RID: 9323 RVA: 0x00092D54 File Offset: 0x00090F54
		[Register("sorted", "([F)Ljava/util/List;", "")]
		public unsafe static IList<Float> Sorted(float[] _this_sorted)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sorted);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sorted.([F)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sorted != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sorted);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sorted);
			}
			return result;
		}

		// Token: 0x0600246C RID: 9324 RVA: 0x00092DD0 File Offset: 0x00090FD0
		[Register("sorted", "([I)Ljava/util/List;", "")]
		public unsafe static IList<Integer> Sorted(int[] _this_sorted)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sorted);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sorted.([I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sorted != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sorted);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sorted);
			}
			return result;
		}

		// Token: 0x0600246D RID: 9325 RVA: 0x00092E4C File Offset: 0x0009104C
		[Register("sorted", "([J)Ljava/util/List;", "")]
		public unsafe static IList<Long> Sorted(long[] _this_sorted)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sorted);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sorted.([J)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sorted != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sorted);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sorted);
			}
			return result;
		}

		// Token: 0x0600246E RID: 9326 RVA: 0x00092EC8 File Offset: 0x000910C8
		[Register("sorted", "([S)Ljava/util/List;", "")]
		public unsafe static IList<Short> Sorted(short[] _this_sorted)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sorted);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sorted.([S)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sorted != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sorted);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sorted);
			}
			return result;
		}

		// Token: 0x0600246F RID: 9327 RVA: 0x00092F44 File Offset: 0x00091144
		[Register("sorted", "([Ljava/lang/Comparable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		public unsafe static System.Collections.IList Sorted(Java.Lang.Object[] _this_sorted)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sorted);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sorted.([Ljava/lang/Comparable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sorted != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sorted);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sorted);
			}
			return result;
		}

		// Token: 0x06002470 RID: 9328 RVA: 0x00092FC0 File Offset: 0x000911C0
		[Register("sortedArray", "([B)[B", "")]
		public unsafe static byte[] SortedArray(byte[] _this_sortedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArray);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArray.([B)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_sortedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArray);
			}
			return result;
		}

		// Token: 0x06002471 RID: 9329 RVA: 0x0009304C File Offset: 0x0009124C
		[Register("sortedArray", "([C)[C", "")]
		public unsafe static char[] SortedArray(char[] _this_sortedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArray);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArray.([C)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_sortedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArray);
			}
			return result;
		}

		// Token: 0x06002472 RID: 9330 RVA: 0x000930D8 File Offset: 0x000912D8
		[Register("sortedArray", "([D)[D", "")]
		public unsafe static double[] SortedArray(double[] _this_sortedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArray);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArray.([D)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_sortedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArray);
			}
			return result;
		}

		// Token: 0x06002473 RID: 9331 RVA: 0x00093164 File Offset: 0x00091364
		[Register("sortedArray", "([F)[F", "")]
		public unsafe static float[] SortedArray(float[] _this_sortedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArray);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArray.([F)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_sortedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArray);
			}
			return result;
		}

		// Token: 0x06002474 RID: 9332 RVA: 0x000931F0 File Offset: 0x000913F0
		[Register("sortedArray", "([I)[I", "")]
		public unsafe static int[] SortedArray(int[] _this_sortedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArray);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArray.([I)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_sortedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArray);
			}
			return result;
		}

		// Token: 0x06002475 RID: 9333 RVA: 0x0009327C File Offset: 0x0009147C
		[Register("sortedArray", "([J)[J", "")]
		public unsafe static long[] SortedArray(long[] _this_sortedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArray);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArray.([J)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_sortedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArray);
			}
			return result;
		}

		// Token: 0x06002476 RID: 9334 RVA: 0x00093308 File Offset: 0x00091508
		[Register("sortedArray", "([S)[S", "")]
		public unsafe static short[] SortedArray(short[] _this_sortedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArray);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArray.([S)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_sortedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArray);
			}
			return result;
		}

		// Token: 0x06002477 RID: 9335 RVA: 0x00093394 File Offset: 0x00091594
		[Register("sortedArray", "([Ljava/lang/Comparable;)[Ljava/lang/Comparable;", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		public unsafe static Java.Lang.Object[] SortedArray(Java.Lang.Object[] _this_sortedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortedArray);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArray.([Ljava/lang/Comparable;)[Ljava/lang/Comparable;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_sortedArray != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArray);
			}
			return result;
		}

		// Token: 0x06002478 RID: 9336 RVA: 0x00093420 File Offset: 0x00091620
		[Register("sortedArrayDescending", "([B)[B", "")]
		public unsafe static byte[] SortedArrayDescending(byte[] _this_sortedArrayDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArrayDescending);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArrayDescending.([B)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_sortedArrayDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArrayDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArrayDescending);
			}
			return result;
		}

		// Token: 0x06002479 RID: 9337 RVA: 0x000934AC File Offset: 0x000916AC
		[Register("sortedArrayDescending", "([C)[C", "")]
		public unsafe static char[] SortedArrayDescending(char[] _this_sortedArrayDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArrayDescending);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArrayDescending.([C)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_sortedArrayDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArrayDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArrayDescending);
			}
			return result;
		}

		// Token: 0x0600247A RID: 9338 RVA: 0x00093538 File Offset: 0x00091738
		[Register("sortedArrayDescending", "([D)[D", "")]
		public unsafe static double[] SortedArrayDescending(double[] _this_sortedArrayDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArrayDescending);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArrayDescending.([D)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_sortedArrayDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArrayDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArrayDescending);
			}
			return result;
		}

		// Token: 0x0600247B RID: 9339 RVA: 0x000935C4 File Offset: 0x000917C4
		[Register("sortedArrayDescending", "([F)[F", "")]
		public unsafe static float[] SortedArrayDescending(float[] _this_sortedArrayDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArrayDescending);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArrayDescending.([F)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_sortedArrayDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArrayDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArrayDescending);
			}
			return result;
		}

		// Token: 0x0600247C RID: 9340 RVA: 0x00093650 File Offset: 0x00091850
		[Register("sortedArrayDescending", "([I)[I", "")]
		public unsafe static int[] SortedArrayDescending(int[] _this_sortedArrayDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArrayDescending);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArrayDescending.([I)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_sortedArrayDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArrayDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArrayDescending);
			}
			return result;
		}

		// Token: 0x0600247D RID: 9341 RVA: 0x000936DC File Offset: 0x000918DC
		[Register("sortedArrayDescending", "([J)[J", "")]
		public unsafe static long[] SortedArrayDescending(long[] _this_sortedArrayDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArrayDescending);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArrayDescending.([J)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_sortedArrayDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArrayDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArrayDescending);
			}
			return result;
		}

		// Token: 0x0600247E RID: 9342 RVA: 0x00093768 File Offset: 0x00091968
		[Register("sortedArrayDescending", "([S)[S", "")]
		public unsafe static short[] SortedArrayDescending(short[] _this_sortedArrayDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedArrayDescending);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArrayDescending.([S)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_sortedArrayDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedArrayDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArrayDescending);
			}
			return result;
		}

		// Token: 0x0600247F RID: 9343 RVA: 0x000937F4 File Offset: 0x000919F4
		[Register("sortedArrayDescending", "([Ljava/lang/Comparable;)[Ljava/lang/Comparable;", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		public unsafe static Java.Lang.Object[] SortedArrayDescending(Java.Lang.Object[] _this_sortedArrayDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortedArrayDescending);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArrayDescending.([Ljava/lang/Comparable;)[Ljava/lang/Comparable;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_sortedArrayDescending != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortedArrayDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArrayDescending);
			}
			return result;
		}

		// Token: 0x06002480 RID: 9344 RVA: 0x00093880 File Offset: 0x00091A80
		[Register("sortedArrayWith", "([Ljava/lang/Object;Ljava/util/Comparator;)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] SortedArrayWith(Java.Lang.Object[] _this_sortedArrayWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortedArrayWith);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedArrayWith.([Ljava/lang/Object;Ljava/util/Comparator;)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_sortedArrayWith != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortedArrayWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedArrayWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002481 RID: 9345 RVA: 0x00093938 File Offset: 0x00091B38
		[Register("sortedBy", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Java.Lang.Boolean> SortedBy(bool[] _this_sortedBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedBy);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedBy.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002482 RID: 9346 RVA: 0x000939E0 File Offset: 0x00091BE0
		[Register("sortedBy", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Java.Lang.Byte> SortedBy(byte[] _this_sortedBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedBy);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedBy.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002483 RID: 9347 RVA: 0x00093A88 File Offset: 0x00091C88
		[Register("sortedBy", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Character> SortedBy(char[] _this_sortedBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedBy);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedBy.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002484 RID: 9348 RVA: 0x00093B30 File Offset: 0x00091D30
		[Register("sortedBy", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Java.Lang.Double> SortedBy(double[] _this_sortedBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedBy);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedBy.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002485 RID: 9349 RVA: 0x00093BD8 File Offset: 0x00091DD8
		[Register("sortedBy", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Float> SortedBy(float[] _this_sortedBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedBy);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedBy.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002486 RID: 9350 RVA: 0x00093C80 File Offset: 0x00091E80
		[Register("sortedBy", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Integer> SortedBy(int[] _this_sortedBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedBy);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedBy.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002487 RID: 9351 RVA: 0x00093D28 File Offset: 0x00091F28
		[Register("sortedBy", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Long> SortedBy(long[] _this_sortedBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedBy);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedBy.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002488 RID: 9352 RVA: 0x00093DD0 File Offset: 0x00091FD0
		[Register("sortedBy", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Short> SortedBy(short[] _this_sortedBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedBy);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedBy.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002489 RID: 9353 RVA: 0x00093E78 File Offset: 0x00092078
		[Register("sortedBy", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static System.Collections.IList SortedBy(Java.Lang.Object[] _this_sortedBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortedBy);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedBy.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortedBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x0600248A RID: 9354 RVA: 0x00093F20 File Offset: 0x00092120
		[Register("sortedByDescending", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Java.Lang.Boolean> SortedByDescending(bool[] _this_sortedByDescending, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedByDescending);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedByDescending.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedByDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedByDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedByDescending);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x0600248B RID: 9355 RVA: 0x00093FC8 File Offset: 0x000921C8
		[Register("sortedByDescending", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Java.Lang.Byte> SortedByDescending(byte[] _this_sortedByDescending, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedByDescending);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedByDescending.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedByDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedByDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedByDescending);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x0600248C RID: 9356 RVA: 0x00094070 File Offset: 0x00092270
		[Register("sortedByDescending", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Character> SortedByDescending(char[] _this_sortedByDescending, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedByDescending);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedByDescending.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedByDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedByDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedByDescending);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x0600248D RID: 9357 RVA: 0x00094118 File Offset: 0x00092318
		[Register("sortedByDescending", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Java.Lang.Double> SortedByDescending(double[] _this_sortedByDescending, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedByDescending);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedByDescending.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedByDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedByDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedByDescending);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x0600248E RID: 9358 RVA: 0x000941C0 File Offset: 0x000923C0
		[Register("sortedByDescending", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Float> SortedByDescending(float[] _this_sortedByDescending, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedByDescending);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedByDescending.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedByDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedByDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedByDescending);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x0600248F RID: 9359 RVA: 0x00094268 File Offset: 0x00092468
		[Register("sortedByDescending", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Integer> SortedByDescending(int[] _this_sortedByDescending, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedByDescending);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedByDescending.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedByDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedByDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedByDescending);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002490 RID: 9360 RVA: 0x00094310 File Offset: 0x00092510
		[Register("sortedByDescending", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Long> SortedByDescending(long[] _this_sortedByDescending, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedByDescending);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedByDescending.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedByDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedByDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedByDescending);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002491 RID: 9361 RVA: 0x000943B8 File Offset: 0x000925B8
		[Register("sortedByDescending", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static IList<Short> SortedByDescending(short[] _this_sortedByDescending, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedByDescending);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedByDescending.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedByDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedByDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedByDescending);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002492 RID: 9362 RVA: 0x00094460 File Offset: 0x00092660
		[Register("sortedByDescending", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R extends java.lang.Comparable<? super R>"
		})]
		public unsafe static System.Collections.IList SortedByDescending(Java.Lang.Object[] _this_sortedByDescending, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortedByDescending);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedByDescending.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedByDescending != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortedByDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedByDescending);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x06002493 RID: 9363 RVA: 0x00094508 File Offset: 0x00092708
		[Register("sortedDescending", "([B)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> SortedDescending(byte[] _this_sortedDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedDescending);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedDescending.([B)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedDescending);
			}
			return result;
		}

		// Token: 0x06002494 RID: 9364 RVA: 0x00094584 File Offset: 0x00092784
		[Register("sortedDescending", "([C)Ljava/util/List;", "")]
		public unsafe static IList<Character> SortedDescending(char[] _this_sortedDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedDescending);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedDescending.([C)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedDescending);
			}
			return result;
		}

		// Token: 0x06002495 RID: 9365 RVA: 0x00094600 File Offset: 0x00092800
		[Register("sortedDescending", "([D)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> SortedDescending(double[] _this_sortedDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedDescending);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedDescending.([D)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedDescending);
			}
			return result;
		}

		// Token: 0x06002496 RID: 9366 RVA: 0x0009467C File Offset: 0x0009287C
		[Register("sortedDescending", "([F)Ljava/util/List;", "")]
		public unsafe static IList<Float> SortedDescending(float[] _this_sortedDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedDescending);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedDescending.([F)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedDescending);
			}
			return result;
		}

		// Token: 0x06002497 RID: 9367 RVA: 0x000946F8 File Offset: 0x000928F8
		[Register("sortedDescending", "([I)Ljava/util/List;", "")]
		public unsafe static IList<Integer> SortedDescending(int[] _this_sortedDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedDescending);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedDescending.([I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedDescending);
			}
			return result;
		}

		// Token: 0x06002498 RID: 9368 RVA: 0x00094774 File Offset: 0x00092974
		[Register("sortedDescending", "([J)Ljava/util/List;", "")]
		public unsafe static IList<Long> SortedDescending(long[] _this_sortedDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedDescending);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedDescending.([J)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedDescending);
			}
			return result;
		}

		// Token: 0x06002499 RID: 9369 RVA: 0x000947F0 File Offset: 0x000929F0
		[Register("sortedDescending", "([S)Ljava/util/List;", "")]
		public unsafe static IList<Short> SortedDescending(short[] _this_sortedDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedDescending);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedDescending.([S)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedDescending != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedDescending);
			}
			return result;
		}

		// Token: 0x0600249A RID: 9370 RVA: 0x0009486C File Offset: 0x00092A6C
		[Register("sortedDescending", "([Ljava/lang/Comparable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		public unsafe static System.Collections.IList SortedDescending(Java.Lang.Object[] _this_sortedDescending)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortedDescending);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedDescending.([Ljava/lang/Comparable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedDescending != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortedDescending);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedDescending);
			}
			return result;
		}

		// Token: 0x0600249B RID: 9371 RVA: 0x000948E8 File Offset: 0x00092AE8
		[Register("sortedWith", "([ZLjava/util/Comparator;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> SortedWith(bool[] _this_sortedWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedWith);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedWith.([ZLjava/util/Comparator;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x0600249C RID: 9372 RVA: 0x00094990 File Offset: 0x00092B90
		[Register("sortedWith", "([BLjava/util/Comparator;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> SortedWith(byte[] _this_sortedWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedWith);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedWith.([BLjava/util/Comparator;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x0600249D RID: 9373 RVA: 0x00094A38 File Offset: 0x00092C38
		[Register("sortedWith", "([CLjava/util/Comparator;)Ljava/util/List;", "")]
		public unsafe static IList<Character> SortedWith(char[] _this_sortedWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedWith);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedWith.([CLjava/util/Comparator;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x0600249E RID: 9374 RVA: 0x00094AE0 File Offset: 0x00092CE0
		[Register("sortedWith", "([DLjava/util/Comparator;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> SortedWith(double[] _this_sortedWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedWith);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedWith.([DLjava/util/Comparator;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x0600249F RID: 9375 RVA: 0x00094B88 File Offset: 0x00092D88
		[Register("sortedWith", "([FLjava/util/Comparator;)Ljava/util/List;", "")]
		public unsafe static IList<Float> SortedWith(float[] _this_sortedWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedWith);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedWith.([FLjava/util/Comparator;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x060024A0 RID: 9376 RVA: 0x00094C30 File Offset: 0x00092E30
		[Register("sortedWith", "([ILjava/util/Comparator;)Ljava/util/List;", "")]
		public unsafe static IList<Integer> SortedWith(int[] _this_sortedWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedWith);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedWith.([ILjava/util/Comparator;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x060024A1 RID: 9377 RVA: 0x00094CD8 File Offset: 0x00092ED8
		[Register("sortedWith", "([JLjava/util/Comparator;)Ljava/util/List;", "")]
		public unsafe static IList<Long> SortedWith(long[] _this_sortedWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedWith);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedWith.([JLjava/util/Comparator;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x060024A2 RID: 9378 RVA: 0x00094D80 File Offset: 0x00092F80
		[Register("sortedWith", "([SLjava/util/Comparator;)Ljava/util/List;", "")]
		public unsafe static IList<Short> SortedWith(short[] _this_sortedWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sortedWith);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedWith.([SLjava/util/Comparator;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedWith != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sortedWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x060024A3 RID: 9379 RVA: 0x00094E28 File Offset: 0x00093028
		[Register("sortedWith", "([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList SortedWith(Java.Lang.Object[] _this_sortedWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortedWith);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("sortedWith.([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_sortedWith != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortedWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortedWith);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x060024A4 RID: 9380 RVA: 0x00094ED0 File Offset: 0x000930D0
		[Register("subtract", "([ZLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Boolean> Subtract(bool[] _this_subtract, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_subtract);
			ICollection<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("subtract.([ZLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_subtract != null)
				{
					JNIEnv.CopyArray(intPtr, _this_subtract);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_subtract);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x060024A5 RID: 9381 RVA: 0x00094F78 File Offset: 0x00093178
		[Register("subtract", "([BLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Byte> Subtract(byte[] _this_subtract, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_subtract);
			ICollection<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("subtract.([BLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_subtract != null)
				{
					JNIEnv.CopyArray(intPtr, _this_subtract);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_subtract);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x060024A6 RID: 9382 RVA: 0x00095020 File Offset: 0x00093220
		[Register("subtract", "([CLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Character> Subtract(char[] _this_subtract, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_subtract);
			ICollection<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("subtract.([CLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_subtract != null)
				{
					JNIEnv.CopyArray(intPtr, _this_subtract);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_subtract);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x060024A7 RID: 9383 RVA: 0x000950C8 File Offset: 0x000932C8
		[Register("subtract", "([DLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Double> Subtract(double[] _this_subtract, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_subtract);
			ICollection<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("subtract.([DLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_subtract != null)
				{
					JNIEnv.CopyArray(intPtr, _this_subtract);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_subtract);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x060024A8 RID: 9384 RVA: 0x00095170 File Offset: 0x00093370
		[Register("subtract", "([FLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Float> Subtract(float[] _this_subtract, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_subtract);
			ICollection<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("subtract.([FLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_subtract != null)
				{
					JNIEnv.CopyArray(intPtr, _this_subtract);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_subtract);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x060024A9 RID: 9385 RVA: 0x00095218 File Offset: 0x00093418
		[Register("subtract", "([ILjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Integer> Subtract(int[] _this_subtract, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_subtract);
			ICollection<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("subtract.([ILjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_subtract != null)
				{
					JNIEnv.CopyArray(intPtr, _this_subtract);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_subtract);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x060024AA RID: 9386 RVA: 0x000952C0 File Offset: 0x000934C0
		[Register("subtract", "([JLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Long> Subtract(long[] _this_subtract, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_subtract);
			ICollection<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("subtract.([JLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_subtract != null)
				{
					JNIEnv.CopyArray(intPtr, _this_subtract);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_subtract);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x060024AB RID: 9387 RVA: 0x00095368 File Offset: 0x00093568
		[Register("subtract", "([SLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Short> Subtract(short[] _this_subtract, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_subtract);
			ICollection<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("subtract.([SLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_subtract != null)
				{
					JNIEnv.CopyArray(intPtr, _this_subtract);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_subtract);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x060024AC RID: 9388 RVA: 0x00095410 File Offset: 0x00093610
		[Register("subtract", "([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.ICollection Subtract(Java.Lang.Object[] _this_subtract, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_subtract);
			System.Collections.ICollection result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("subtract.([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_subtract != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_subtract);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_subtract);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x060024AD RID: 9389 RVA: 0x000954B8 File Offset: 0x000936B8
		[Register("sum", "([B)I", "")]
		public unsafe static int Sum(byte[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sum);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sum.([B)I", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024AE RID: 9390 RVA: 0x00095524 File Offset: 0x00093724
		[Register("sum", "([D)D", "")]
		public unsafe static double Sum(double[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sum);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sum.([D)D", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024AF RID: 9391 RVA: 0x00095590 File Offset: 0x00093790
		[Register("sum", "([F)F", "")]
		public unsafe static float Sum(float[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sum);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("sum.([F)F", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024B0 RID: 9392 RVA: 0x000955FC File Offset: 0x000937FC
		[Register("sum", "([I)I", "")]
		public unsafe static int Sum(int[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sum);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sum.([I)I", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024B1 RID: 9393 RVA: 0x00095668 File Offset: 0x00093868
		[Register("sum", "([J)J", "")]
		public unsafe static long Sum(long[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sum);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("sum.([J)J", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024B2 RID: 9394 RVA: 0x000956D4 File Offset: 0x000938D4
		[Register("sum", "([S)I", "")]
		public unsafe static int Sum(short[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sum);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sum.([S)I", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024B3 RID: 9395 RVA: 0x00095740 File Offset: 0x00093940
		[Obsolete("deprecated")]
		[Register("sumBy", "([ZLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int SumBy(bool[] _this_sumBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumBy.([ZLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_sumBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024B4 RID: 9396 RVA: 0x000957DC File Offset: 0x000939DC
		[Obsolete("deprecated")]
		[Register("sumBy", "([BLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int SumBy(byte[] _this_sumBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumBy.([BLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_sumBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024B5 RID: 9397 RVA: 0x00095878 File Offset: 0x00093A78
		[Obsolete("deprecated")]
		[Register("sumBy", "([CLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int SumBy(char[] _this_sumBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumBy.([CLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_sumBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024B6 RID: 9398 RVA: 0x00095914 File Offset: 0x00093B14
		[Obsolete("deprecated")]
		[Register("sumBy", "([DLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int SumBy(double[] _this_sumBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumBy.([DLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_sumBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024B7 RID: 9399 RVA: 0x000959B0 File Offset: 0x00093BB0
		[Obsolete("deprecated")]
		[Register("sumBy", "([FLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int SumBy(float[] _this_sumBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumBy.([FLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_sumBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024B8 RID: 9400 RVA: 0x00095A4C File Offset: 0x00093C4C
		[Obsolete("deprecated")]
		[Register("sumBy", "([ILkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int SumBy(int[] _this_sumBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumBy.([ILkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_sumBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024B9 RID: 9401 RVA: 0x00095AE8 File Offset: 0x00093CE8
		[Obsolete("deprecated")]
		[Register("sumBy", "([JLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int SumBy(long[] _this_sumBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumBy.([JLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_sumBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024BA RID: 9402 RVA: 0x00095B84 File Offset: 0x00093D84
		[Obsolete("deprecated")]
		[Register("sumBy", "([SLkotlin/jvm/functions/Function1;)I", "")]
		public unsafe static int SumBy(short[] _this_sumBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumBy.([SLkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_sumBy != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024BB RID: 9403 RVA: 0x00095C20 File Offset: 0x00093E20
		[Obsolete("deprecated")]
		[Register("sumBy", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static int SumBy(Java.Lang.Object[] _this_sumBy, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sumBy);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumBy.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)I", ptr);
			}
			finally
			{
				if (_this_sumBy != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sumBy);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumBy);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024BC RID: 9404 RVA: 0x00095CBC File Offset: 0x00093EBC
		[Obsolete("deprecated")]
		[Register("sumByDouble", "([ZLkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double SumByDouble(bool[] _this_sumByDouble, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumByDouble);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sumByDouble.([ZLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_sumByDouble != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumByDouble);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumByDouble);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024BD RID: 9405 RVA: 0x00095D58 File Offset: 0x00093F58
		[Obsolete("deprecated")]
		[Register("sumByDouble", "([BLkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double SumByDouble(byte[] _this_sumByDouble, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumByDouble);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sumByDouble.([BLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_sumByDouble != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumByDouble);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumByDouble);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024BE RID: 9406 RVA: 0x00095DF4 File Offset: 0x00093FF4
		[Obsolete("deprecated")]
		[Register("sumByDouble", "([CLkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double SumByDouble(char[] _this_sumByDouble, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumByDouble);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sumByDouble.([CLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_sumByDouble != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumByDouble);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumByDouble);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024BF RID: 9407 RVA: 0x00095E90 File Offset: 0x00094090
		[Obsolete("deprecated")]
		[Register("sumByDouble", "([DLkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double SumByDouble(double[] _this_sumByDouble, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumByDouble);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sumByDouble.([DLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_sumByDouble != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumByDouble);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumByDouble);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024C0 RID: 9408 RVA: 0x00095F2C File Offset: 0x0009412C
		[Obsolete("deprecated")]
		[Register("sumByDouble", "([FLkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double SumByDouble(float[] _this_sumByDouble, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumByDouble);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sumByDouble.([FLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_sumByDouble != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumByDouble);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumByDouble);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024C1 RID: 9409 RVA: 0x00095FC8 File Offset: 0x000941C8
		[Obsolete("deprecated")]
		[Register("sumByDouble", "([ILkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double SumByDouble(int[] _this_sumByDouble, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumByDouble);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sumByDouble.([ILkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_sumByDouble != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumByDouble);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumByDouble);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024C2 RID: 9410 RVA: 0x00096064 File Offset: 0x00094264
		[Obsolete("deprecated")]
		[Register("sumByDouble", "([JLkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double SumByDouble(long[] _this_sumByDouble, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumByDouble);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sumByDouble.([JLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_sumByDouble != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumByDouble);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumByDouble);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024C3 RID: 9411 RVA: 0x00096100 File Offset: 0x00094300
		[Obsolete("deprecated")]
		[Register("sumByDouble", "([SLkotlin/jvm/functions/Function1;)D", "")]
		public unsafe static double SumByDouble(short[] _this_sumByDouble, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sumByDouble);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sumByDouble.([SLkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_sumByDouble != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sumByDouble);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumByDouble);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024C4 RID: 9412 RVA: 0x0009619C File Offset: 0x0009439C
		[Obsolete("deprecated")]
		[Register("sumByDouble", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)D", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static double SumByDouble(Java.Lang.Object[] _this_sumByDouble, IFunction1 selector)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sumByDouble);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((selector == null) ? IntPtr.Zero : ((Java.Lang.Object)selector).Handle);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sumByDouble.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)D", ptr);
			}
			finally
			{
				if (_this_sumByDouble != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sumByDouble);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sumByDouble);
				GC.KeepAlive(selector);
			}
			return result;
		}

		// Token: 0x060024C5 RID: 9413 RVA: 0x00096238 File Offset: 0x00094438
		[Register("sumOfByte", "([Ljava/lang/Byte;)I", "")]
		public unsafe static int SumOfByte(Java.Lang.Byte[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Byte>(_this_sum);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumOfByte.([Ljava/lang/Byte;)I", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray<Java.Lang.Byte>(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024C6 RID: 9414 RVA: 0x000962A4 File Offset: 0x000944A4
		[Register("sumOfDouble", "([Ljava/lang/Double;)D", "")]
		public unsafe static double SumOfDouble(Java.Lang.Double[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Double>(_this_sum);
			double result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeDoubleMethod("sumOfDouble.([Ljava/lang/Double;)D", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray<Java.Lang.Double>(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024C7 RID: 9415 RVA: 0x00096310 File Offset: 0x00094510
		[Register("sumOfFloat", "([Ljava/lang/Float;)F", "")]
		public unsafe static float SumOfFloat(Float[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray<Float>(_this_sum);
			float result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeSingleMethod("sumOfFloat.([Ljava/lang/Float;)F", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray<Float>(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024C8 RID: 9416 RVA: 0x0009637C File Offset: 0x0009457C
		[Register("sumOfInt", "([Ljava/lang/Integer;)I", "")]
		public unsafe static int SumOfInt(Integer[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray<Integer>(_this_sum);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumOfInt.([Ljava/lang/Integer;)I", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray<Integer>(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024C9 RID: 9417 RVA: 0x000963E8 File Offset: 0x000945E8
		[Register("sumOfLong", "([Ljava/lang/Long;)J", "")]
		public unsafe static long SumOfLong(Long[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray<Long>(_this_sum);
			long result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt64Method("sumOfLong.([Ljava/lang/Long;)J", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray<Long>(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024CA RID: 9418 RVA: 0x00096454 File Offset: 0x00094654
		[Register("sumOfShort", "([Ljava/lang/Short;)I", "")]
		public unsafe static int SumOfShort(Short[] _this_sum)
		{
			IntPtr intPtr = JNIEnv.NewArray<Short>(_this_sum);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("sumOfShort.([Ljava/lang/Short;)I", ptr);
			}
			finally
			{
				if (_this_sum != null)
				{
					JNIEnv.CopyArray<Short>(intPtr, _this_sum);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sum);
			}
			return result;
		}

		// Token: 0x060024CB RID: 9419 RVA: 0x000964C0 File Offset: 0x000946C0
		[Register("take", "([ZI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> Take(bool[] _this_take, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_take);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("take.([ZI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_take != null)
				{
					JNIEnv.CopyArray(intPtr, _this_take);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_take);
			}
			return result;
		}

		// Token: 0x060024CC RID: 9420 RVA: 0x00096550 File Offset: 0x00094750
		[Register("take", "([BI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> Take(byte[] _this_take, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_take);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("take.([BI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_take != null)
				{
					JNIEnv.CopyArray(intPtr, _this_take);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_take);
			}
			return result;
		}

		// Token: 0x060024CD RID: 9421 RVA: 0x000965E0 File Offset: 0x000947E0
		[Register("take", "([CI)Ljava/util/List;", "")]
		public unsafe static IList<Character> Take(char[] _this_take, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_take);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("take.([CI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_take != null)
				{
					JNIEnv.CopyArray(intPtr, _this_take);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_take);
			}
			return result;
		}

		// Token: 0x060024CE RID: 9422 RVA: 0x00096670 File Offset: 0x00094870
		[Register("take", "([DI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> Take(double[] _this_take, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_take);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("take.([DI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_take != null)
				{
					JNIEnv.CopyArray(intPtr, _this_take);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_take);
			}
			return result;
		}

		// Token: 0x060024CF RID: 9423 RVA: 0x00096700 File Offset: 0x00094900
		[Register("take", "([FI)Ljava/util/List;", "")]
		public unsafe static IList<Float> Take(float[] _this_take, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_take);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("take.([FI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_take != null)
				{
					JNIEnv.CopyArray(intPtr, _this_take);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_take);
			}
			return result;
		}

		// Token: 0x060024D0 RID: 9424 RVA: 0x00096790 File Offset: 0x00094990
		[Register("take", "([II)Ljava/util/List;", "")]
		public unsafe static IList<Integer> Take(int[] _this_take, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_take);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("take.([II)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_take != null)
				{
					JNIEnv.CopyArray(intPtr, _this_take);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_take);
			}
			return result;
		}

		// Token: 0x060024D1 RID: 9425 RVA: 0x00096820 File Offset: 0x00094A20
		[Register("take", "([JI)Ljava/util/List;", "")]
		public unsafe static IList<Long> Take(long[] _this_take, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_take);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("take.([JI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_take != null)
				{
					JNIEnv.CopyArray(intPtr, _this_take);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_take);
			}
			return result;
		}

		// Token: 0x060024D2 RID: 9426 RVA: 0x000968B0 File Offset: 0x00094AB0
		[Register("take", "([SI)Ljava/util/List;", "")]
		public unsafe static IList<Short> Take(short[] _this_take, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_take);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("take.([SI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_take != null)
				{
					JNIEnv.CopyArray(intPtr, _this_take);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_take);
			}
			return result;
		}

		// Token: 0x060024D3 RID: 9427 RVA: 0x00096940 File Offset: 0x00094B40
		[Register("take", "([Ljava/lang/Object;I)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList Take(Java.Lang.Object[] _this_take, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_take);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("take.([Ljava/lang/Object;I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_take != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_take);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_take);
			}
			return result;
		}

		// Token: 0x060024D4 RID: 9428 RVA: 0x000969D0 File Offset: 0x00094BD0
		[Register("takeLast", "([ZI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> TakeLast(bool[] _this_takeLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLast);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLast.([ZI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLast);
			}
			return result;
		}

		// Token: 0x060024D5 RID: 9429 RVA: 0x00096A60 File Offset: 0x00094C60
		[Register("takeLast", "([BI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> TakeLast(byte[] _this_takeLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLast);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLast.([BI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLast);
			}
			return result;
		}

		// Token: 0x060024D6 RID: 9430 RVA: 0x00096AF0 File Offset: 0x00094CF0
		[Register("takeLast", "([CI)Ljava/util/List;", "")]
		public unsafe static IList<Character> TakeLast(char[] _this_takeLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLast);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLast.([CI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLast);
			}
			return result;
		}

		// Token: 0x060024D7 RID: 9431 RVA: 0x00096B80 File Offset: 0x00094D80
		[Register("takeLast", "([DI)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> TakeLast(double[] _this_takeLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLast);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLast.([DI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLast);
			}
			return result;
		}

		// Token: 0x060024D8 RID: 9432 RVA: 0x00096C10 File Offset: 0x00094E10
		[Register("takeLast", "([FI)Ljava/util/List;", "")]
		public unsafe static IList<Float> TakeLast(float[] _this_takeLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLast);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLast.([FI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLast);
			}
			return result;
		}

		// Token: 0x060024D9 RID: 9433 RVA: 0x00096CA0 File Offset: 0x00094EA0
		[Register("takeLast", "([II)Ljava/util/List;", "")]
		public unsafe static IList<Integer> TakeLast(int[] _this_takeLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLast);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLast.([II)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLast);
			}
			return result;
		}

		// Token: 0x060024DA RID: 9434 RVA: 0x00096D30 File Offset: 0x00094F30
		[Register("takeLast", "([JI)Ljava/util/List;", "")]
		public unsafe static IList<Long> TakeLast(long[] _this_takeLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLast);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLast.([JI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLast);
			}
			return result;
		}

		// Token: 0x060024DB RID: 9435 RVA: 0x00096DC0 File Offset: 0x00094FC0
		[Register("takeLast", "([SI)Ljava/util/List;", "")]
		public unsafe static IList<Short> TakeLast(short[] _this_takeLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLast);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLast.([SI)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLast != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLast);
			}
			return result;
		}

		// Token: 0x060024DC RID: 9436 RVA: 0x00096E50 File Offset: 0x00095050
		[Register("takeLast", "([Ljava/lang/Object;I)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList TakeLast(Java.Lang.Object[] _this_takeLast, int n)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_takeLast);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(n);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLast.([Ljava/lang/Object;I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLast != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_takeLast);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLast);
			}
			return result;
		}

		// Token: 0x060024DD RID: 9437 RVA: 0x00096EE0 File Offset: 0x000950E0
		[Register("takeLastWhile", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> TakeLastWhile(bool[] _this_takeLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLastWhile);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLastWhile.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024DE RID: 9438 RVA: 0x00096F88 File Offset: 0x00095188
		[Register("takeLastWhile", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> TakeLastWhile(byte[] _this_takeLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLastWhile);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLastWhile.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024DF RID: 9439 RVA: 0x00097030 File Offset: 0x00095230
		[Register("takeLastWhile", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Character> TakeLastWhile(char[] _this_takeLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLastWhile);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLastWhile.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024E0 RID: 9440 RVA: 0x000970D8 File Offset: 0x000952D8
		[Register("takeLastWhile", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> TakeLastWhile(double[] _this_takeLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLastWhile);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLastWhile.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024E1 RID: 9441 RVA: 0x00097180 File Offset: 0x00095380
		[Register("takeLastWhile", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Float> TakeLastWhile(float[] _this_takeLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLastWhile);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLastWhile.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024E2 RID: 9442 RVA: 0x00097228 File Offset: 0x00095428
		[Register("takeLastWhile", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Integer> TakeLastWhile(int[] _this_takeLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLastWhile);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLastWhile.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024E3 RID: 9443 RVA: 0x000972D0 File Offset: 0x000954D0
		[Register("takeLastWhile", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Long> TakeLastWhile(long[] _this_takeLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLastWhile);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLastWhile.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024E4 RID: 9444 RVA: 0x00097378 File Offset: 0x00095578
		[Register("takeLastWhile", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Short> TakeLastWhile(short[] _this_takeLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeLastWhile);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLastWhile.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLastWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024E5 RID: 9445 RVA: 0x00097420 File Offset: 0x00095620
		[Register("takeLastWhile", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList TakeLastWhile(Java.Lang.Object[] _this_takeLastWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_takeLastWhile);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeLastWhile.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeLastWhile != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_takeLastWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeLastWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024E6 RID: 9446 RVA: 0x000974C8 File Offset: 0x000956C8
		[Register("takeWhile", "([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> TakeWhile(bool[] _this_takeWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeWhile);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeWhile.([ZLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024E7 RID: 9447 RVA: 0x00097570 File Offset: 0x00095770
		[Register("takeWhile", "([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> TakeWhile(byte[] _this_takeWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeWhile);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeWhile.([BLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024E8 RID: 9448 RVA: 0x00097618 File Offset: 0x00095818
		[Register("takeWhile", "([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Character> TakeWhile(char[] _this_takeWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeWhile);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeWhile.([CLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024E9 RID: 9449 RVA: 0x000976C0 File Offset: 0x000958C0
		[Register("takeWhile", "([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> TakeWhile(double[] _this_takeWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeWhile);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeWhile.([DLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024EA RID: 9450 RVA: 0x00097768 File Offset: 0x00095968
		[Register("takeWhile", "([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Float> TakeWhile(float[] _this_takeWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeWhile);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeWhile.([FLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024EB RID: 9451 RVA: 0x00097810 File Offset: 0x00095A10
		[Register("takeWhile", "([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Integer> TakeWhile(int[] _this_takeWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeWhile);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeWhile.([ILkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024EC RID: 9452 RVA: 0x000978B8 File Offset: 0x00095AB8
		[Register("takeWhile", "([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Long> TakeWhile(long[] _this_takeWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeWhile);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeWhile.([JLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024ED RID: 9453 RVA: 0x00097960 File Offset: 0x00095B60
		[Register("takeWhile", "([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		public unsafe static IList<Short> TakeWhile(short[] _this_takeWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_takeWhile);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeWhile.([SLkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeWhile != null)
				{
					JNIEnv.CopyArray(intPtr, _this_takeWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024EE RID: 9454 RVA: 0x00097A08 File Offset: 0x00095C08
		[Register("takeWhile", "([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList TakeWhile(Java.Lang.Object[] _this_takeWhile, IFunction1 predicate)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_takeWhile);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((predicate == null) ? IntPtr.Zero : ((Java.Lang.Object)predicate).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("takeWhile.([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_takeWhile != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_takeWhile);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_takeWhile);
				GC.KeepAlive(predicate);
			}
			return result;
		}

		// Token: 0x060024EF RID: 9455 RVA: 0x00097AB0 File Offset: 0x00095CB0
		[Register("toBooleanArray", "([Ljava/lang/Boolean;)[Z", "")]
		public unsafe static bool[] ToBooleanArray(Java.Lang.Boolean[] _this_toBooleanArray)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Boolean>(_this_toBooleanArray);
			bool[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (bool[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toBooleanArray.([Ljava/lang/Boolean;)[Z", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(bool));
			}
			finally
			{
				if (_this_toBooleanArray != null)
				{
					JNIEnv.CopyArray<Java.Lang.Boolean>(intPtr, _this_toBooleanArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toBooleanArray);
			}
			return result;
		}

		// Token: 0x060024F0 RID: 9456 RVA: 0x00097B3C File Offset: 0x00095D3C
		[Register("toByteArray", "([Ljava/lang/Byte;)[B", "")]
		public unsafe static byte[] ToByteArray(Java.Lang.Byte[] _this_toByteArray)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Byte>(_this_toByteArray);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toByteArray.([Ljava/lang/Byte;)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_toByteArray != null)
				{
					JNIEnv.CopyArray<Java.Lang.Byte>(intPtr, _this_toByteArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toByteArray);
			}
			return result;
		}

		// Token: 0x060024F1 RID: 9457 RVA: 0x00097BC8 File Offset: 0x00095DC8
		[Register("toCharArray", "([Ljava/lang/Character;)[C", "")]
		public unsafe static char[] ToCharArray(Character[] _this_toCharArray)
		{
			IntPtr intPtr = JNIEnv.NewArray<Character>(_this_toCharArray);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toCharArray.([Ljava/lang/Character;)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_toCharArray != null)
				{
					JNIEnv.CopyArray<Character>(intPtr, _this_toCharArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toCharArray);
			}
			return result;
		}

		// Token: 0x060024F2 RID: 9458 RVA: 0x00097C54 File Offset: 0x00095E54
		[Register("toCollection", "([ZLjava/util/Collection;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Boolean>"
		})]
		public unsafe static Java.Lang.Object ToCollection(bool[] _this_toCollection, Java.Lang.Object destination)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toCollection);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toCollection.([ZLjava/util/Collection;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toCollection != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toCollection);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_toCollection);
				GC.KeepAlive(destination);
			}
			return @object;
		}

		// Token: 0x060024F3 RID: 9459 RVA: 0x00097CF8 File Offset: 0x00095EF8
		[Register("toCollection", "([BLjava/util/Collection;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Byte>"
		})]
		public unsafe static Java.Lang.Object ToCollection(byte[] _this_toCollection, Java.Lang.Object destination)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toCollection);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toCollection.([BLjava/util/Collection;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toCollection != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toCollection);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_toCollection);
				GC.KeepAlive(destination);
			}
			return @object;
		}

		// Token: 0x060024F4 RID: 9460 RVA: 0x00097D9C File Offset: 0x00095F9C
		[Register("toCollection", "([CLjava/util/Collection;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Character>"
		})]
		public unsafe static Java.Lang.Object ToCollection(char[] _this_toCollection, Java.Lang.Object destination)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toCollection);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toCollection.([CLjava/util/Collection;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toCollection != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toCollection);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_toCollection);
				GC.KeepAlive(destination);
			}
			return @object;
		}

		// Token: 0x060024F5 RID: 9461 RVA: 0x00097E40 File Offset: 0x00096040
		[Register("toCollection", "([DLjava/util/Collection;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Double>"
		})]
		public unsafe static Java.Lang.Object ToCollection(double[] _this_toCollection, Java.Lang.Object destination)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toCollection);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toCollection.([DLjava/util/Collection;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toCollection != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toCollection);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_toCollection);
				GC.KeepAlive(destination);
			}
			return @object;
		}

		// Token: 0x060024F6 RID: 9462 RVA: 0x00097EE4 File Offset: 0x000960E4
		[Register("toCollection", "([FLjava/util/Collection;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Float>"
		})]
		public unsafe static Java.Lang.Object ToCollection(float[] _this_toCollection, Java.Lang.Object destination)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toCollection);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toCollection.([FLjava/util/Collection;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toCollection != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toCollection);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_toCollection);
				GC.KeepAlive(destination);
			}
			return @object;
		}

		// Token: 0x060024F7 RID: 9463 RVA: 0x00097F88 File Offset: 0x00096188
		[Register("toCollection", "([ILjava/util/Collection;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Integer>"
		})]
		public unsafe static Java.Lang.Object ToCollection(int[] _this_toCollection, Java.Lang.Object destination)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toCollection);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toCollection.([ILjava/util/Collection;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toCollection != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toCollection);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_toCollection);
				GC.KeepAlive(destination);
			}
			return @object;
		}

		// Token: 0x060024F8 RID: 9464 RVA: 0x0009802C File Offset: 0x0009622C
		[Register("toCollection", "([JLjava/util/Collection;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Long>"
		})]
		public unsafe static Java.Lang.Object ToCollection(long[] _this_toCollection, Java.Lang.Object destination)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toCollection);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toCollection.([JLjava/util/Collection;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toCollection != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toCollection);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_toCollection);
				GC.KeepAlive(destination);
			}
			return @object;
		}

		// Token: 0x060024F9 RID: 9465 RVA: 0x000980D0 File Offset: 0x000962D0
		[Register("toCollection", "([SLjava/util/Collection;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super java.lang.Short>"
		})]
		public unsafe static Java.Lang.Object ToCollection(short[] _this_toCollection, Java.Lang.Object destination)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toCollection);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toCollection.([SLjava/util/Collection;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toCollection != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toCollection);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_toCollection);
				GC.KeepAlive(destination);
			}
			return @object;
		}

		// Token: 0x060024FA RID: 9466 RVA: 0x00098174 File Offset: 0x00096374
		[Register("toCollection", "([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"C extends java.util.Collection<? super T>"
		})]
		public unsafe static Java.Lang.Object ToCollection(Java.Lang.Object[] _this_toCollection, Java.Lang.Object destination)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_toCollection);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toCollection.([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toCollection != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_toCollection);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_toCollection);
				GC.KeepAlive(destination);
			}
			return @object;
		}

		// Token: 0x060024FB RID: 9467 RVA: 0x00098218 File Offset: 0x00096418
		[Register("toDoubleArray", "([Ljava/lang/Double;)[D", "")]
		public unsafe static double[] ToDoubleArray(Java.Lang.Double[] _this_toDoubleArray)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Double>(_this_toDoubleArray);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toDoubleArray.([Ljava/lang/Double;)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_toDoubleArray != null)
				{
					JNIEnv.CopyArray<Java.Lang.Double>(intPtr, _this_toDoubleArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toDoubleArray);
			}
			return result;
		}

		// Token: 0x060024FC RID: 9468 RVA: 0x000982A4 File Offset: 0x000964A4
		[Register("toFloatArray", "([Ljava/lang/Float;)[F", "")]
		public unsafe static float[] ToFloatArray(Float[] _this_toFloatArray)
		{
			IntPtr intPtr = JNIEnv.NewArray<Float>(_this_toFloatArray);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toFloatArray.([Ljava/lang/Float;)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_toFloatArray != null)
				{
					JNIEnv.CopyArray<Float>(intPtr, _this_toFloatArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toFloatArray);
			}
			return result;
		}

		// Token: 0x060024FD RID: 9469 RVA: 0x00098330 File Offset: 0x00096530
		[Register("toHashSet", "([Z)Ljava/util/HashSet;", "")]
		public unsafe static HashSet ToHashSet(bool[] _this_toHashSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toHashSet);
			HashSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<HashSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toHashSet.([Z)Ljava/util/HashSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toHashSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toHashSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toHashSet);
			}
			return @object;
		}

		// Token: 0x060024FE RID: 9470 RVA: 0x000983AC File Offset: 0x000965AC
		[Register("toHashSet", "([B)Ljava/util/HashSet;", "")]
		public unsafe static HashSet ToHashSet(byte[] _this_toHashSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toHashSet);
			HashSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<HashSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toHashSet.([B)Ljava/util/HashSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toHashSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toHashSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toHashSet);
			}
			return @object;
		}

		// Token: 0x060024FF RID: 9471 RVA: 0x00098428 File Offset: 0x00096628
		[Register("toHashSet", "([C)Ljava/util/HashSet;", "")]
		public unsafe static HashSet ToHashSet(char[] _this_toHashSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toHashSet);
			HashSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<HashSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toHashSet.([C)Ljava/util/HashSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toHashSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toHashSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toHashSet);
			}
			return @object;
		}

		// Token: 0x06002500 RID: 9472 RVA: 0x000984A4 File Offset: 0x000966A4
		[Register("toHashSet", "([D)Ljava/util/HashSet;", "")]
		public unsafe static HashSet ToHashSet(double[] _this_toHashSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toHashSet);
			HashSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<HashSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toHashSet.([D)Ljava/util/HashSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toHashSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toHashSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toHashSet);
			}
			return @object;
		}

		// Token: 0x06002501 RID: 9473 RVA: 0x00098520 File Offset: 0x00096720
		[Register("toHashSet", "([F)Ljava/util/HashSet;", "")]
		public unsafe static HashSet ToHashSet(float[] _this_toHashSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toHashSet);
			HashSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<HashSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toHashSet.([F)Ljava/util/HashSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toHashSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toHashSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toHashSet);
			}
			return @object;
		}

		// Token: 0x06002502 RID: 9474 RVA: 0x0009859C File Offset: 0x0009679C
		[Register("toHashSet", "([I)Ljava/util/HashSet;", "")]
		public unsafe static HashSet ToHashSet(int[] _this_toHashSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toHashSet);
			HashSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<HashSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toHashSet.([I)Ljava/util/HashSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toHashSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toHashSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toHashSet);
			}
			return @object;
		}

		// Token: 0x06002503 RID: 9475 RVA: 0x00098618 File Offset: 0x00096818
		[Register("toHashSet", "([J)Ljava/util/HashSet;", "")]
		public unsafe static HashSet ToHashSet(long[] _this_toHashSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toHashSet);
			HashSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<HashSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toHashSet.([J)Ljava/util/HashSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toHashSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toHashSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toHashSet);
			}
			return @object;
		}

		// Token: 0x06002504 RID: 9476 RVA: 0x00098694 File Offset: 0x00096894
		[Register("toHashSet", "([S)Ljava/util/HashSet;", "")]
		public unsafe static HashSet ToHashSet(short[] _this_toHashSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toHashSet);
			HashSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<HashSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toHashSet.([S)Ljava/util/HashSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toHashSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toHashSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toHashSet);
			}
			return @object;
		}

		// Token: 0x06002505 RID: 9477 RVA: 0x00098710 File Offset: 0x00096910
		[Register("toHashSet", "([Ljava/lang/Object;)Ljava/util/HashSet;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static HashSet ToHashSet(Java.Lang.Object[] _this_toHashSet)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_toHashSet);
			HashSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<HashSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toHashSet.([Ljava/lang/Object;)Ljava/util/HashSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toHashSet != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_toHashSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toHashSet);
			}
			return @object;
		}

		// Token: 0x06002506 RID: 9478 RVA: 0x0009878C File Offset: 0x0009698C
		[Register("toIntArray", "([Ljava/lang/Integer;)[I", "")]
		public unsafe static int[] ToIntArray(Integer[] _this_toIntArray)
		{
			IntPtr intPtr = JNIEnv.NewArray<Integer>(_this_toIntArray);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toIntArray.([Ljava/lang/Integer;)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_toIntArray != null)
				{
					JNIEnv.CopyArray<Integer>(intPtr, _this_toIntArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toIntArray);
			}
			return result;
		}

		// Token: 0x06002507 RID: 9479 RVA: 0x00098818 File Offset: 0x00096A18
		[Register("toList", "([Z)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> ToList(bool[] _this_toList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toList);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toList.([Z)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toList);
			}
			return result;
		}

		// Token: 0x06002508 RID: 9480 RVA: 0x00098894 File Offset: 0x00096A94
		[Register("toList", "([B)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> ToList(byte[] _this_toList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toList);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toList.([B)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toList);
			}
			return result;
		}

		// Token: 0x06002509 RID: 9481 RVA: 0x00098910 File Offset: 0x00096B10
		[Register("toList", "([C)Ljava/util/List;", "")]
		public unsafe static IList<Character> ToList(char[] _this_toList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toList);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toList.([C)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toList);
			}
			return result;
		}

		// Token: 0x0600250A RID: 9482 RVA: 0x0009898C File Offset: 0x00096B8C
		[Register("toList", "([D)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> ToList(double[] _this_toList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toList);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toList.([D)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toList);
			}
			return result;
		}

		// Token: 0x0600250B RID: 9483 RVA: 0x00098A08 File Offset: 0x00096C08
		[Register("toList", "([F)Ljava/util/List;", "")]
		public unsafe static IList<Float> ToList(float[] _this_toList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toList);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toList.([F)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toList);
			}
			return result;
		}

		// Token: 0x0600250C RID: 9484 RVA: 0x00098A84 File Offset: 0x00096C84
		[Register("toList", "([I)Ljava/util/List;", "")]
		public unsafe static IList<Integer> ToList(int[] _this_toList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toList);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toList.([I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toList);
			}
			return result;
		}

		// Token: 0x0600250D RID: 9485 RVA: 0x00098B00 File Offset: 0x00096D00
		[Register("toList", "([J)Ljava/util/List;", "")]
		public unsafe static IList<Long> ToList(long[] _this_toList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toList);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toList.([J)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toList);
			}
			return result;
		}

		// Token: 0x0600250E RID: 9486 RVA: 0x00098B7C File Offset: 0x00096D7C
		[Register("toList", "([S)Ljava/util/List;", "")]
		public unsafe static IList<Short> ToList(short[] _this_toList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toList);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toList.([S)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toList);
			}
			return result;
		}

		// Token: 0x0600250F RID: 9487 RVA: 0x00098BF8 File Offset: 0x00096DF8
		[Register("toList", "([Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList ToList(Java.Lang.Object[] _this_toList)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_toList);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toList.([Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toList != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_toList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toList);
			}
			return result;
		}

		// Token: 0x06002510 RID: 9488 RVA: 0x00098C74 File Offset: 0x00096E74
		[Register("toLongArray", "([Ljava/lang/Long;)[J", "")]
		public unsafe static long[] ToLongArray(Long[] _this_toLongArray)
		{
			IntPtr intPtr = JNIEnv.NewArray<Long>(_this_toLongArray);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toLongArray.([Ljava/lang/Long;)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_toLongArray != null)
				{
					JNIEnv.CopyArray<Long>(intPtr, _this_toLongArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toLongArray);
			}
			return result;
		}

		// Token: 0x06002511 RID: 9489 RVA: 0x00098D00 File Offset: 0x00096F00
		[Register("toMutableList", "([Z)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> ToMutableList(bool[] _this_toMutableList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableList);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableList.([Z)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableList);
			}
			return result;
		}

		// Token: 0x06002512 RID: 9490 RVA: 0x00098D7C File Offset: 0x00096F7C
		[Register("toMutableList", "([B)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> ToMutableList(byte[] _this_toMutableList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableList);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableList.([B)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableList);
			}
			return result;
		}

		// Token: 0x06002513 RID: 9491 RVA: 0x00098DF8 File Offset: 0x00096FF8
		[Register("toMutableList", "([C)Ljava/util/List;", "")]
		public unsafe static IList<Character> ToMutableList(char[] _this_toMutableList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableList);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableList.([C)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableList);
			}
			return result;
		}

		// Token: 0x06002514 RID: 9492 RVA: 0x00098E74 File Offset: 0x00097074
		[Register("toMutableList", "([D)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> ToMutableList(double[] _this_toMutableList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableList);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableList.([D)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableList);
			}
			return result;
		}

		// Token: 0x06002515 RID: 9493 RVA: 0x00098EF0 File Offset: 0x000970F0
		[Register("toMutableList", "([F)Ljava/util/List;", "")]
		public unsafe static IList<Float> ToMutableList(float[] _this_toMutableList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableList);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableList.([F)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableList);
			}
			return result;
		}

		// Token: 0x06002516 RID: 9494 RVA: 0x00098F6C File Offset: 0x0009716C
		[Register("toMutableList", "([I)Ljava/util/List;", "")]
		public unsafe static IList<Integer> ToMutableList(int[] _this_toMutableList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableList);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableList.([I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableList);
			}
			return result;
		}

		// Token: 0x06002517 RID: 9495 RVA: 0x00098FE8 File Offset: 0x000971E8
		[Register("toMutableList", "([J)Ljava/util/List;", "")]
		public unsafe static IList<Long> ToMutableList(long[] _this_toMutableList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableList);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableList.([J)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableList);
			}
			return result;
		}

		// Token: 0x06002518 RID: 9496 RVA: 0x00099064 File Offset: 0x00097264
		[Register("toMutableList", "([S)Ljava/util/List;", "")]
		public unsafe static IList<Short> ToMutableList(short[] _this_toMutableList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableList);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableList.([S)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableList);
			}
			return result;
		}

		// Token: 0x06002519 RID: 9497 RVA: 0x000990E0 File Offset: 0x000972E0
		[Register("toMutableList", "([Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList ToMutableList(Java.Lang.Object[] _this_toMutableList)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_toMutableList);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableList.([Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableList != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_toMutableList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableList);
			}
			return result;
		}

		// Token: 0x0600251A RID: 9498 RVA: 0x0009915C File Offset: 0x0009735C
		[Register("toMutableSet", "([Z)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Boolean> ToMutableSet(bool[] _this_toMutableSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableSet);
			ICollection<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableSet.([Z)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableSet);
			}
			return result;
		}

		// Token: 0x0600251B RID: 9499 RVA: 0x000991D8 File Offset: 0x000973D8
		[Register("toMutableSet", "([B)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Byte> ToMutableSet(byte[] _this_toMutableSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableSet);
			ICollection<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableSet.([B)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableSet);
			}
			return result;
		}

		// Token: 0x0600251C RID: 9500 RVA: 0x00099254 File Offset: 0x00097454
		[Register("toMutableSet", "([C)Ljava/util/Set;", "")]
		public unsafe static ICollection<Character> ToMutableSet(char[] _this_toMutableSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableSet);
			ICollection<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableSet.([C)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableSet);
			}
			return result;
		}

		// Token: 0x0600251D RID: 9501 RVA: 0x000992D0 File Offset: 0x000974D0
		[Register("toMutableSet", "([D)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Double> ToMutableSet(double[] _this_toMutableSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableSet);
			ICollection<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableSet.([D)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableSet);
			}
			return result;
		}

		// Token: 0x0600251E RID: 9502 RVA: 0x0009934C File Offset: 0x0009754C
		[Register("toMutableSet", "([F)Ljava/util/Set;", "")]
		public unsafe static ICollection<Float> ToMutableSet(float[] _this_toMutableSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableSet);
			ICollection<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableSet.([F)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableSet);
			}
			return result;
		}

		// Token: 0x0600251F RID: 9503 RVA: 0x000993C8 File Offset: 0x000975C8
		[Register("toMutableSet", "([I)Ljava/util/Set;", "")]
		public unsafe static ICollection<Integer> ToMutableSet(int[] _this_toMutableSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableSet);
			ICollection<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableSet.([I)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableSet);
			}
			return result;
		}

		// Token: 0x06002520 RID: 9504 RVA: 0x00099444 File Offset: 0x00097644
		[Register("toMutableSet", "([J)Ljava/util/Set;", "")]
		public unsafe static ICollection<Long> ToMutableSet(long[] _this_toMutableSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableSet);
			ICollection<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableSet.([J)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableSet);
			}
			return result;
		}

		// Token: 0x06002521 RID: 9505 RVA: 0x000994C0 File Offset: 0x000976C0
		[Register("toMutableSet", "([S)Ljava/util/Set;", "")]
		public unsafe static ICollection<Short> ToMutableSet(short[] _this_toMutableSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toMutableSet);
			ICollection<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableSet.([S)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toMutableSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableSet);
			}
			return result;
		}

		// Token: 0x06002522 RID: 9506 RVA: 0x0009953C File Offset: 0x0009773C
		[Register("toMutableSet", "([Ljava/lang/Object;)Ljava/util/Set;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.ICollection ToMutableSet(Java.Lang.Object[] _this_toMutableSet)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_toMutableSet);
			System.Collections.ICollection result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toMutableSet.([Ljava/lang/Object;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toMutableSet != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_toMutableSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toMutableSet);
			}
			return result;
		}

		// Token: 0x06002523 RID: 9507 RVA: 0x000995B8 File Offset: 0x000977B8
		[Register("toSet", "([Z)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Boolean> ToSet(bool[] _this_toSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSet);
			ICollection<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSet.([Z)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSet);
			}
			return result;
		}

		// Token: 0x06002524 RID: 9508 RVA: 0x00099634 File Offset: 0x00097834
		[Register("toSet", "([B)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Byte> ToSet(byte[] _this_toSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSet);
			ICollection<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSet.([B)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSet);
			}
			return result;
		}

		// Token: 0x06002525 RID: 9509 RVA: 0x000996B0 File Offset: 0x000978B0
		[Register("toSet", "([C)Ljava/util/Set;", "")]
		public unsafe static ICollection<Character> ToSet(char[] _this_toSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSet);
			ICollection<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSet.([C)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSet);
			}
			return result;
		}

		// Token: 0x06002526 RID: 9510 RVA: 0x0009972C File Offset: 0x0009792C
		[Register("toSet", "([D)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Double> ToSet(double[] _this_toSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSet);
			ICollection<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSet.([D)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSet);
			}
			return result;
		}

		// Token: 0x06002527 RID: 9511 RVA: 0x000997A8 File Offset: 0x000979A8
		[Register("toSet", "([F)Ljava/util/Set;", "")]
		public unsafe static ICollection<Float> ToSet(float[] _this_toSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSet);
			ICollection<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSet.([F)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSet);
			}
			return result;
		}

		// Token: 0x06002528 RID: 9512 RVA: 0x00099824 File Offset: 0x00097A24
		[Register("toSet", "([I)Ljava/util/Set;", "")]
		public unsafe static ICollection<Integer> ToSet(int[] _this_toSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSet);
			ICollection<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSet.([I)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSet);
			}
			return result;
		}

		// Token: 0x06002529 RID: 9513 RVA: 0x000998A0 File Offset: 0x00097AA0
		[Register("toSet", "([J)Ljava/util/Set;", "")]
		public unsafe static ICollection<Long> ToSet(long[] _this_toSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSet);
			ICollection<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSet.([J)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSet);
			}
			return result;
		}

		// Token: 0x0600252A RID: 9514 RVA: 0x0009991C File Offset: 0x00097B1C
		[Register("toSet", "([S)Ljava/util/Set;", "")]
		public unsafe static ICollection<Short> ToSet(short[] _this_toSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSet);
			ICollection<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSet.([S)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSet);
			}
			return result;
		}

		// Token: 0x0600252B RID: 9515 RVA: 0x00099998 File Offset: 0x00097B98
		[Register("toSet", "([Ljava/lang/Object;)Ljava/util/Set;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.ICollection ToSet(Java.Lang.Object[] _this_toSet)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_toSet);
			System.Collections.ICollection result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaSet.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSet.([Ljava/lang/Object;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSet != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_toSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSet);
			}
			return result;
		}

		// Token: 0x0600252C RID: 9516 RVA: 0x00099A14 File Offset: 0x00097C14
		[Register("toShortArray", "([Ljava/lang/Short;)[S", "")]
		public unsafe static short[] ToShortArray(Short[] _this_toShortArray)
		{
			IntPtr intPtr = JNIEnv.NewArray<Short>(_this_toShortArray);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toShortArray.([Ljava/lang/Short;)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_toShortArray != null)
				{
					JNIEnv.CopyArray<Short>(intPtr, _this_toShortArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toShortArray);
			}
			return result;
		}

		// Token: 0x0600252D RID: 9517 RVA: 0x00099AA0 File Offset: 0x00097CA0
		[Register("union", "([ZLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Boolean> Union(bool[] _this_union, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_union);
			ICollection<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("union.([ZLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_union != null)
				{
					JNIEnv.CopyArray(intPtr, _this_union);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_union);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600252E RID: 9518 RVA: 0x00099B48 File Offset: 0x00097D48
		[Register("union", "([BLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Byte> Union(byte[] _this_union, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_union);
			ICollection<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("union.([BLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_union != null)
				{
					JNIEnv.CopyArray(intPtr, _this_union);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_union);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600252F RID: 9519 RVA: 0x00099BF0 File Offset: 0x00097DF0
		[Register("union", "([CLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Character> Union(char[] _this_union, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_union);
			ICollection<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("union.([CLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_union != null)
				{
					JNIEnv.CopyArray(intPtr, _this_union);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_union);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002530 RID: 9520 RVA: 0x00099C98 File Offset: 0x00097E98
		[Register("union", "([DLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Java.Lang.Double> Union(double[] _this_union, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_union);
			ICollection<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("union.([DLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_union != null)
				{
					JNIEnv.CopyArray(intPtr, _this_union);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_union);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002531 RID: 9521 RVA: 0x00099D40 File Offset: 0x00097F40
		[Register("union", "([FLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Float> Union(float[] _this_union, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_union);
			ICollection<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("union.([FLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_union != null)
				{
					JNIEnv.CopyArray(intPtr, _this_union);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_union);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002532 RID: 9522 RVA: 0x00099DE8 File Offset: 0x00097FE8
		[Register("union", "([ILjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Integer> Union(int[] _this_union, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_union);
			ICollection<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("union.([ILjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_union != null)
				{
					JNIEnv.CopyArray(intPtr, _this_union);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_union);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002533 RID: 9523 RVA: 0x00099E90 File Offset: 0x00098090
		[Register("union", "([JLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Long> Union(long[] _this_union, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_union);
			ICollection<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("union.([JLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_union != null)
				{
					JNIEnv.CopyArray(intPtr, _this_union);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_union);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002534 RID: 9524 RVA: 0x00099F38 File Offset: 0x00098138
		[Register("union", "([SLjava/lang/Iterable;)Ljava/util/Set;", "")]
		public unsafe static ICollection<Short> Union(short[] _this_union, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_union);
			ICollection<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("union.([SLjava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_union != null)
				{
					JNIEnv.CopyArray(intPtr, _this_union);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_union);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002535 RID: 9525 RVA: 0x00099FE0 File Offset: 0x000981E0
		[Register("union", "([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.ICollection Union(Java.Lang.Object[] _this_union, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_union);
			System.Collections.ICollection result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaSet.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("union.([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_union != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_union);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_union);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002536 RID: 9526 RVA: 0x0009A088 File Offset: 0x00098288
		[Register("withIndex", "([Z)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable WithIndex(bool[] _this_withIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_withIndex);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("withIndex.([Z)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_withIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_withIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_withIndex);
			}
			return @object;
		}

		// Token: 0x06002537 RID: 9527 RVA: 0x0009A104 File Offset: 0x00098304
		[Register("withIndex", "([B)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable WithIndex(byte[] _this_withIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_withIndex);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("withIndex.([B)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_withIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_withIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_withIndex);
			}
			return @object;
		}

		// Token: 0x06002538 RID: 9528 RVA: 0x0009A180 File Offset: 0x00098380
		[Register("withIndex", "([C)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable WithIndex(char[] _this_withIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_withIndex);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("withIndex.([C)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_withIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_withIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_withIndex);
			}
			return @object;
		}

		// Token: 0x06002539 RID: 9529 RVA: 0x0009A1FC File Offset: 0x000983FC
		[Register("withIndex", "([D)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable WithIndex(double[] _this_withIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_withIndex);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("withIndex.([D)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_withIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_withIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_withIndex);
			}
			return @object;
		}

		// Token: 0x0600253A RID: 9530 RVA: 0x0009A278 File Offset: 0x00098478
		[Register("withIndex", "([F)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable WithIndex(float[] _this_withIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_withIndex);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("withIndex.([F)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_withIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_withIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_withIndex);
			}
			return @object;
		}

		// Token: 0x0600253B RID: 9531 RVA: 0x0009A2F4 File Offset: 0x000984F4
		[Register("withIndex", "([I)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable WithIndex(int[] _this_withIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_withIndex);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("withIndex.([I)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_withIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_withIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_withIndex);
			}
			return @object;
		}

		// Token: 0x0600253C RID: 9532 RVA: 0x0009A370 File Offset: 0x00098570
		[Register("withIndex", "([J)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable WithIndex(long[] _this_withIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_withIndex);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("withIndex.([J)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_withIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_withIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_withIndex);
			}
			return @object;
		}

		// Token: 0x0600253D RID: 9533 RVA: 0x0009A3EC File Offset: 0x000985EC
		[Register("withIndex", "([S)Ljava/lang/Iterable;", "")]
		public unsafe static IIterable WithIndex(short[] _this_withIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_withIndex);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("withIndex.([S)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_withIndex != null)
				{
					JNIEnv.CopyArray(intPtr, _this_withIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_withIndex);
			}
			return @object;
		}

		// Token: 0x0600253E RID: 9534 RVA: 0x0009A468 File Offset: 0x00098668
		[Register("withIndex", "([Ljava/lang/Object;)Ljava/lang/Iterable;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static IIterable WithIndex(Java.Lang.Object[] _this_withIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_withIndex);
			IIterable @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<IIterable>(ArraysKt._members.StaticMethods.InvokeObjectMethod("withIndex.([Ljava/lang/Object;)Ljava/lang/Iterable;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_withIndex != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_withIndex);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_withIndex);
			}
			return @object;
		}

		// Token: 0x0600253F RID: 9535 RVA: 0x0009A4E4 File Offset: 0x000986E4
		[Register("zip", "([Z[Z)Ljava/util/List;", "")]
		public unsafe static IList<Pair> Zip(bool[] _this_zip, bool[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			IList<Pair> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList<Pair>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([Z[Z)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002540 RID: 9536 RVA: 0x0009A590 File Offset: 0x00098790
		[Register("zip", "([Z[ZLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"V"
		})]
		public unsafe static System.Collections.IList Zip(bool[] _this_zip, bool[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([Z[ZLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002541 RID: 9537 RVA: 0x0009A66C File Offset: 0x0009886C
		[Register("zip", "([ZLjava/lang/Iterable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(bool[] _this_zip, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([ZLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002542 RID: 9538 RVA: 0x0009A714 File Offset: 0x00098914
		[Register("zip", "([ZLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(bool[] _this_zip, IIterable other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([ZLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002543 RID: 9539 RVA: 0x0009A7EC File Offset: 0x000989EC
		[Register("zip", "([Z[Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(bool[] _this_zip, Java.Lang.Object[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([Z[Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002544 RID: 9540 RVA: 0x0009A898 File Offset: 0x00098A98
		[Register("zip", "([Z[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(bool[] _this_zip, Java.Lang.Object[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([Z[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002545 RID: 9541 RVA: 0x0009A974 File Offset: 0x00098B74
		[Register("zip", "([B[B)Ljava/util/List;", "")]
		public unsafe static IList<Pair> Zip(byte[] _this_zip, byte[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			IList<Pair> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList<Pair>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([B[B)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002546 RID: 9542 RVA: 0x0009AA20 File Offset: 0x00098C20
		[Register("zip", "([B[BLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"V"
		})]
		public unsafe static System.Collections.IList Zip(byte[] _this_zip, byte[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([B[BLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002547 RID: 9543 RVA: 0x0009AAFC File Offset: 0x00098CFC
		[Register("zip", "([BLjava/lang/Iterable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(byte[] _this_zip, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([BLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002548 RID: 9544 RVA: 0x0009ABA4 File Offset: 0x00098DA4
		[Register("zip", "([BLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(byte[] _this_zip, IIterable other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([BLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002549 RID: 9545 RVA: 0x0009AC7C File Offset: 0x00098E7C
		[Register("zip", "([B[Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(byte[] _this_zip, Java.Lang.Object[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([B[Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600254A RID: 9546 RVA: 0x0009AD28 File Offset: 0x00098F28
		[Register("zip", "([B[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(byte[] _this_zip, Java.Lang.Object[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([B[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x0600254B RID: 9547 RVA: 0x0009AE04 File Offset: 0x00099004
		[Register("zip", "([C[C)Ljava/util/List;", "")]
		public unsafe static IList<Pair> Zip(char[] _this_zip, char[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			IList<Pair> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList<Pair>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([C[C)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600254C RID: 9548 RVA: 0x0009AEB0 File Offset: 0x000990B0
		[Register("zip", "([C[CLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"V"
		})]
		public unsafe static System.Collections.IList Zip(char[] _this_zip, char[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([C[CLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x0600254D RID: 9549 RVA: 0x0009AF8C File Offset: 0x0009918C
		[Register("zip", "([CLjava/lang/Iterable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(char[] _this_zip, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([CLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600254E RID: 9550 RVA: 0x0009B034 File Offset: 0x00099234
		[Register("zip", "([CLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(char[] _this_zip, IIterable other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([CLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x0600254F RID: 9551 RVA: 0x0009B10C File Offset: 0x0009930C
		[Register("zip", "([C[Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(char[] _this_zip, Java.Lang.Object[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([C[Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002550 RID: 9552 RVA: 0x0009B1B8 File Offset: 0x000993B8
		[Register("zip", "([C[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(char[] _this_zip, Java.Lang.Object[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([C[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002551 RID: 9553 RVA: 0x0009B294 File Offset: 0x00099494
		[Register("zip", "([D[D)Ljava/util/List;", "")]
		public unsafe static IList<Pair> Zip(double[] _this_zip, double[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			IList<Pair> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList<Pair>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([D[D)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002552 RID: 9554 RVA: 0x0009B340 File Offset: 0x00099540
		[Register("zip", "([D[DLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"V"
		})]
		public unsafe static System.Collections.IList Zip(double[] _this_zip, double[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([D[DLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002553 RID: 9555 RVA: 0x0009B41C File Offset: 0x0009961C
		[Register("zip", "([DLjava/lang/Iterable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(double[] _this_zip, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([DLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002554 RID: 9556 RVA: 0x0009B4C4 File Offset: 0x000996C4
		[Register("zip", "([DLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(double[] _this_zip, IIterable other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([DLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002555 RID: 9557 RVA: 0x0009B59C File Offset: 0x0009979C
		[Register("zip", "([D[Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(double[] _this_zip, Java.Lang.Object[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([D[Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002556 RID: 9558 RVA: 0x0009B648 File Offset: 0x00099848
		[Register("zip", "([D[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(double[] _this_zip, Java.Lang.Object[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([D[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002557 RID: 9559 RVA: 0x0009B724 File Offset: 0x00099924
		[Register("zip", "([F[F)Ljava/util/List;", "")]
		public unsafe static IList<Pair> Zip(float[] _this_zip, float[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			IList<Pair> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList<Pair>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([F[F)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002558 RID: 9560 RVA: 0x0009B7D0 File Offset: 0x000999D0
		[Register("zip", "([F[FLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"V"
		})]
		public unsafe static System.Collections.IList Zip(float[] _this_zip, float[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([F[FLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002559 RID: 9561 RVA: 0x0009B8AC File Offset: 0x00099AAC
		[Register("zip", "([FLjava/lang/Iterable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(float[] _this_zip, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([FLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600255A RID: 9562 RVA: 0x0009B954 File Offset: 0x00099B54
		[Register("zip", "([FLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(float[] _this_zip, IIterable other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([FLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x0600255B RID: 9563 RVA: 0x0009BA2C File Offset: 0x00099C2C
		[Register("zip", "([F[Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(float[] _this_zip, Java.Lang.Object[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([F[Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600255C RID: 9564 RVA: 0x0009BAD8 File Offset: 0x00099CD8
		[Register("zip", "([F[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(float[] _this_zip, Java.Lang.Object[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([F[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x0600255D RID: 9565 RVA: 0x0009BBB4 File Offset: 0x00099DB4
		[Register("zip", "([I[I)Ljava/util/List;", "")]
		public unsafe static IList<Pair> Zip(int[] _this_zip, int[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			IList<Pair> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList<Pair>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([I[I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600255E RID: 9566 RVA: 0x0009BC60 File Offset: 0x00099E60
		[Register("zip", "([I[ILkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"V"
		})]
		public unsafe static System.Collections.IList Zip(int[] _this_zip, int[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([I[ILkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x0600255F RID: 9567 RVA: 0x0009BD3C File Offset: 0x00099F3C
		[Register("zip", "([ILjava/lang/Iterable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(int[] _this_zip, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([ILjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002560 RID: 9568 RVA: 0x0009BDE4 File Offset: 0x00099FE4
		[Register("zip", "([ILjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(int[] _this_zip, IIterable other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([ILjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002561 RID: 9569 RVA: 0x0009BEBC File Offset: 0x0009A0BC
		[Register("zip", "([I[Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(int[] _this_zip, Java.Lang.Object[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([I[Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002562 RID: 9570 RVA: 0x0009BF68 File Offset: 0x0009A168
		[Register("zip", "([I[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(int[] _this_zip, Java.Lang.Object[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([I[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002563 RID: 9571 RVA: 0x0009C044 File Offset: 0x0009A244
		[Register("zip", "([JLjava/lang/Iterable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(long[] _this_zip, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([JLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002564 RID: 9572 RVA: 0x0009C0EC File Offset: 0x0009A2EC
		[Register("zip", "([JLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(long[] _this_zip, IIterable other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([JLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002565 RID: 9573 RVA: 0x0009C1C4 File Offset: 0x0009A3C4
		[Register("zip", "([J[J)Ljava/util/List;", "")]
		public unsafe static IList<Pair> Zip(long[] _this_zip, long[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			IList<Pair> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList<Pair>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([J[J)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002566 RID: 9574 RVA: 0x0009C270 File Offset: 0x0009A470
		[Register("zip", "([J[JLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"V"
		})]
		public unsafe static System.Collections.IList Zip(long[] _this_zip, long[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([J[JLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002567 RID: 9575 RVA: 0x0009C34C File Offset: 0x0009A54C
		[Register("zip", "([J[Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(long[] _this_zip, Java.Lang.Object[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([J[Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002568 RID: 9576 RVA: 0x0009C3F8 File Offset: 0x0009A5F8
		[Register("zip", "([J[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(long[] _this_zip, Java.Lang.Object[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([J[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002569 RID: 9577 RVA: 0x0009C4D4 File Offset: 0x0009A6D4
		[Register("zip", "([SLjava/lang/Iterable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(short[] _this_zip, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([SLjava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600256A RID: 9578 RVA: 0x0009C57C File Offset: 0x0009A77C
		[Register("zip", "([SLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(short[] _this_zip, IIterable other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([SLjava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x0600256B RID: 9579 RVA: 0x0009C654 File Offset: 0x0009A854
		[Register("zip", "([S[Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList Zip(short[] _this_zip, Java.Lang.Object[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([S[Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600256C RID: 9580 RVA: 0x0009C700 File Offset: 0x0009A900
		[Register("zip", "([S[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(short[] _this_zip, Java.Lang.Object[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([S[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x0600256D RID: 9581 RVA: 0x0009C7DC File Offset: 0x0009A9DC
		[Register("zip", "([S[S)Ljava/util/List;", "")]
		public unsafe static IList<Pair> Zip(short[] _this_zip, short[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			IList<Pair> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList<Pair>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([S[S)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x0600256E RID: 9582 RVA: 0x0009C888 File Offset: 0x0009AA88
		[Register("zip", "([S[SLkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"V"
		})]
		public unsafe static System.Collections.IList Zip(short[] _this_zip, short[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([S[SLkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x0600256F RID: 9583 RVA: 0x0009C964 File Offset: 0x0009AB64
		[Register("zip", "([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList Zip(Java.Lang.Object[] _this_zip, IIterable other)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002570 RID: 9584 RVA: 0x0009CA0C File Offset: 0x0009AC0C
		[Register("zip", "([Ljava/lang/Object;Ljava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(Java.Lang.Object[] _this_zip, IIterable other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_zip);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((other == null) ? IntPtr.Zero : ((Java.Lang.Object)other).Handle);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([Ljava/lang/Object;Ljava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002571 RID: 9585 RVA: 0x0009CAE4 File Offset: 0x0009ACE4
		[Register("zip", "([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static System.Collections.IList Zip(Java.Lang.Object[] _this_zip, Java.Lang.Object[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x06002572 RID: 9586 RVA: 0x0009CB90 File Offset: 0x0009AD90
		[Register("zip", "([Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R",
			"V"
		})]
		public unsafe static System.Collections.IList Zip(Java.Lang.Object[] _this_zip, Java.Lang.Object[] other, IFunction2 transform)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_zip);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((transform == null) ? IntPtr.Zero : ((Java.Lang.Object)transform).Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("zip.([Ljava/lang/Object;[Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_zip != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_zip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_zip);
				GC.KeepAlive(other);
				GC.KeepAlive(transform);
			}
			return result;
		}

		// Token: 0x06002573 RID: 9587 RVA: 0x0009CC6C File Offset: 0x0009AE6C
		[Register("asList", "([Z)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Boolean> AsList(bool[] _this_asList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asList);
			IList<Java.Lang.Boolean> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Boolean>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("asList.([Z)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asList);
			}
			return result;
		}

		// Token: 0x06002574 RID: 9588 RVA: 0x0009CCE8 File Offset: 0x0009AEE8
		[Register("asList", "([B)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Byte> AsList(byte[] _this_asList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asList);
			IList<Java.Lang.Byte> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Byte>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("asList.([B)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asList);
			}
			return result;
		}

		// Token: 0x06002575 RID: 9589 RVA: 0x0009CD64 File Offset: 0x0009AF64
		[Register("asList", "([C)Ljava/util/List;", "")]
		public unsafe static IList<Character> AsList(char[] _this_asList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asList);
			IList<Character> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Character>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("asList.([C)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asList);
			}
			return result;
		}

		// Token: 0x06002576 RID: 9590 RVA: 0x0009CDE0 File Offset: 0x0009AFE0
		[Register("asList", "([D)Ljava/util/List;", "")]
		public unsafe static IList<Java.Lang.Double> AsList(double[] _this_asList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asList);
			IList<Java.Lang.Double> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Java.Lang.Double>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("asList.([D)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asList);
			}
			return result;
		}

		// Token: 0x06002577 RID: 9591 RVA: 0x0009CE5C File Offset: 0x0009B05C
		[Register("asList", "([F)Ljava/util/List;", "")]
		public unsafe static IList<Float> AsList(float[] _this_asList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asList);
			IList<Float> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Float>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("asList.([F)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asList);
			}
			return result;
		}

		// Token: 0x06002578 RID: 9592 RVA: 0x0009CED8 File Offset: 0x0009B0D8
		[Register("asList", "([I)Ljava/util/List;", "")]
		public unsafe static IList<Integer> AsList(int[] _this_asList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asList);
			IList<Integer> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Integer>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("asList.([I)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asList);
			}
			return result;
		}

		// Token: 0x06002579 RID: 9593 RVA: 0x0009CF54 File Offset: 0x0009B154
		[Register("asList", "([J)Ljava/util/List;", "")]
		public unsafe static IList<Long> AsList(long[] _this_asList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asList);
			IList<Long> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Long>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("asList.([J)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asList);
			}
			return result;
		}

		// Token: 0x0600257A RID: 9594 RVA: 0x0009CFD0 File Offset: 0x0009B1D0
		[Register("asList", "([S)Ljava/util/List;", "")]
		public unsafe static IList<Short> AsList(short[] _this_asList)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_asList);
			IList<Short> result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList<Short>.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("asList.([S)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asList != null)
				{
					JNIEnv.CopyArray(intPtr, _this_asList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asList);
			}
			return result;
		}

		// Token: 0x0600257B RID: 9595 RVA: 0x0009D04C File Offset: 0x0009B24C
		[Register("asList", "([Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList AsList(Java.Lang.Object[] _this_asList)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_asList);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("asList.([Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_asList != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_asList);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_asList);
			}
			return result;
		}

		// Token: 0x0600257C RID: 9596 RVA: 0x0009D0C8 File Offset: 0x0009B2C8
		[Register("binarySearch", "([BBII)I", "")]
		public unsafe static int BinarySearch(byte[] _this_binarySearch, sbyte element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_binarySearch);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("binarySearch.([BBII)I", ptr);
			}
			finally
			{
				if (_this_binarySearch != null)
				{
					JNIEnv.CopyArray(intPtr, _this_binarySearch);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_binarySearch);
			}
			return result;
		}

		// Token: 0x0600257D RID: 9597 RVA: 0x0009D174 File Offset: 0x0009B374
		[Register("binarySearch", "([CCII)I", "")]
		public unsafe static int BinarySearch(char[] _this_binarySearch, char element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_binarySearch);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("binarySearch.([CCII)I", ptr);
			}
			finally
			{
				if (_this_binarySearch != null)
				{
					JNIEnv.CopyArray(intPtr, _this_binarySearch);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_binarySearch);
			}
			return result;
		}

		// Token: 0x0600257E RID: 9598 RVA: 0x0009D220 File Offset: 0x0009B420
		[Register("binarySearch", "([DDII)I", "")]
		public unsafe static int BinarySearch(double[] _this_binarySearch, double element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_binarySearch);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("binarySearch.([DDII)I", ptr);
			}
			finally
			{
				if (_this_binarySearch != null)
				{
					JNIEnv.CopyArray(intPtr, _this_binarySearch);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_binarySearch);
			}
			return result;
		}

		// Token: 0x0600257F RID: 9599 RVA: 0x0009D2CC File Offset: 0x0009B4CC
		[Register("binarySearch", "([FFII)I", "")]
		public unsafe static int BinarySearch(float[] _this_binarySearch, float element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_binarySearch);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("binarySearch.([FFII)I", ptr);
			}
			finally
			{
				if (_this_binarySearch != null)
				{
					JNIEnv.CopyArray(intPtr, _this_binarySearch);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_binarySearch);
			}
			return result;
		}

		// Token: 0x06002580 RID: 9600 RVA: 0x0009D378 File Offset: 0x0009B578
		[Register("binarySearch", "([IIII)I", "")]
		public unsafe static int BinarySearch(int[] _this_binarySearch, int element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_binarySearch);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("binarySearch.([IIII)I", ptr);
			}
			finally
			{
				if (_this_binarySearch != null)
				{
					JNIEnv.CopyArray(intPtr, _this_binarySearch);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_binarySearch);
			}
			return result;
		}

		// Token: 0x06002581 RID: 9601 RVA: 0x0009D424 File Offset: 0x0009B624
		[Register("binarySearch", "([JJII)I", "")]
		public unsafe static int BinarySearch(long[] _this_binarySearch, long element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_binarySearch);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("binarySearch.([JJII)I", ptr);
			}
			finally
			{
				if (_this_binarySearch != null)
				{
					JNIEnv.CopyArray(intPtr, _this_binarySearch);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_binarySearch);
			}
			return result;
		}

		// Token: 0x06002582 RID: 9602 RVA: 0x0009D4D0 File Offset: 0x0009B6D0
		[Register("binarySearch", "([SSII)I", "")]
		public unsafe static int BinarySearch(short[] _this_binarySearch, short element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_binarySearch);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("binarySearch.([SSII)I", ptr);
			}
			finally
			{
				if (_this_binarySearch != null)
				{
					JNIEnv.CopyArray(intPtr, _this_binarySearch);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_binarySearch);
			}
			return result;
		}

		// Token: 0x06002583 RID: 9603 RVA: 0x0009D57C File Offset: 0x0009B77C
		[Register("binarySearch", "([Ljava/lang/Object;Ljava/lang/Object;II)I", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static int BinarySearch(Java.Lang.Object[] _this_binarySearch, [Nullable(2)] Java.Lang.Object element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_binarySearch);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(element);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("binarySearch.([Ljava/lang/Object;Ljava/lang/Object;II)I", ptr);
			}
			finally
			{
				if (_this_binarySearch != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_binarySearch);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_binarySearch);
				GC.KeepAlive(element);
			}
			return result;
		}

		// Token: 0x06002584 RID: 9604 RVA: 0x0009D63C File Offset: 0x0009B83C
		[Register("binarySearch", "([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;II)I", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static int BinarySearch(Java.Lang.Object[] _this_binarySearch, [Nullable(2)] Java.Lang.Object element, IComparator comparator, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_binarySearch);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(element);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)5) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				ptr[3] = new JniArgumentValue(fromIndex);
				ptr[4] = new JniArgumentValue(toIndex);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("binarySearch.([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;II)I", ptr);
			}
			finally
			{
				if (_this_binarySearch != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_binarySearch);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_binarySearch);
				GC.KeepAlive(element);
				GC.KeepAlive(comparator);
			}
			return result;
		}

		// Token: 0x06002585 RID: 9605 RVA: 0x0009D72C File Offset: 0x0009B92C
		[Register("copyInto", "([Z[ZIII)[Z", "")]
		public unsafe static bool[] CopyInto(bool[] _this_copyInto, bool[] destination, int destinationOffset, int startIndex, int endIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyInto);
			IntPtr intPtr2 = JNIEnv.NewArray(destination);
			bool[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)5) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(destinationOffset);
				ptr[3] = new JniArgumentValue(startIndex);
				ptr[4] = new JniArgumentValue(endIndex);
				result = (bool[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyInto.([Z[ZIII)[Z", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(bool));
			}
			finally
			{
				if (_this_copyInto != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyInto);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (destination != null)
				{
					JNIEnv.CopyArray(intPtr2, destination);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_copyInto);
				GC.KeepAlive(destination);
			}
			return result;
		}

		// Token: 0x06002586 RID: 9606 RVA: 0x0009D82C File Offset: 0x0009BA2C
		[Register("copyInto", "([B[BIII)[B", "")]
		public unsafe static byte[] CopyInto(byte[] _this_copyInto, byte[] destination, int destinationOffset, int startIndex, int endIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyInto);
			IntPtr intPtr2 = JNIEnv.NewArray(destination);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)5) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(destinationOffset);
				ptr[3] = new JniArgumentValue(startIndex);
				ptr[4] = new JniArgumentValue(endIndex);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyInto.([B[BIII)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_copyInto != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyInto);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (destination != null)
				{
					JNIEnv.CopyArray(intPtr2, destination);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_copyInto);
				GC.KeepAlive(destination);
			}
			return result;
		}

		// Token: 0x06002587 RID: 9607 RVA: 0x0009D92C File Offset: 0x0009BB2C
		[Register("copyInto", "([C[CIII)[C", "")]
		public unsafe static char[] CopyInto(char[] _this_copyInto, char[] destination, int destinationOffset, int startIndex, int endIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyInto);
			IntPtr intPtr2 = JNIEnv.NewArray(destination);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)5) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(destinationOffset);
				ptr[3] = new JniArgumentValue(startIndex);
				ptr[4] = new JniArgumentValue(endIndex);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyInto.([C[CIII)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_copyInto != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyInto);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (destination != null)
				{
					JNIEnv.CopyArray(intPtr2, destination);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_copyInto);
				GC.KeepAlive(destination);
			}
			return result;
		}

		// Token: 0x06002588 RID: 9608 RVA: 0x0009DA2C File Offset: 0x0009BC2C
		[Register("copyInto", "([D[DIII)[D", "")]
		public unsafe static double[] CopyInto(double[] _this_copyInto, double[] destination, int destinationOffset, int startIndex, int endIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyInto);
			IntPtr intPtr2 = JNIEnv.NewArray(destination);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)5) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(destinationOffset);
				ptr[3] = new JniArgumentValue(startIndex);
				ptr[4] = new JniArgumentValue(endIndex);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyInto.([D[DIII)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_copyInto != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyInto);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (destination != null)
				{
					JNIEnv.CopyArray(intPtr2, destination);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_copyInto);
				GC.KeepAlive(destination);
			}
			return result;
		}

		// Token: 0x06002589 RID: 9609 RVA: 0x0009DB2C File Offset: 0x0009BD2C
		[Register("copyInto", "([F[FIII)[F", "")]
		public unsafe static float[] CopyInto(float[] _this_copyInto, float[] destination, int destinationOffset, int startIndex, int endIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyInto);
			IntPtr intPtr2 = JNIEnv.NewArray(destination);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)5) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(destinationOffset);
				ptr[3] = new JniArgumentValue(startIndex);
				ptr[4] = new JniArgumentValue(endIndex);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyInto.([F[FIII)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_copyInto != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyInto);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (destination != null)
				{
					JNIEnv.CopyArray(intPtr2, destination);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_copyInto);
				GC.KeepAlive(destination);
			}
			return result;
		}

		// Token: 0x0600258A RID: 9610 RVA: 0x0009DC2C File Offset: 0x0009BE2C
		[Register("copyInto", "([I[IIII)[I", "")]
		public unsafe static int[] CopyInto(int[] _this_copyInto, int[] destination, int destinationOffset, int startIndex, int endIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyInto);
			IntPtr intPtr2 = JNIEnv.NewArray(destination);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)5) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(destinationOffset);
				ptr[3] = new JniArgumentValue(startIndex);
				ptr[4] = new JniArgumentValue(endIndex);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyInto.([I[IIII)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_copyInto != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyInto);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (destination != null)
				{
					JNIEnv.CopyArray(intPtr2, destination);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_copyInto);
				GC.KeepAlive(destination);
			}
			return result;
		}

		// Token: 0x0600258B RID: 9611 RVA: 0x0009DD2C File Offset: 0x0009BF2C
		[Register("copyInto", "([J[JIII)[J", "")]
		public unsafe static long[] CopyInto(long[] _this_copyInto, long[] destination, int destinationOffset, int startIndex, int endIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyInto);
			IntPtr intPtr2 = JNIEnv.NewArray(destination);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)5) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(destinationOffset);
				ptr[3] = new JniArgumentValue(startIndex);
				ptr[4] = new JniArgumentValue(endIndex);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyInto.([J[JIII)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_copyInto != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyInto);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (destination != null)
				{
					JNIEnv.CopyArray(intPtr2, destination);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_copyInto);
				GC.KeepAlive(destination);
			}
			return result;
		}

		// Token: 0x0600258C RID: 9612 RVA: 0x0009DE2C File Offset: 0x0009C02C
		[Register("copyInto", "([S[SIII)[S", "")]
		public unsafe static short[] CopyInto(short[] _this_copyInto, short[] destination, int destinationOffset, int startIndex, int endIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyInto);
			IntPtr intPtr2 = JNIEnv.NewArray(destination);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)5) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(destinationOffset);
				ptr[3] = new JniArgumentValue(startIndex);
				ptr[4] = new JniArgumentValue(endIndex);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyInto.([S[SIII)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_copyInto != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyInto);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (destination != null)
				{
					JNIEnv.CopyArray(intPtr2, destination);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_copyInto);
				GC.KeepAlive(destination);
			}
			return result;
		}

		// Token: 0x0600258D RID: 9613 RVA: 0x0009DF2C File Offset: 0x0009C12C
		[Register("copyInto", "([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] CopyInto(Java.Lang.Object[] _this_copyInto, Java.Lang.Object[] destination, int destinationOffset, int startIndex, int endIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_copyInto);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(destination);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)5) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(destinationOffset);
				ptr[3] = new JniArgumentValue(startIndex);
				ptr[4] = new JniArgumentValue(endIndex);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyInto.([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_copyInto != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_copyInto);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (destination != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, destination);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_copyInto);
				GC.KeepAlive(destination);
			}
			return result;
		}

		// Token: 0x0600258E RID: 9614 RVA: 0x0009E02C File Offset: 0x0009C22C
		[Register("copyOfRange", "([ZII)[Z", "")]
		public unsafe static bool[] CopyOfRange(bool[] _this_copyOfRangeImpl, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyOfRangeImpl);
			bool[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				result = (bool[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyOfRange.([ZII)[Z", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(bool));
			}
			finally
			{
				if (_this_copyOfRangeImpl != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyOfRangeImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_copyOfRangeImpl);
			}
			return result;
		}

		// Token: 0x0600258F RID: 9615 RVA: 0x0009E0E0 File Offset: 0x0009C2E0
		[Register("copyOfRange", "([BII)[B", "")]
		public unsafe static byte[] CopyOfRange(byte[] _this_copyOfRangeImpl, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyOfRangeImpl);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyOfRange.([BII)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_copyOfRangeImpl != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyOfRangeImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_copyOfRangeImpl);
			}
			return result;
		}

		// Token: 0x06002590 RID: 9616 RVA: 0x0009E194 File Offset: 0x0009C394
		[Register("copyOfRange", "([CII)[C", "")]
		public unsafe static char[] CopyOfRange(char[] _this_copyOfRangeImpl, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyOfRangeImpl);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyOfRange.([CII)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_copyOfRangeImpl != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyOfRangeImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_copyOfRangeImpl);
			}
			return result;
		}

		// Token: 0x06002591 RID: 9617 RVA: 0x0009E248 File Offset: 0x0009C448
		[Register("copyOfRange", "([DII)[D", "")]
		public unsafe static double[] CopyOfRange(double[] _this_copyOfRangeImpl, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyOfRangeImpl);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyOfRange.([DII)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_copyOfRangeImpl != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyOfRangeImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_copyOfRangeImpl);
			}
			return result;
		}

		// Token: 0x06002592 RID: 9618 RVA: 0x0009E2FC File Offset: 0x0009C4FC
		[Register("copyOfRange", "([FII)[F", "")]
		public unsafe static float[] CopyOfRange(float[] _this_copyOfRangeImpl, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyOfRangeImpl);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyOfRange.([FII)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_copyOfRangeImpl != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyOfRangeImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_copyOfRangeImpl);
			}
			return result;
		}

		// Token: 0x06002593 RID: 9619 RVA: 0x0009E3B0 File Offset: 0x0009C5B0
		[Register("copyOfRange", "([III)[I", "")]
		public unsafe static int[] CopyOfRange(int[] _this_copyOfRangeImpl, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyOfRangeImpl);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyOfRange.([III)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_copyOfRangeImpl != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyOfRangeImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_copyOfRangeImpl);
			}
			return result;
		}

		// Token: 0x06002594 RID: 9620 RVA: 0x0009E464 File Offset: 0x0009C664
		[Register("copyOfRange", "([JII)[J", "")]
		public unsafe static long[] CopyOfRange(long[] _this_copyOfRangeImpl, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyOfRangeImpl);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyOfRange.([JII)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_copyOfRangeImpl != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyOfRangeImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_copyOfRangeImpl);
			}
			return result;
		}

		// Token: 0x06002595 RID: 9621 RVA: 0x0009E518 File Offset: 0x0009C718
		[Register("copyOfRange", "([SII)[S", "")]
		public unsafe static short[] CopyOfRange(short[] _this_copyOfRangeImpl, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_copyOfRangeImpl);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyOfRange.([SII)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_copyOfRangeImpl != null)
				{
					JNIEnv.CopyArray(intPtr, _this_copyOfRangeImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_copyOfRangeImpl);
			}
			return result;
		}

		// Token: 0x06002596 RID: 9622 RVA: 0x0009E5CC File Offset: 0x0009C7CC
		[Register("copyOfRange", "([Ljava/lang/Object;II)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] CopyOfRange(Java.Lang.Object[] _this_copyOfRangeImpl, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_copyOfRangeImpl);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("copyOfRange.([Ljava/lang/Object;II)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_copyOfRangeImpl != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_copyOfRangeImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_copyOfRangeImpl);
			}
			return result;
		}

		// Token: 0x06002597 RID: 9623 RVA: 0x0009E680 File Offset: 0x0009C880
		[Register("fill", "([ZZII)V", "")]
		public unsafe static void Fill(bool[] _this_fill, bool element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fill);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("fill.([ZZII)V", ptr);
			}
			finally
			{
				if (_this_fill != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fill);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_fill);
			}
		}

		// Token: 0x06002598 RID: 9624 RVA: 0x0009E72C File Offset: 0x0009C92C
		[Register("fill", "([BBII)V", "")]
		public unsafe static void Fill(byte[] _this_fill, sbyte element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fill);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("fill.([BBII)V", ptr);
			}
			finally
			{
				if (_this_fill != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fill);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_fill);
			}
		}

		// Token: 0x06002599 RID: 9625 RVA: 0x0009E7D8 File Offset: 0x0009C9D8
		[Register("fill", "([CCII)V", "")]
		public unsafe static void Fill(char[] _this_fill, char element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fill);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("fill.([CCII)V", ptr);
			}
			finally
			{
				if (_this_fill != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fill);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_fill);
			}
		}

		// Token: 0x0600259A RID: 9626 RVA: 0x0009E884 File Offset: 0x0009CA84
		[Register("fill", "([DDII)V", "")]
		public unsafe static void Fill(double[] _this_fill, double element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fill);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("fill.([DDII)V", ptr);
			}
			finally
			{
				if (_this_fill != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fill);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_fill);
			}
		}

		// Token: 0x0600259B RID: 9627 RVA: 0x0009E930 File Offset: 0x0009CB30
		[Register("fill", "([FFII)V", "")]
		public unsafe static void Fill(float[] _this_fill, float element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fill);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("fill.([FFII)V", ptr);
			}
			finally
			{
				if (_this_fill != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fill);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_fill);
			}
		}

		// Token: 0x0600259C RID: 9628 RVA: 0x0009E9DC File Offset: 0x0009CBDC
		[Register("fill", "([IIII)V", "")]
		public unsafe static void Fill(int[] _this_fill, int element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fill);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("fill.([IIII)V", ptr);
			}
			finally
			{
				if (_this_fill != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fill);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_fill);
			}
		}

		// Token: 0x0600259D RID: 9629 RVA: 0x0009EA88 File Offset: 0x0009CC88
		[Register("fill", "([JJII)V", "")]
		public unsafe static void Fill(long[] _this_fill, long element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fill);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("fill.([JJII)V", ptr);
			}
			finally
			{
				if (_this_fill != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fill);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_fill);
			}
		}

		// Token: 0x0600259E RID: 9630 RVA: 0x0009EB34 File Offset: 0x0009CD34
		[Register("fill", "([SSII)V", "")]
		public unsafe static void Fill(short[] _this_fill, short element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_fill);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("fill.([SSII)V", ptr);
			}
			finally
			{
				if (_this_fill != null)
				{
					JNIEnv.CopyArray(intPtr, _this_fill);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_fill);
			}
		}

		// Token: 0x0600259F RID: 9631 RVA: 0x0009EBE0 File Offset: 0x0009CDE0
		[Register("fill", "([Ljava/lang/Object;Ljava/lang/Object;II)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static void Fill(Java.Lang.Object[] _this_fill, [Nullable(2)] Java.Lang.Object element, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_fill);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(element);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("fill.([Ljava/lang/Object;Ljava/lang/Object;II)V", ptr);
			}
			finally
			{
				if (_this_fill != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_fill);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_fill);
				GC.KeepAlive(element);
			}
		}

		// Token: 0x060025A0 RID: 9632 RVA: 0x0009EC9C File Offset: 0x0009CE9C
		[Register("filterIsInstance", "([Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"R"
		})]
		public unsafe static System.Collections.IList FilterIsInstance(Java.Lang.Object[] _this_filterIsInstance, Class klass)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_filterIsInstance);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((klass == null) ? IntPtr.Zero : klass.Handle);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIsInstance.([Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIsInstance != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_filterIsInstance);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_filterIsInstance);
				GC.KeepAlive(klass);
			}
			return result;
		}

		// Token: 0x060025A1 RID: 9633 RVA: 0x0009ED40 File Offset: 0x0009CF40
		[Register("filterIsInstanceTo", "([Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;", "")]
		[JavaTypeParameters(new string[]
		{
			"C extends java.util.Collection<? super R>",
			"R"
		})]
		public unsafe static Java.Lang.Object FilterIsInstanceTo(Java.Lang.Object[] _this_filterIsInstanceTo, Java.Lang.Object destination, Class klass)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_filterIsInstanceTo);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(destination);
			Java.Lang.Object @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				ptr[2] = new JniArgumentValue((klass == null) ? IntPtr.Zero : klass.Handle);
				@object = Java.Lang.Object.GetObject<Java.Lang.Object>(ArraysKt._members.StaticMethods.InvokeObjectMethod("filterIsInstanceTo.([Ljava/lang/Object;Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_filterIsInstanceTo != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_filterIsInstanceTo);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_filterIsInstanceTo);
				GC.KeepAlive(destination);
				GC.KeepAlive(klass);
			}
			return @object;
		}

		// Token: 0x060025A2 RID: 9634 RVA: 0x0009EE10 File Offset: 0x0009D010
		[Register("plus", "([ZZ)[Z", "")]
		public unsafe static bool[] Plus(bool[] _this_plus, bool element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			bool[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = (bool[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([ZZ)[Z", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(bool));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_plus);
			}
			return result;
		}

		// Token: 0x060025A3 RID: 9635 RVA: 0x0009EEAC File Offset: 0x0009D0AC
		[Register("plus", "([Z[Z)[Z", "")]
		public unsafe static bool[] Plus(bool[] _this_plus, bool[] elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JNIEnv.NewArray(elements);
			bool[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (bool[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([Z[Z)[Z", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(bool));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (elements != null)
				{
					JNIEnv.CopyArray(intPtr2, elements);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025A4 RID: 9636 RVA: 0x0009EF68 File Offset: 0x0009D168
		[Register("plus", "([ZLjava/util/Collection;)[Z", "")]
		public unsafe static bool[] Plus(bool[] _this_plus, ICollection<Java.Lang.Boolean> elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JavaCollection<Java.Lang.Boolean>.ToLocalJniHandle(elements);
			bool[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (bool[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([ZLjava/util/Collection;)[Z", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(bool));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025A5 RID: 9637 RVA: 0x0009F01C File Offset: 0x0009D21C
		[Register("plus", "([BB)[B", "")]
		public unsafe static byte[] Plus(byte[] _this_plus, sbyte element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([BB)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_plus);
			}
			return result;
		}

		// Token: 0x060025A6 RID: 9638 RVA: 0x0009F0B8 File Offset: 0x0009D2B8
		[Register("plus", "([B[B)[B", "")]
		public unsafe static byte[] Plus(byte[] _this_plus, byte[] elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JNIEnv.NewArray(elements);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([B[B)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (elements != null)
				{
					JNIEnv.CopyArray(intPtr2, elements);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025A7 RID: 9639 RVA: 0x0009F174 File Offset: 0x0009D374
		[Register("plus", "([BLjava/util/Collection;)[B", "")]
		public unsafe static byte[] Plus(byte[] _this_plus, ICollection<Java.Lang.Byte> elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JavaCollection<Java.Lang.Byte>.ToLocalJniHandle(elements);
			byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([BLjava/util/Collection;)[B", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(byte));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025A8 RID: 9640 RVA: 0x0009F228 File Offset: 0x0009D428
		[Register("plus", "([CC)[C", "")]
		public unsafe static char[] Plus(char[] _this_plus, char element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([CC)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_plus);
			}
			return result;
		}

		// Token: 0x060025A9 RID: 9641 RVA: 0x0009F2C4 File Offset: 0x0009D4C4
		[Register("plus", "([C[C)[C", "")]
		public unsafe static char[] Plus(char[] _this_plus, char[] elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JNIEnv.NewArray(elements);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([C[C)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (elements != null)
				{
					JNIEnv.CopyArray(intPtr2, elements);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025AA RID: 9642 RVA: 0x0009F380 File Offset: 0x0009D580
		[Register("plus", "([CLjava/util/Collection;)[C", "")]
		public unsafe static char[] Plus(char[] _this_plus, ICollection<Character> elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JavaCollection<Character>.ToLocalJniHandle(elements);
			char[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (char[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([CLjava/util/Collection;)[C", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(char));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025AB RID: 9643 RVA: 0x0009F434 File Offset: 0x0009D634
		[Register("plus", "([DD)[D", "")]
		public unsafe static double[] Plus(double[] _this_plus, double element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([DD)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_plus);
			}
			return result;
		}

		// Token: 0x060025AC RID: 9644 RVA: 0x0009F4D0 File Offset: 0x0009D6D0
		[Register("plus", "([D[D)[D", "")]
		public unsafe static double[] Plus(double[] _this_plus, double[] elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JNIEnv.NewArray(elements);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([D[D)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (elements != null)
				{
					JNIEnv.CopyArray(intPtr2, elements);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025AD RID: 9645 RVA: 0x0009F58C File Offset: 0x0009D78C
		[Register("plus", "([DLjava/util/Collection;)[D", "")]
		public unsafe static double[] Plus(double[] _this_plus, ICollection<Java.Lang.Double> elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JavaCollection<Java.Lang.Double>.ToLocalJniHandle(elements);
			double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([DLjava/util/Collection;)[D", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(double));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025AE RID: 9646 RVA: 0x0009F640 File Offset: 0x0009D840
		[Register("plus", "([FF)[F", "")]
		public unsafe static float[] Plus(float[] _this_plus, float element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([FF)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_plus);
			}
			return result;
		}

		// Token: 0x060025AF RID: 9647 RVA: 0x0009F6DC File Offset: 0x0009D8DC
		[Register("plus", "([F[F)[F", "")]
		public unsafe static float[] Plus(float[] _this_plus, float[] elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JNIEnv.NewArray(elements);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([F[F)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (elements != null)
				{
					JNIEnv.CopyArray(intPtr2, elements);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025B0 RID: 9648 RVA: 0x0009F798 File Offset: 0x0009D998
		[Register("plus", "([FLjava/util/Collection;)[F", "")]
		public unsafe static float[] Plus(float[] _this_plus, ICollection<Float> elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JavaCollection<Float>.ToLocalJniHandle(elements);
			float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([FLjava/util/Collection;)[F", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(float));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025B1 RID: 9649 RVA: 0x0009F84C File Offset: 0x0009DA4C
		[Register("plus", "([II)[I", "")]
		public unsafe static int[] Plus(int[] _this_plus, int element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([II)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_plus);
			}
			return result;
		}

		// Token: 0x060025B2 RID: 9650 RVA: 0x0009F8E8 File Offset: 0x0009DAE8
		[Register("plus", "([I[I)[I", "")]
		public unsafe static int[] Plus(int[] _this_plus, int[] elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JNIEnv.NewArray(elements);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([I[I)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (elements != null)
				{
					JNIEnv.CopyArray(intPtr2, elements);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025B3 RID: 9651 RVA: 0x0009F9A4 File Offset: 0x0009DBA4
		[Register("plus", "([ILjava/util/Collection;)[I", "")]
		public unsafe static int[] Plus(int[] _this_plus, ICollection<Integer> elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JavaCollection<Integer>.ToLocalJniHandle(elements);
			int[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (int[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([ILjava/util/Collection;)[I", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(int));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025B4 RID: 9652 RVA: 0x0009FA58 File Offset: 0x0009DC58
		[Register("plus", "([JLjava/util/Collection;)[J", "")]
		public unsafe static long[] Plus(long[] _this_plus, ICollection<Long> elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JavaCollection<Long>.ToLocalJniHandle(elements);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([JLjava/util/Collection;)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025B5 RID: 9653 RVA: 0x0009FB0C File Offset: 0x0009DD0C
		[Register("plus", "([JJ)[J", "")]
		public unsafe static long[] Plus(long[] _this_plus, long element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([JJ)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_plus);
			}
			return result;
		}

		// Token: 0x060025B6 RID: 9654 RVA: 0x0009FBA8 File Offset: 0x0009DDA8
		[Register("plus", "([J[J)[J", "")]
		public unsafe static long[] Plus(long[] _this_plus, long[] elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JNIEnv.NewArray(elements);
			long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([J[J)[J", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(long));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (elements != null)
				{
					JNIEnv.CopyArray(intPtr2, elements);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025B7 RID: 9655 RVA: 0x0009FC64 File Offset: 0x0009DE64
		[Register("plus", "([SLjava/util/Collection;)[S", "")]
		public unsafe static short[] Plus(short[] _this_plus, ICollection<Short> elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JavaCollection<Short>.ToLocalJniHandle(elements);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([SLjava/util/Collection;)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025B8 RID: 9656 RVA: 0x0009FD18 File Offset: 0x0009DF18
		[Register("plus", "([SS)[S", "")]
		public unsafe static short[] Plus(short[] _this_plus, short element)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(element);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([SS)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_plus);
			}
			return result;
		}

		// Token: 0x060025B9 RID: 9657 RVA: 0x0009FDB4 File Offset: 0x0009DFB4
		[Register("plus", "([S[S)[S", "")]
		public unsafe static short[] Plus(short[] _this_plus, short[] elements)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_plus);
			IntPtr intPtr2 = JNIEnv.NewArray(elements);
			short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([S[S)[S", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(short));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (elements != null)
				{
					JNIEnv.CopyArray(intPtr2, elements);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025BA RID: 9658 RVA: 0x0009FE70 File Offset: 0x0009E070
		[Register("plus", "([Ljava/lang/Object;Ljava/util/Collection;)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] Plus(Java.Lang.Object[] _this_plus, System.Collections.ICollection elements)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_plus);
			IntPtr intPtr2 = JavaCollection.ToLocalJniHandle(elements);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([Ljava/lang/Object;Ljava/util/Collection;)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025BB RID: 9659 RVA: 0x0009FF24 File Offset: 0x0009E124
		[Register("plus", "([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] Plus(Java.Lang.Object[] _this_plus, [Nullable(2)] Java.Lang.Object element)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_plus);
			IntPtr intPtr2 = JNIEnv.ToLocalJniHandle(element);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				JNIEnv.DeleteLocalRef(intPtr2);
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(element);
			}
			return result;
		}

		// Token: 0x060025BC RID: 9660 RVA: 0x0009FFD8 File Offset: 0x0009E1D8
		[Register("plus", "([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] Plus(Java.Lang.Object[] _this_plus, Java.Lang.Object[] elements)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_plus);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(elements);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("plus.([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (_this_plus != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_plus);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (elements != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, elements);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_plus);
				GC.KeepAlive(elements);
			}
			return result;
		}

		// Token: 0x060025BD RID: 9661 RVA: 0x000A0094 File Offset: 0x0009E294
		[Register("sort", "([B)V", "")]
		public unsafe static void Sort(byte[] _this_sort)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([B)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025BE RID: 9662 RVA: 0x000A0100 File Offset: 0x0009E300
		[Register("sort", "([BII)V", "")]
		public unsafe static void Sort(byte[] _this_sort, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([BII)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025BF RID: 9663 RVA: 0x000A0194 File Offset: 0x0009E394
		[Register("sort", "([C)V", "")]
		public unsafe static void Sort(char[] _this_sort)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([C)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025C0 RID: 9664 RVA: 0x000A0200 File Offset: 0x0009E400
		[Register("sort", "([CII)V", "")]
		public unsafe static void Sort(char[] _this_sort, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([CII)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025C1 RID: 9665 RVA: 0x000A0294 File Offset: 0x0009E494
		[Register("sort", "([D)V", "")]
		public unsafe static void Sort(double[] _this_sort)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([D)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025C2 RID: 9666 RVA: 0x000A0300 File Offset: 0x0009E500
		[Register("sort", "([DII)V", "")]
		public unsafe static void Sort(double[] _this_sort, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([DII)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025C3 RID: 9667 RVA: 0x000A0394 File Offset: 0x0009E594
		[Register("sort", "([F)V", "")]
		public unsafe static void Sort(float[] _this_sort)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([F)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025C4 RID: 9668 RVA: 0x000A0400 File Offset: 0x0009E600
		[Register("sort", "([FII)V", "")]
		public unsafe static void Sort(float[] _this_sort, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([FII)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025C5 RID: 9669 RVA: 0x000A0494 File Offset: 0x0009E694
		[Register("sort", "([I)V", "")]
		public unsafe static void Sort(int[] _this_sort)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([I)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025C6 RID: 9670 RVA: 0x000A0500 File Offset: 0x0009E700
		[Register("sort", "([III)V", "")]
		public unsafe static void Sort(int[] _this_sort, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([III)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025C7 RID: 9671 RVA: 0x000A0594 File Offset: 0x0009E794
		[Register("sort", "([J)V", "")]
		public unsafe static void Sort(long[] _this_sort)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([J)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025C8 RID: 9672 RVA: 0x000A0600 File Offset: 0x0009E800
		[Register("sort", "([JII)V", "")]
		public unsafe static void Sort(long[] _this_sort, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([JII)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025C9 RID: 9673 RVA: 0x000A0694 File Offset: 0x0009E894
		[Register("sort", "([S)V", "")]
		public unsafe static void Sort(short[] _this_sort)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([S)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025CA RID: 9674 RVA: 0x000A0700 File Offset: 0x0009E900
		[Register("sort", "([SII)V", "")]
		public unsafe static void Sort(short[] _this_sort, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([SII)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025CB RID: 9675 RVA: 0x000A0794 File Offset: 0x0009E994
		[Register("sort", "([Ljava/lang/Object;)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static void Sort(Java.Lang.Object[] _this_sort)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([Ljava/lang/Object;)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025CC RID: 9676 RVA: 0x000A0800 File Offset: 0x0009EA00
		[Register("sort", "([Ljava/lang/Comparable;II)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		public unsafe static void Sort(Java.Lang.Object[] _this_sort, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sort);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)3) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(fromIndex);
				ptr[2] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sort.([Ljava/lang/Comparable;II)V", ptr);
			}
			finally
			{
				if (_this_sort != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sort);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sort);
			}
		}

		// Token: 0x060025CD RID: 9677 RVA: 0x000A0894 File Offset: 0x0009EA94
		[Register("sortWith", "([Ljava/lang/Object;Ljava/util/Comparator;)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static void SortWith(Java.Lang.Object[] _this_sortWith, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortWith);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortWith.([Ljava/lang/Object;Ljava/util/Comparator;)V", ptr);
			}
			finally
			{
				if (_this_sortWith != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortWith);
				GC.KeepAlive(comparator);
			}
		}

		// Token: 0x060025CE RID: 9678 RVA: 0x000A092C File Offset: 0x0009EB2C
		[Register("sortWith", "([Ljava/lang/Object;Ljava/util/Comparator;II)V", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static void SortWith(Java.Lang.Object[] _this_sortWith, IComparator comparator, int fromIndex, int toIndex)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_sortWith);
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)4) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				ptr[2] = new JniArgumentValue(fromIndex);
				ptr[3] = new JniArgumentValue(toIndex);
				ArraysKt._members.StaticMethods.InvokeVoidMethod("sortWith.([Ljava/lang/Object;Ljava/util/Comparator;II)V", ptr);
			}
			finally
			{
				if (_this_sortWith != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_sortWith);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_sortWith);
				GC.KeepAlive(comparator);
			}
		}

		// Token: 0x060025CF RID: 9679 RVA: 0x000A09F0 File Offset: 0x0009EBF0
		[Register("toSortedSet", "([Z)Ljava/util/SortedSet;", "")]
		public unsafe static ISortedSet ToSortedSet(bool[] _this_toSortedSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSortedSet);
			ISortedSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISortedSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSortedSet.([Z)Ljava/util/SortedSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSortedSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSortedSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSortedSet);
			}
			return @object;
		}

		// Token: 0x060025D0 RID: 9680 RVA: 0x000A0A6C File Offset: 0x0009EC6C
		[Register("toSortedSet", "([B)Ljava/util/SortedSet;", "")]
		public unsafe static ISortedSet ToSortedSet(byte[] _this_toSortedSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSortedSet);
			ISortedSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISortedSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSortedSet.([B)Ljava/util/SortedSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSortedSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSortedSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSortedSet);
			}
			return @object;
		}

		// Token: 0x060025D1 RID: 9681 RVA: 0x000A0AE8 File Offset: 0x0009ECE8
		[Register("toSortedSet", "([C)Ljava/util/SortedSet;", "")]
		public unsafe static ISortedSet ToSortedSet(char[] _this_toSortedSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSortedSet);
			ISortedSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISortedSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSortedSet.([C)Ljava/util/SortedSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSortedSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSortedSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSortedSet);
			}
			return @object;
		}

		// Token: 0x060025D2 RID: 9682 RVA: 0x000A0B64 File Offset: 0x0009ED64
		[Register("toSortedSet", "([D)Ljava/util/SortedSet;", "")]
		public unsafe static ISortedSet ToSortedSet(double[] _this_toSortedSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSortedSet);
			ISortedSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISortedSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSortedSet.([D)Ljava/util/SortedSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSortedSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSortedSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSortedSet);
			}
			return @object;
		}

		// Token: 0x060025D3 RID: 9683 RVA: 0x000A0BE0 File Offset: 0x0009EDE0
		[Register("toSortedSet", "([F)Ljava/util/SortedSet;", "")]
		public unsafe static ISortedSet ToSortedSet(float[] _this_toSortedSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSortedSet);
			ISortedSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISortedSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSortedSet.([F)Ljava/util/SortedSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSortedSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSortedSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSortedSet);
			}
			return @object;
		}

		// Token: 0x060025D4 RID: 9684 RVA: 0x000A0C5C File Offset: 0x0009EE5C
		[Register("toSortedSet", "([I)Ljava/util/SortedSet;", "")]
		public unsafe static ISortedSet ToSortedSet(int[] _this_toSortedSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSortedSet);
			ISortedSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISortedSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSortedSet.([I)Ljava/util/SortedSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSortedSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSortedSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSortedSet);
			}
			return @object;
		}

		// Token: 0x060025D5 RID: 9685 RVA: 0x000A0CD8 File Offset: 0x0009EED8
		[Register("toSortedSet", "([J)Ljava/util/SortedSet;", "")]
		public unsafe static ISortedSet ToSortedSet(long[] _this_toSortedSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSortedSet);
			ISortedSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISortedSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSortedSet.([J)Ljava/util/SortedSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSortedSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSortedSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSortedSet);
			}
			return @object;
		}

		// Token: 0x060025D6 RID: 9686 RVA: 0x000A0D54 File Offset: 0x0009EF54
		[Register("toSortedSet", "([S)Ljava/util/SortedSet;", "")]
		public unsafe static ISortedSet ToSortedSet(short[] _this_toSortedSet)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toSortedSet);
			ISortedSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISortedSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSortedSet.([S)Ljava/util/SortedSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSortedSet != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toSortedSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSortedSet);
			}
			return @object;
		}

		// Token: 0x060025D7 RID: 9687 RVA: 0x000A0DD0 File Offset: 0x0009EFD0
		[Register("toSortedSet", "([Ljava/lang/Comparable;)Ljava/util/SortedSet;", "")]
		[JavaTypeParameters(new string[]
		{
			"T extends java.lang.Comparable<? super T>"
		})]
		public unsafe static ISortedSet ToSortedSet(Java.Lang.Object[] _this_toSortedSet)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_toSortedSet);
			ISortedSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<ISortedSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSortedSet.([Ljava/lang/Comparable;)Ljava/util/SortedSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSortedSet != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_toSortedSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSortedSet);
			}
			return @object;
		}

		// Token: 0x060025D8 RID: 9688 RVA: 0x000A0E4C File Offset: 0x0009F04C
		[Register("toSortedSet", "([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/SortedSet;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static ISortedSet ToSortedSet(Java.Lang.Object[] _this_toSortedSet, IComparator comparator)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_toSortedSet);
			ISortedSet @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue((comparator == null) ? IntPtr.Zero : ((Java.Lang.Object)comparator).Handle);
				@object = Java.Lang.Object.GetObject<ISortedSet>(ArraysKt._members.StaticMethods.InvokeObjectMethod("toSortedSet.([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/SortedSet;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_toSortedSet != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_toSortedSet);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toSortedSet);
				GC.KeepAlive(comparator);
			}
			return @object;
		}

		// Token: 0x060025D9 RID: 9689 RVA: 0x000A0EF4 File Offset: 0x0009F0F4
		[Register("toTypedArray", "([Z)[Ljava/lang/Boolean;", "")]
		public unsafe static Java.Lang.Boolean[] ToTypedArray(bool[] _this_toTypedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toTypedArray);
			Java.Lang.Boolean[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Java.Lang.Boolean[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toTypedArray.([Z)[Ljava/lang/Boolean;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Boolean));
			}
			finally
			{
				if (_this_toTypedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toTypedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toTypedArray);
			}
			return result;
		}

		// Token: 0x060025DA RID: 9690 RVA: 0x000A0F80 File Offset: 0x0009F180
		[Register("toTypedArray", "([B)[Ljava/lang/Byte;", "")]
		public unsafe static Java.Lang.Byte[] ToTypedArray(byte[] _this_toTypedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toTypedArray);
			Java.Lang.Byte[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Java.Lang.Byte[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toTypedArray.([B)[Ljava/lang/Byte;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Byte));
			}
			finally
			{
				if (_this_toTypedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toTypedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toTypedArray);
			}
			return result;
		}

		// Token: 0x060025DB RID: 9691 RVA: 0x000A100C File Offset: 0x0009F20C
		[Register("toTypedArray", "([C)[Ljava/lang/Character;", "")]
		public unsafe static Character[] ToTypedArray(char[] _this_toTypedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toTypedArray);
			Character[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Character[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toTypedArray.([C)[Ljava/lang/Character;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Character));
			}
			finally
			{
				if (_this_toTypedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toTypedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toTypedArray);
			}
			return result;
		}

		// Token: 0x060025DC RID: 9692 RVA: 0x000A1098 File Offset: 0x0009F298
		[Register("toTypedArray", "([D)[Ljava/lang/Double;", "")]
		public unsafe static Java.Lang.Double[] ToTypedArray(double[] _this_toTypedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toTypedArray);
			Java.Lang.Double[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Java.Lang.Double[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toTypedArray.([D)[Ljava/lang/Double;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Double));
			}
			finally
			{
				if (_this_toTypedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toTypedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toTypedArray);
			}
			return result;
		}

		// Token: 0x060025DD RID: 9693 RVA: 0x000A1124 File Offset: 0x0009F324
		[Register("toTypedArray", "([F)[Ljava/lang/Float;", "")]
		public unsafe static Float[] ToTypedArray(float[] _this_toTypedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toTypedArray);
			Float[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Float[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toTypedArray.([F)[Ljava/lang/Float;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Float));
			}
			finally
			{
				if (_this_toTypedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toTypedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toTypedArray);
			}
			return result;
		}

		// Token: 0x060025DE RID: 9694 RVA: 0x000A11B0 File Offset: 0x0009F3B0
		[Register("toTypedArray", "([I)[Ljava/lang/Integer;", "")]
		public unsafe static Integer[] ToTypedArray(int[] _this_toTypedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toTypedArray);
			Integer[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Integer[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toTypedArray.([I)[Ljava/lang/Integer;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Integer));
			}
			finally
			{
				if (_this_toTypedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toTypedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toTypedArray);
			}
			return result;
		}

		// Token: 0x060025DF RID: 9695 RVA: 0x000A123C File Offset: 0x0009F43C
		[Register("toTypedArray", "([J)[Ljava/lang/Long;", "")]
		public unsafe static Long[] ToTypedArray(long[] _this_toTypedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toTypedArray);
			Long[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Long[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toTypedArray.([J)[Ljava/lang/Long;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Long));
			}
			finally
			{
				if (_this_toTypedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toTypedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toTypedArray);
			}
			return result;
		}

		// Token: 0x060025E0 RID: 9696 RVA: 0x000A12C8 File Offset: 0x0009F4C8
		[Register("toTypedArray", "([S)[Ljava/lang/Short;", "")]
		public unsafe static Short[] ToTypedArray(short[] _this_toTypedArray)
		{
			IntPtr intPtr = JNIEnv.NewArray(_this_toTypedArray);
			Short[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = (Short[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("toTypedArray.([S)[Ljava/lang/Short;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Short));
			}
			finally
			{
				if (_this_toTypedArray != null)
				{
					JNIEnv.CopyArray(intPtr, _this_toTypedArray);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_toTypedArray);
			}
			return result;
		}

		// Token: 0x060025E1 RID: 9697 RVA: 0x000A1354 File Offset: 0x0009F554
		[Register("contentDeepEquals", "([Ljava/lang/Object;[Ljava/lang/Object;)Z", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static bool ContentDeepEquals([Nullable(new byte[]
		{
			2,
			1
		})] Java.Lang.Object[] _this_contentDeepEqualsImpl, [Nullable(new byte[]
		{
			2,
			1
		})] Java.Lang.Object[] other)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_contentDeepEqualsImpl);
			IntPtr intPtr2 = JNIEnv.NewArray<Java.Lang.Object>(other);
			bool result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(intPtr2);
				result = ArraysKt._members.StaticMethods.InvokeBooleanMethod("contentDeepEquals.([Ljava/lang/Object;[Ljava/lang/Object;)Z", ptr);
			}
			finally
			{
				if (_this_contentDeepEqualsImpl != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_contentDeepEqualsImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				if (other != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr2, other);
					JNIEnv.DeleteLocalRef(intPtr2);
				}
				GC.KeepAlive(_this_contentDeepEqualsImpl);
				GC.KeepAlive(other);
			}
			return result;
		}

		// Token: 0x060025E2 RID: 9698 RVA: 0x000A13F0 File Offset: 0x0009F5F0
		[Register("contentDeepToString", "([Ljava/lang/Object;)Ljava/lang/String;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static string ContentDeepToString([Nullable(new byte[]
		{
			2,
			1
		})] Java.Lang.Object[] _this_contentDeepToStringImpl)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_contentDeepToStringImpl);
			string @string;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@string = JNIEnv.GetString(ArraysKt._members.StaticMethods.InvokeObjectMethod("contentDeepToString.([Ljava/lang/Object;)Ljava/lang/String;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_contentDeepToStringImpl != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_contentDeepToStringImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_contentDeepToStringImpl);
			}
			return @string;
		}

		// Token: 0x060025E3 RID: 9699 RVA: 0x000A146C File Offset: 0x0009F66C
		[Register("flatten", "([[Ljava/lang/Object;)Ljava/util/List;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static System.Collections.IList Flatten(Java.Lang.Object[][] _this_flatten)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object[]>(_this_flatten);
			System.Collections.IList result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = JavaList.FromJniHandle(ArraysKt._members.StaticMethods.InvokeObjectMethod("flatten.([[Ljava/lang/Object;)Ljava/util/List;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_flatten != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object[]>(intPtr, _this_flatten);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_flatten);
			}
			return result;
		}

		// Token: 0x060025E4 RID: 9700 RVA: 0x000A14E8 File Offset: 0x0009F6E8
		[Register("unzip", "([Lkotlin/Pair;)Lkotlin/Pair;", "")]
		[JavaTypeParameters(new string[]
		{
			"T",
			"R"
		})]
		public unsafe static Pair Unzip(Pair[] _this_unzip)
		{
			IntPtr intPtr = JNIEnv.NewArray<Pair>(_this_unzip);
			Pair @object;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				@object = Java.Lang.Object.GetObject<Pair>(ArraysKt._members.StaticMethods.InvokeObjectMethod("unzip.([Lkotlin/Pair;)Lkotlin/Pair;", ptr).Handle, JniHandleOwnership.TransferLocalRef);
			}
			finally
			{
				if (_this_unzip != null)
				{
					JNIEnv.CopyArray<Pair>(intPtr, _this_unzip);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_unzip);
			}
			return @object;
		}

		// Token: 0x060025E5 RID: 9701 RVA: 0x000A1564 File Offset: 0x0009F764
		[Register("arrayOfNulls", "([Ljava/lang/Object;I)[Ljava/lang/Object;", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static Java.Lang.Object[] ArrayOfNulls(Java.Lang.Object[] reference, int size)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(reference);
			Java.Lang.Object[] result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				ptr[1] = new JniArgumentValue(size);
				result = (Java.Lang.Object[])JNIEnv.GetArray(ArraysKt._members.StaticMethods.InvokeObjectMethod("arrayOfNulls.([Ljava/lang/Object;I)[Ljava/lang/Object;", ptr).Handle, JniHandleOwnership.TransferLocalRef, typeof(Java.Lang.Object));
			}
			finally
			{
				if (reference != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, reference);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(reference);
			}
			return result;
		}

		// Token: 0x060025E6 RID: 9702 RVA: 0x000A1600 File Offset: 0x0009F800
		[Register("contentDeepHashCode", "([Ljava/lang/Object;)I", "")]
		[JavaTypeParameters(new string[]
		{
			"T"
		})]
		public unsafe static int ContentDeepHashCode([Nullable(new byte[]
		{
			2,
			1
		})] Java.Lang.Object[] _this_contentDeepHashCodeImpl)
		{
			IntPtr intPtr = JNIEnv.NewArray<Java.Lang.Object>(_this_contentDeepHashCodeImpl);
			int result;
			try
			{
				JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)1) * (UIntPtr)sizeof(JniArgumentValue))];
				*ptr = new JniArgumentValue(intPtr);
				result = ArraysKt._members.StaticMethods.InvokeInt32Method("contentDeepHashCode.([Ljava/lang/Object;)I", ptr);
			}
			finally
			{
				if (_this_contentDeepHashCodeImpl != null)
				{
					JNIEnv.CopyArray<Java.Lang.Object>(intPtr, _this_contentDeepHashCodeImpl);
					JNIEnv.DeleteLocalRef(intPtr);
				}
				GC.KeepAlive(_this_contentDeepHashCodeImpl);
			}
			return result;
		}

		// Token: 0x060025E7 RID: 9703 RVA: 0x000A166C File Offset: 0x0009F86C
		[Register("copyOfRangeToIndexCheck", "(II)V", "")]
		public unsafe static void CopyOfRangeToIndexCheck(int toIndex, int size)
		{
			JniArgumentValue* ptr = stackalloc JniArgumentValue[checked(unchecked((UIntPtr)2) * (UIntPtr)sizeof(JniArgumentValue))];
			*ptr = new JniArgumentValue(toIndex);
			ptr[1] = new JniArgumentValue(size);
			ArraysKt._members.StaticMethods.InvokeVoidMethod("copyOfRangeToIndexCheck.(II)V", ptr);
		}

		// Token: 0x0400098E RID: 2446
		private static readonly JniPeerMembers _members = new XAPeerMembers("kotlin/collections/ArraysKt", typeof(ArraysKt));
	}
}
