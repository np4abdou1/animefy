using System;
using System.Text;
using System.Xml.Schema;

namespace System.Xml.Serialization
{
	/// <summary>Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a particular class member as an array of XML elements.</summary>
	// Token: 0x020001DE RID: 478
	[AttributeUsage(AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.ReturnValue, AllowMultiple = false)]
	public class XmlArrayAttribute : Attribute
	{
		/// <summary>Gets or sets the XML element name given to the serialized array.</summary>
		/// <returns>The XML element name of the serialized array. The default is the name of the member to which the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> is assigned.</returns>
		// Token: 0x17000310 RID: 784
		// (get) Token: 0x06000FDB RID: 4059 RVA: 0x000648BC File Offset: 0x00062ABC
		public string ElementName
		{
			get
			{
				if (this.elementName == null)
				{
					return string.Empty;
				}
				return this.elementName;
			}
		}

		/// <summary>Gets or sets a value that indicates whether the XML element name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified or unqualified.</summary>
		/// <returns>One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values. The default is <see langword="XmlSchemaForm.None" />.</returns>
		// Token: 0x17000311 RID: 785
		// (get) Token: 0x06000FDC RID: 4060 RVA: 0x000648D2 File Offset: 0x00062AD2
		public XmlSchemaForm Form
		{
			get
			{
				return this.form;
			}
		}

		/// <summary>Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member as an empty XML tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</summary>
		/// <returns>
		///     <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</returns>
		// Token: 0x17000312 RID: 786
		// (get) Token: 0x06000FDD RID: 4061 RVA: 0x000648DA File Offset: 0x00062ADA
		public bool IsNullable
		{
			get
			{
				return this.isNullable;
			}
		}

		/// <summary>Gets or sets the namespace of the XML element.</summary>
		/// <returns>The namespace of the XML element.</returns>
		// Token: 0x17000313 RID: 787
		// (get) Token: 0x06000FDE RID: 4062 RVA: 0x000648E2 File Offset: 0x00062AE2
		public string Namespace
		{
			get
			{
				return this.ns;
			}
		}

		/// <summary>Gets or sets the explicit order in which the elements are serialized or deserialized.</summary>
		/// <returns>The order of the code generation.</returns>
		// Token: 0x17000314 RID: 788
		// (get) Token: 0x06000FDF RID: 4063 RVA: 0x000648EA File Offset: 0x00062AEA
		public int Order
		{
			get
			{
				return this.order;
			}
		}

		// Token: 0x06000FE0 RID: 4064 RVA: 0x000648F4 File Offset: 0x00062AF4
		internal void AddKeyHash(StringBuilder sb)
		{
			sb.Append("XAAT ");
			KeyHelper.AddField(sb, 1, this.ns);
			KeyHelper.AddField(sb, 2, this.elementName);
			KeyHelper.AddField(sb, 3, this.form.ToString(), XmlSchemaForm.None.ToString());
			KeyHelper.AddField(sb, 4, this.isNullable);
			sb.Append('|');
		}

		// Token: 0x04000B49 RID: 2889
		private string elementName;

		// Token: 0x04000B4A RID: 2890
		private XmlSchemaForm form;

		// Token: 0x04000B4B RID: 2891
		private bool isNullable;

		// Token: 0x04000B4C RID: 2892
		private string ns;

		// Token: 0x04000B4D RID: 2893
		private int order;
	}
}
